version: "3"

volumes:
  localstack_data: {}
  postgres_data: {}

services:
  localstack:
    image: localstack/localstack:3.2.0
    ports:
      - 4566:4566
      - 4510-4559:4510-4559 # external services port range
    environment:
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=requirednotused
      - AWS_SECRET_ACCESS_KEY=requirednotused
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./bin/localstack:/docker-entrypoint-initaws.d
      - ./bin/localstack/policies:/policies
      - localstack_data:/var/lib/localstack
  postgresql:
    image: postgres:15.6-alpine
    ports:
      - ${CHAINSTORAGE_TEMPORAL_POSTGRES_PORT:-5432}:5432
    environment:
      - POSTGRES_USER=temporal
      - POSTGRES_PASSWORD=temporal
    volumes:
      - postgres_data:/var/lib/postgresql/data
  temporal:
    image: temporalio/auto-setup:1.22.5
    depends_on:
      - postgresql
    ports:
      - 7233:7233
    labels:
      service_group: temporal
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - USE_HOSTNAME_IP=true
    restart: always
  temporal-ui:
    image: temporalio/ui:2.23.0
    ports:
      - 8088:8080
    labels:
      service_group: temporal-web
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
    depends_on:
      - temporal
  temporal-admin-tools:
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:1.22.5
    stdin_open: true
    tty: true
