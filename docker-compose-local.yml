version: '3'

volumes:
  dynamodb_data:

services:
  admin:
    command: [ "-c", "trap : INT TERM QUIT; sleep infinity & wait" ]
    entrypoint: /bin/bash
    image: coinbase/chainstorage
    environment:
      - AWS_ENDPOINT_OVERRIDE=http://localstack:4566
      - CADENCE_ENDPOINT_OVERRIDE=temporal:7233
    restart: always
    depends_on:
      - localstack
      - temporal
      - api
  cron:
    command: [ "./cron" ]
    image: coinbase/chainstorage
    environment:
      - AWS_ENDPOINT_OVERRIDE=http://localstack:4566
      - CADENCE_ENDPOINT_OVERRIDE=temporal:7233
      - SDK_ENDPOINT_OVERRIDE=api:9090
# Only use CLIENT_CONFIG_OVERRIDE for testing purposes if the config files could not be set up
#      - 'CLIENT_CONFIG_OVERRIDE={
#                                    "chain": {
#                                        "client": {
#                                            "master": {
#                                                "endpoint_group": "{\n  \"endpoints\": [\n    {\n      \"name\": \"endpoint_name\",\n      \"url\": \"endpoint_url\",\n      \"weight\": 1\n    }\n  ]\n}\n"
#                                            },
#                                            "slave": {
#                                                "endpoint_group": "{\n  \"endpoints\": [\n    {\n      \"name\": \"endpoint_name\",\n      \"url\": \"endpoint_url\",\n      \"weight\": 1\n    }\n  ]\n}\n"
#                                            }
#                                        }
#                                    }
#                                }'
    restart: always
    depends_on:
      - api
  api:
    command: [ "./server" ]
    image: coinbase/chainstorage
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - 9090:9090
    environment:
      - CHAINSTORAGE_CONFIG=ethereum-mainnet
      - AWS_ENDPOINT_OVERRIDE=http://localstack:4566
      - CADENCE_ENDPOINT_OVERRIDE=temporal:7233
# Only use CLIENT_CONFIG_OVERRIDE for testing purposes if the config files could not be set up
#      - 'CLIENT_CONFIG_OVERRIDE={
#                                    "chain": {
#                                        "client": {
#                                            "master": {
#                                                "endpoint_group": "{\n  \"endpoints\": [\n    {\n      \"name\": \"endpoint_name\",\n      \"url\": \"endpoint_url\",\n      \"weight\": 1\n    }\n  ]\n}\n"
#                                            },
#                                            "slave": {
#                                                "endpoint_group": "{\n  \"endpoints\": [\n    {\n      \"name\": \"endpoint_name\",\n      \"url\": \"endpoint_url\",\n      \"weight\": 1\n    }\n  ]\n}\n"
#                                            }
#                                        }
#                                    }
#                                }'
    restart: always
    depends_on:
      - localstack
      - temporal
  localstack:
    image: localstack/localstack:0.11.6
    ports:
      - 4566:4566
    environment:
      - SERVICES=s3,dynamodb,sqs
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=requirednotused
      - AWS_SECRET_ACCESS_KEY=requirednotused
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./bin/localstack:/docker-entrypoint-initaws.d
      - ./bin/localstack/policies:/policies
  postgresql:
    image: postgres:11.2
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=temporal
      - POSTGRES_PASSWORD=temporal
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
  temporal:
    image: temporalio/auto-setup:1.12.4
    depends_on:
      - postgresql
    command: ['autosetup']
    ports:
      - 7233:7233
      - 7234:7234
      - 7235:7235
    labels:
      service_group: temporal
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
      - USE_HOSTNAME_IP=true
    restart: always
  temporal-web:
    image: temporalio/web:1.12.0
    ports:
      - 8088:8088
    labels:
      service_group: temporal-web
    environment:
      - TEMPORAL_GRPC_ENDPOINT=temporal:7233
    depends_on:
      - temporal
