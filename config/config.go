// Code generated for package config by go-bindata DO NOT EDIT. (@generated)
// sources:
// config/chainstorage/arbitrum/mainnet/base.yml
// config/chainstorage/arbitrum/mainnet/development.yml
// config/chainstorage/arbitrum/mainnet/local.yml
// config/chainstorage/arbitrum/mainnet/production.yml
// config/chainstorage/avacchain/mainnet/base.yml
// config/chainstorage/avacchain/mainnet/development.yml
// config/chainstorage/avacchain/mainnet/production.yml
// config/chainstorage/bitcoin/mainnet/base.yml
// config/chainstorage/bitcoin/mainnet/development.yml
// config/chainstorage/bitcoin/mainnet/local.yml
// config/chainstorage/bitcoin/mainnet/production.yml
// config/chainstorage/bsc/mainnet/base.yml
// config/chainstorage/bsc/mainnet/development.yml
// config/chainstorage/bsc/mainnet/local.yml
// config/chainstorage/bsc/mainnet/production.yml
// config/chainstorage/dogecoin/mainnet/base.yml
// config/chainstorage/dogecoin/mainnet/development.yml
// config/chainstorage/dogecoin/mainnet/local.yml
// config/chainstorage/dogecoin/mainnet/production.yml
// config/chainstorage/ethereum/goerli/base.yml
// config/chainstorage/ethereum/goerli/development.yml
// config/chainstorage/ethereum/goerli/local.yml
// config/chainstorage/ethereum/goerli/production.yml
// config/chainstorage/ethereum/mainnet/base.yml
// config/chainstorage/ethereum/mainnet/development.yml
// config/chainstorage/ethereum/mainnet/local.yml
// config/chainstorage/ethereum/mainnet/production.yml
// config/chainstorage/optimism/mainnet/base.yml
// config/chainstorage/optimism/mainnet/development.yml
// config/chainstorage/optimism/mainnet/local.yml
// config/chainstorage/optimism/mainnet/production.yml
// config/chainstorage/polygon/mainnet/base.yml
// config/chainstorage/polygon/mainnet/development.yml
// config/chainstorage/polygon/mainnet/local.yml
// config/chainstorage/polygon/mainnet/production.yml
// config/chainstorage/solana/mainnet/base.yml
// config/chainstorage/solana/mainnet/development.yml
// config/chainstorage/solana/mainnet/local.yml
// config/chainstorage/solana/mainnet/production.yml
package config

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _configChainstorageArbitrumMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5b\x6f\xdb\x36\x14\x7e\xd7\xaf\x20\xb2\xe7\xc4\xb2\xd3\x74\xab\x80\x3d\xf4\x86\x2d\xe8\x9a\x0c\x45\x86\x01\x7b\x21\x8e\xc8\x23\x8b\x30\x2f\x2a\x79\xe4\xda\xfb\xf5\x03\x49\x29\xb2\x3d\x27\x4e\xd1\x75\x41\x5e\x64\xf2\xf0\xdc\xbe\x8f\xdf\x61\x7e\x60\x77\xad\x0a\xac\x51\x1a\x99\x0a\x6c\x89\x16\x3d\x10\x4a\x56\x6f\xd9\x99\x81\x15\x32\xe1\x6c\xa3\x96\x67\x17\xec\xdd\x2d\xbb\xb9\xbd\x63\xef\xdf\x5d\xdf\x5d\x14\xd0\xa9\xaa\x60\xcc\xc0\x86\xdb\xde\xf0\x5a\x3b\xb1\xe2\xd1\x4b\xa8\xd8\xbc\x2c\xcb\xc3\xbd\x50\xb1\xab\xb8\x18\x17\xbe\x38\xbf\x42\x9f\x0c\x0b\xc6\x02\x79\x04\xa3\xec\x92\xd7\x40\xa2\xe5\x41\xfd\x8d\x83\xf1\xb4\xa5\x2c\xa1\x5f\x83\xae\xd8\x3c\xec\x6d\xa4\x20\x8e\xe3\x1a\x2d\x71\x52\x06\xa3\x57\x53\xc0\x97\x10\xd3\x83\x2f\x81\x83\x10\xae\xb7\x54\x31\x89\x6b\xd4\xae\x33\x68\xa9\x60\xac\xee\xc5\x0a\xa9\x62\x67\x67\x05\x63\x52\x7f\x8e\xe6\x8c\x49\xd4\xb0\xe5\x01\x45\xa8\xd8\xab\x54\x05\x63\x16\xa2\x57\xdc\x80\xe9\x34\x72\xd1\x82\xb2\x81\x9c\x87\x25\x0e\xa5\x71\xf0\xb5\x22\xdf\x1b\x6e\x40\x59\x8b\xc4\xa5\xfe\x9c\x8e\xae\x55\x50\xb5\xd2\x8a\xb6\x29\x37\xd7\xd3\xe0\xfb\x65\xf2\x2d\xb7\x16\x8c\x93\x75\x8e\x9d\x7b\x48\x50\xeb\xaf\x0c\x97\x4e\x0f\x1d\x38\x75\x3a\x77\xea\xb4\x0f\xde\xa2\x5a\xb6\xc4\x95\x95\xb8\x79\x8a\xc3\x7a\x3b\x1e\x39\xea\x7a\x8d\x3e\x28\x67\x51\xf2\xd3\x89\x4e\xb6\xa7\x53\x3e\xea\x77\x38\xf7\x58\xee\x0f\xc4\xa8\xb7\xe3\x59\x79\x2c\x1e\x5a\xd9\x39\x65\x47\xda\x74\x1e\x83\x5a\x46\x27\xbd\xd7\x1c\x37\x9d\xf2\x40\xca\xd9\x8a\x5d\x96\xa6\x60\xcc\xe3\x32\xfd\xea\xc3\x39\x42\xa0\xf3\x79\xa2\x6e\x4a\x60\xa0\x1b\x10\x70\xe1\x4c\x74\x14\x92\xe9\x2f\x7f\x5d\xff\x5e\x08\x90\x68\x45\xb2\x01\x29\xe3\xde\xc8\x53\x17\x73\xa9\xd8\x6e\x29\xe7\x63\x9e\xe7\x53\x9e\x1e\x09\x6d\xcc\x84\x77\xe8\x95\x93\x15\xfb\xb1\x48\x67\xa2\xcb\x5c\x60\x20\xf0\x34\x40\x56\xb1\xb2\x98\xf8\xb7\xcc\xb9\x69\x20\x0c\x54\xb1\x79\xfa\x15\x06\xc0\xe6\x93\x61\xba\x6c\x57\x65\x69\xc2\xb8\x96\x43\xb0\x37\xbf\xdd\xbe\xfd\xf0\xf6\xd7\xd7\xd7\x37\xfc\xf5\xa7\x37\xd7\x77\x9f\xfe\xf8\x58\x30\x26\xb4\x42\x4b\xd9\xb7\x81\x40\xe8\xf3\xf7\xd4\x55\xbe\xf4\xae\xef\x86\x52\x19\x0b\x1a\xd6\x78\xc2\x66\x0d\x5a\x49\x20\xf7\xb8\xaf\x91\x1a\x27\x2b\x6b\x10\xa8\xf7\x43\x50\xef\x02\x12\x01\xef\xc0\x07\xf4\x15\x6b\x40\x07\x2c\x18\x53\xde\x63\xa2\x4f\x64\x9a\x54\x81\x20\x62\x15\x55\x2f\xea\x1b\x52\x94\xb7\x8a\xdd\xbc\xbf\xfb\xf3\xf6\xd3\x87\xfb\x0e\xf0\x8f\xaf\xaf\x6f\x6e\xde\xdf\x15\x59\x4f\x79\x56\x95\x7f\x71\x4c\x78\xb7\x03\x92\x07\xbb\xc4\x41\x11\x5f\x14\x4d\x6f\x45\x04\x15\x34\xcf\x05\x9c\x9d\x15\x41\xae\x12\x4d\x7a\x6a\x79\x8b\x20\x63\xa2\xa9\xe6\xb4\x42\x6e\x85\x76\x58\xd8\xa3\xff\x3d\xad\x5a\xa2\x2e\x54\xb3\x99\x6d\xe8\x1c\x3a\x75\x21\x9c\xb2\x35\x04\xbc\x10\xce\xcc\xa0\x53\x33\xdc\x74\xb3\xdd\xa3\xb3\x31\xe5\xd9\x90\xf2\x6c\x3d\x3f\xaa\xeb\x1e\x03\x35\xbd\xae\x18\xf9\x1e\x8b\x80\x7e\x9d\x11\xaf\x95\x95\x53\xfc\xf2\x22\xfd\x55\xaf\xca\x57\x65\x11\x34\x4c\xb5\x0f\x6a\x22\x51\x13\x54\x6c\x51\x96\x7b\xcc\x1b\xd7\xe7\xe6\xb2\x8c\xfc\xc3\x4d\x87\x82\x50\xa6\x24\x1a\xed\xb2\xfe\x9f\x33\xe3\xac\x22\xe7\xd3\x77\xe7\xb4\xc6\xfc\x99\x07\x08\xfa\xd9\x3d\x35\x7e\x8e\x55\x44\x81\x76\x0d\x0f\x5b\x2b\xb8\x75\x72\x17\xde\x9c\x00\xa9\xd8\xe0\x45\xfa\x32\x11\x19\x2b\x90\x6b\x08\x94\x65\xa3\x62\x0b\x53\xec\x65\x50\x83\x58\x35\x2a\xc6\xcd\xa4\x02\x41\x6a\x1d\xe7\x81\x47\xf2\xdb\x38\xbe\x94\xe9\x0d\x07\x22\x34\x1d\x85\x8a\x5d\xee\x9b\x05\xd1\xa2\xec\x35\x72\x72\xc3\x95\x1d\x06\x49\xc5\xae\xcc\x81\x69\xde\x76\x5c\x68\x17\x70\xb2\x9b\x97\xd9\x70\x77\xbc\x2e\xae\x86\xe1\x26\x5a\x14\xab\x7c\x63\xc6\xc1\x3b\xec\xc4\xc9\xea\xb1\xf3\x4e\x60\x08\x28\xa3\x92\xe4\x09\x1d\xd5\x2d\x0f\xc6\xde\x70\xe1\xac\xe8\xbd\x8f\x4d\xc4\x0d\x79\x10\xe4\x22\x03\x2e\x07\x27\x04\x61\xc5\xb5\x0a\x69\xfc\x36\xd0\xeb\xac\xda\x63\x8b\xb8\x44\xa1\xa2\xf0\x4d\xd9\x2e\xcc\xbe\x05\x6e\x50\xf4\xb4\x6f\xf2\xa2\xdd\xb7\x51\x32\xaa\x1d\x6d\xab\xfb\xa5\x8b\xa9\xef\x11\x04\xb4\xa2\x35\x10\xd9\xf9\xec\x28\x88\x56\xe9\x89\xa5\x3b\xe5\x3d\x74\xf0\xe5\x70\xf0\xf9\x5a\x39\x75\x2f\xca\x88\x77\x21\xf0\x03\xdd\x3d\xd9\xcf\xab\xef\xc8\x6a\xb1\x72\x4d\x73\xf8\x42\xdc\xa7\xfb\xfc\x21\xb6\xcf\x47\xb6\x77\xe0\x41\x6b\xd4\x2a\x98\x28\xb5\x8f\x34\x7c\x28\x7d\x18\xae\x02\x2d\xc5\x71\x9e\x35\xef\xff\x80\xe3\x00\x80\xf8\xd0\xce\x1a\xf7\x44\x28\x7e\x7a\x5e\x28\xae\x1e\xd6\x9d\xaf\x04\xe2\xfb\xb7\x7a\x1a\x1e\x79\x74\x1c\x74\xb8\x45\xf0\x54\x23\x3c\xd2\xb2\x6f\x07\x61\xf1\xcd\x20\x5c\x86\x13\xdc\x6f\xe2\xfc\x8a\x33\x6f\x7a\xe3\x64\xf9\x1f\xfe\xdf\x88\x49\xc5\x89\x18\x27\x80\xd8\x0a\xbd\x73\xa1\x8e\xa0\x15\xf2\x53\x96\x0b\x8f\x40\xc7\x50\x19\x0d\xd0\xc6\x87\x97\xdc\x0d\xfa\x6c\x48\xdf\x3f\x0d\xc6\x87\xc1\x7f\xae\x6b\x4f\xc5\x71\x71\x02\xc6\xfd\xbb\x74\xe2\x32\x3d\x5b\x3f\xc7\x36\x16\xd9\x2c\xbe\x0a\xd3\xbb\xeb\x48\x42\xff\x04\x00\x00\xff\xff\xe0\x97\x76\x5e\x82\x10\x00\x00")

func configChainstorageArbitrumMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageArbitrumMainnetBaseYml,
		"config/chainstorage/arbitrum/mainnet/base.yml",
	)
}

func configChainstorageArbitrumMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageArbitrumMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/arbitrum/mainnet/base.yml", size: 4226, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageArbitrumMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xbb\x6e\xeb\x30\x10\x84\xe1\x9e\x4f\xb1\xf0\xa9\x45\xe8\xc4\x08\x02\xb3\x76\x8a\x34\x71\xa3\x5e\x58\x91\x63\x89\x10\x2f\x02\xb9\x92\x93\xb7\x0f\x4c\x04\x99\x69\x7f\x7c\xff\x68\x58\x7c\xa5\xbb\x0f\x20\x5f\x69\x46\x42\x61\x81\xa3\xe9\x9b\x4e\x91\x57\x90\xcd\xe9\xee\xe7\x93\xa6\xeb\x8d\x3e\x6f\x03\xbd\x5f\x3f\x06\xad\xf8\x51\x8d\x22\xe2\x47\x1d\xd9\xda\xbc\x27\x31\xe4\x70\x20\xe4\x2d\x22\x89\x22\x9a\x76\xbb\x42\x0c\xe1\x8b\xe3\x16\xd0\xd9\x85\x7d\xaa\x92\x0b\xcf\xe8\xb8\x4c\x5e\xca\x1e\xbb\xc8\x3e\x25\x48\xe7\x70\x28\xcb\x0e\xc9\xa2\xb9\xce\x15\xd4\x6a\x48\x10\xb7\x5c\x38\x3c\x03\xfd\x4b\x69\x9b\xa3\x79\x7b\x39\x9f\x55\x33\x9f\xfd\x14\xb2\x5d\xc7\x2a\x5c\x64\x5c\xe0\xe7\x45\x0c\xfd\x7f\xed\xdb\x54\x45\x39\x50\x5a\xe6\x93\x1b\xff\xec\x5e\xb7\x9b\x4b\x7f\xe9\xd5\x4f\x00\x00\x00\xff\xff\xb0\x89\x54\x72\x09\x01\x00\x00")

func configChainstorageArbitrumMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageArbitrumMainnetDevelopmentYml,
		"config/chainstorage/arbitrum/mainnet/development.yml",
	)
}

func configChainstorageArbitrumMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageArbitrumMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/arbitrum/mainnet/development.yml", size: 265, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageArbitrumMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageArbitrumMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageArbitrumMainnetLocalYml,
		"config/chainstorage/arbitrum/mainnet/local.yml",
	)
}

func configChainstorageArbitrumMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageArbitrumMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/arbitrum/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageArbitrumMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x6e\xc3\x30\x0c\x84\xe1\x5d\x4f\x71\x48\x67\x1b\x46\x33\x14\xd1\x9c\x0e\x5d\x9a\xc5\x7b\x40\x53\x8c\x43\xc4\xa2\x0c\x4a\x6e\xda\xb7\x2f\x12\x14\xc5\xad\xf7\x7f\x2f\x18\xaf\x5a\x71\xd1\x45\xa0\x15\xb3\x98\x38\x35\x49\x98\x7e\xb0\xcb\x74\x13\x70\xb1\x8b\xce\xbb\x1e\xc7\x13\x3e\x4f\x23\xde\x8f\x1f\x63\x1f\xe8\x5e\x63\x00\xe8\x5e\xcf\xc4\x5c\x36\x6b\x11\xab\x97\xb4\x71\xd3\x62\x01\x98\x36\xbe\x49\x8b\x90\x6f\xca\xeb\x22\x1d\x5f\x49\xad\xb6\xe2\x34\x4b\x47\x3e\x69\xf3\x2d\x77\x99\xd4\x4c\x5a\xf7\x48\x03\x53\x12\x63\x79\xba\x29\xb9\xd4\x1a\xd1\x24\xaf\xc5\x69\xe9\xff\x9c\x9e\x4b\x8e\x6f\xaf\xfb\x7d\xa8\xe2\x5f\xe2\x8f\xf3\xa4\x96\xce\xff\xc5\xd0\x3f\x17\x0f\xc3\x61\x08\xbf\x01\x00\x00\xff\xff\x86\xa4\x5c\x69\xdf\x00\x00\x00")

func configChainstorageArbitrumMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageArbitrumMainnetProductionYml,
		"config/chainstorage/arbitrum/mainnet/production.yml",
	)
}

func configChainstorageArbitrumMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageArbitrumMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/arbitrum/mainnet/production.yml", size: 223, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageAvacchainMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\xdf\x6f\xdb\x36\x10\x7e\xd7\x5f\x41\x64\xcf\x89\x65\xb7\xe9\x56\x01\x7b\xc8\xda\x62\x0b\xba\x25\xc3\x10\x6c\xc0\x5e\x88\x13\x79\xb2\x08\x53\xa4\x4a\x9e\x5c\x7b\x7f\xfd\xc0\x1f\xb2\xec\xc6\x89\x53\x74\x59\x90\x17\x99\x3c\x1e\x8f\xf7\x7d\xfc\x3e\xe6\x3b\x76\xd7\x2a\xcf\x1a\xa5\x91\x29\xcf\x96\x68\xd0\x01\xa1\x64\xf5\x96\x9d\x75\xb0\x42\x26\xac\x69\xd4\xf2\xec\x82\xbd\xbf\x65\x37\xb7\x77\xec\xc3\xfb\xeb\xbb\x8b\x02\x7a\x55\x15\x8c\x75\xb0\xe1\x66\xe8\x78\xad\xad\x58\xf1\x90\xc5\x57\x6c\x5e\x96\xe5\x97\x73\xbe\x62\x97\x61\x30\x0c\x7c\xb6\x6e\x85\x2e\x06\x16\x8c\x79\x72\x08\x9d\x32\x4b\x5e\x03\x89\x96\x7b\xf5\x0f\xe6\xe0\x69\x4a\x19\x42\xb7\x06\x5d\xb1\xb9\x3f\x98\x88\x9b\x58\x8e\x6b\x34\xc4\x49\x75\x18\xb2\x76\x05\x7c\xf6\xa1\x3c\xf8\xec\x39\x08\x61\x07\x43\x15\x93\xb8\x46\x6d\xfb\x0e\x0d\x15\x8c\xd5\x83\x58\x21\x55\xec\xec\xac\x60\x4c\xea\x4f\x21\x9c\x31\x89\x1a\xb6\xdc\xa3\xf0\x15\x7b\x1b\x4f\xc1\x98\x81\x90\x15\x37\xd0\xf5\x1a\xb9\x68\x41\x19\x4f\xd6\xc1\x12\xf3\xd1\x38\xac\x41\xc4\x71\xde\x81\x32\x06\x89\x4b\xfd\x29\xae\x5d\x2b\xaf\x6a\xa5\x15\x6d\x63\x71\x76\xa0\x9c\xfc\x4d\x4c\x2e\xb7\x06\x3a\x2b\xeb\xb4\x79\x6a\x22\x41\xad\xbf\x76\xbf\xb8\x3c\xf7\xe0\xd4\xf2\xd4\xab\x27\x24\xe1\x2d\xaa\x65\x4b\x5c\x19\x89\x9b\xa7\x64\xac\xb7\xe3\x92\xe3\xb9\xd7\xe8\xbc\xb2\x06\x25\x3f\x5d\xea\x14\xfb\x84\xa2\x8f\x26\xce\x0b\x1f\xab\xfe\x81\x4d\xea\xed\xb8\x56\x1e\xdd\x10\x8d\xec\xad\x32\x23\x79\x7a\x87\x5e\x2d\x43\x96\xc1\x69\x8e\x9b\x5e\x39\x20\x65\x4d\xc5\x5e\x95\x5d\xc1\x98\xc3\x65\xfc\x35\xf8\x73\x04\x4f\xe7\xf3\x48\xe0\x58\x41\x26\x1d\x10\x70\x61\xbb\x90\xc8\xc7\xd0\x9f\xff\xbe\xfe\xbd\x10\x20\xd1\x88\x18\x03\x52\x86\xb9\x91\xad\x36\xd4\x52\xb1\xfd\xb3\x9c\xef\x0a\x3d\x9f\x0a\x75\x48\x68\x42\x29\xbc\x47\xa7\xac\xac\xd8\xf7\x45\x8c\x09\x39\xd3\x11\x3d\x81\xa3\x0c\x5b\xc5\xca\x62\x62\xe1\x32\x15\xa7\x81\xd0\x53\xc5\xe6\xf1\x97\xcf\x98\xcd\xa7\xc0\x78\xe7\x16\x7e\x1c\x48\xf9\xd9\x4f\xbf\xde\xbe\xfb\xf8\xee\x97\xab\xeb\x1b\x7e\xf5\xe7\xd5\xbb\xf8\x55\x30\x26\xb4\x42\x43\x29\x73\x07\x9e\xd0\xa5\xef\xa9\xa9\x7c\xe9\xec\xd0\xe7\x93\x32\xe6\x35\xac\xf1\x44\xcc\x1a\xb4\x92\x40\xf6\xf1\x5c\x23\x35\x4e\x9e\xab\x41\xa0\xc1\xe5\x4d\x9d\xf5\x48\x04\xbc\x07\xe7\xd1\x55\xac\x01\xed\xb1\x60\x4c\x39\x87\x91\x3e\x81\x69\x52\x79\x82\x00\x55\x90\xbe\x20\x72\x48\x41\xe3\x2a\x76\xf3\xe1\xee\xaf\xdb\x3f\x3e\x4e\x2d\xe0\xbf\x5d\x5d\xdf\xdc\x7c\xb8\x2b\x92\xaa\xf2\xa4\x2d\xf7\x49\x26\x9c\xdd\x03\xc9\x81\x59\x62\x16\xc6\xd7\x45\x33\x18\x11\x40\x05\xcd\xd3\x11\xce\xce\x0a\x2f\x57\x91\x27\x03\xb5\xbc\x45\x90\xa1\xd4\x78\xea\x38\x42\x76\x85\x26\x0f\x1c\x5c\x80\x1d\xaf\x5a\xa2\xde\x57\xb3\x99\x69\xe8\x1c\x7a\x75\x21\xac\x32\x35\x78\xbc\x10\xb6\x9b\x41\xaf\x66\xb8\xe9\x67\xfb\x4b\x67\xbb\x9a\x67\xb9\xe6\xd9\x7a\x7e\x54\xdf\x1d\x7a\x6a\x06\x5d\x31\x72\x03\x16\x1e\xdd\x3a\x81\x5e\x2b\x23\xa7\x02\xca\x8b\xf8\x57\xbd\x2d\xdf\x96\x85\xd7\x30\x1d\x3e\x4b\x8a\x44\x4d\x50\xb1\x45\x79\xc0\xbc\x71\xf8\x32\x5c\x34\xdc\xf4\x28\x08\x65\x2c\xa0\xd1\x36\x79\xc0\x39\xeb\xac\x51\x64\x5d\xfc\xee\xad\xd6\x98\x3e\x93\x89\xa0\x9b\xed\x98\xf1\xe3\x3c\x4e\x84\xfb\xa8\x61\x85\xb3\xdd\x55\xc8\x13\xc2\x59\xef\xf9\x8e\x6e\x05\x63\x41\xd0\x6d\xc3\xfd\xd6\x08\x6e\xac\xdc\xa7\x42\x74\x30\x52\x01\x89\x45\xfc\xea\x02\x84\x46\x20\xd7\xe0\x29\x29\x4c\x32\xab\x83\x72\x6b\x10\xab\x46\x85\x22\x13\x01\x41\x90\x5a\x07\xff\x70\x48\x6e\x1b\xfc\x4e\x75\x43\xc7\x81\x08\xbb\x9e\x7c\xc5\x5e\x1d\x86\x79\xd1\xa2\x1c\x34\x72\xb2\xf9\x72\x67\xe3\xc9\x4d\xda\x0f\x4d\xd3\x96\x0b\x6d\x3d\x4e\x71\xf3\x32\x05\xee\xfb\xf1\xe2\x32\xbb\xa1\x68\x51\xac\xd2\xed\x1a\x9d\x3a\xcf\x04\x2b\x76\xd8\x3b\x2b\xd0\x7b\x94\x41\x73\x92\xa5\x07\x21\x4c\x4e\x3a\x74\x5c\x58\x23\x06\xe7\x42\xc7\x71\x43\x0e\x04\xd9\x44\x95\x14\x42\xe0\x57\x5c\x2b\x1f\xfd\xba\x81\x41\x27\x85\x1f\x5b\xc4\x25\x0a\x15\x34\x72\xaa\x76\xd1\x1d\x46\xe0\x06\xc5\x40\x87\x21\xaf\xdb\xc3\x18\x25\x83\x2e\xd2\xb6\xda\x0d\x5d\x4c\x7d\x0f\x20\xa0\x11\x6d\x07\x81\xc6\x2f\x8e\x82\x68\x95\x9e\x28\xbd\x77\xbc\x87\x16\xbe\xc9\x0b\x5f\xae\x95\x53\xf7\x82\xe0\x1c\x5e\x9a\x27\xf6\xf3\xf2\x19\x59\x2d\x56\xb6\x69\xf6\x9e\x94\x97\x65\xd9\xf9\x7b\x8c\x9f\x97\x0f\x31\x7e\x37\xd3\x83\x03\xad\x51\x2b\xdf\x05\x61\x7e\xa4\xe9\xf9\xf8\xd9\x8a\x05\x1a\x0a\xee\x9f\xcd\xe7\xf9\x11\xb9\x2f\x5c\x59\x13\x9f\x88\xc6\x0f\xff\x23\x1a\xf3\xf2\x3e\x16\x97\x0f\x6b\xcf\x57\x02\xf1\xfc\xbd\x9e\xdc\x26\x79\xcd\x17\x2d\x6e\x11\x1c\xd5\x08\x8f\xf4\xec\xdb\x51\x58\x7c\x33\x0a\xaf\xfc\x09\xee\x37\xc1\xc4\x82\xef\x4d\x6f\xa2\x64\x01\xf9\x7f\x94\x50\x54\x70\xc5\xe0\x02\x62\x2b\x34\x4e\x1a\x7f\x04\x2d\x9f\x5e\xbe\x5c\x38\x04\x3a\x86\xca\x18\x80\x26\x3c\xd4\xe4\xfe\xa6\x2f\x86\xf4\xee\x2d\x31\xbe\x24\xfe\x73\x6d\x7b\x2a\x8e\x8b\x13\x30\x1e\xde\xa5\x13\x97\xe9\xc5\xfa\x39\xb6\xb1\x48\x61\xe1\x09\x19\x9f\x5d\x47\x0a\xfa\x37\x00\x00\xff\xff\xb0\x8f\xa9\x80\xb7\x10\x00\x00")

func configChainstorageAvacchainMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageAvacchainMainnetBaseYml,
		"config/chainstorage/avacchain/mainnet/base.yml",
	)
}

func configChainstorageAvacchainMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageAvacchainMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/avacchain/mainnet/base.yml", size: 4279, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageAvacchainMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xb1\x4e\xc4\x30\x0c\x86\xf7\x3c\x85\x75\xcc\xad\x0a\x27\x81\x2e\xf3\x31\xb0\x70\xcb\xed\x95\x9b\xb8\x6d\xd4\x24\xae\x62\x5f\x0b\x6f\x8f\x2e\x9c\xd8\xb0\x27\x5b\x9f\x3f\xeb\x7f\x82\xeb\x1c\x04\xc6\x10\x09\x82\xc0\x44\x99\x0a\x2a\x79\x18\xbe\xe1\x90\x70\x21\x70\x9c\xc7\x30\x1d\x5a\x38\x5f\xe0\xf3\x72\x85\xf7\xf3\xc7\xb5\x35\xb8\x8b\x35\x00\xb8\x4b\x8f\xce\xf1\x2d\xab\x05\x4f\x1b\x45\x5e\x13\x65\x35\x00\xc3\xcd\x2d\xa4\x16\xe8\x0b\xd3\x1a\xa9\x71\x33\x86\x2c\xca\x05\x27\x6a\x70\x43\x57\x17\x4d\xc2\x90\x33\x69\xe3\x69\x33\x0e\x3d\x65\x47\x55\xec\x7d\x21\x11\x0b\x4a\x69\xe5\x82\xf1\x0e\xb4\x0f\x57\xeb\x38\xd9\xb7\x97\xe3\xd1\x54\xc7\x9d\x1f\x22\xbb\xa5\x17\xc5\xa2\xfd\x4c\x61\x9a\xd5\xc2\xf3\x6b\x57\xcb\x08\x95\x8d\x4a\xc5\x42\xf6\xfd\x9f\xbb\x6b\x6b\xdb\x53\x77\xea\xcc\xce\x65\x19\x23\xff\xe6\x72\x85\x45\xfa\x0d\x63\xf0\xa8\x5c\x4f\x01\x1e\x63\xe0\xfc\xdf\xa3\x9f\x00\x00\x00\xff\xff\x23\xb5\x99\xb5\x4e\x01\x00\x00")

func configChainstorageAvacchainMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageAvacchainMainnetDevelopmentYml,
		"config/chainstorage/avacchain/mainnet/development.yml",
	)
}

func configChainstorageAvacchainMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageAvacchainMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/avacchain/mainnet/development.yml", size: 334, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageAvacchainMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8c\x31\x6f\xc2\x30\x10\x85\x77\xff\x8a\x27\x3a\xc7\x8a\xca\x50\xe1\x99\x0e\x5d\xca\x92\x1d\x5d\xce\x47\xb0\x88\xcf\x91\xcf\x81\xf6\xdf\x57\x44\x15\x7a\xdb\xd3\xf7\x7d\x6f\x18\xae\xc9\x70\x49\xb3\x20\x19\x26\x51\xa9\xd4\x24\x62\xfc\xc5\x2e\xd3\x4d\xc0\x45\x2f\x69\xda\x79\x1c\x4f\xf8\x3e\x0d\xf8\x3c\x7e\x0d\xde\xd1\xc3\x82\x03\xe8\x61\x67\x62\x2e\xab\xb6\x80\xa5\x96\xb8\x72\x4b\x45\x1d\x30\xae\x7c\x93\x16\x20\x3f\x94\x97\x59\x3a\xbe\x52\x52\x6b\xa5\xd2\x24\x1d\xdd\x89\xb7\xa3\xcb\x94\x54\xa5\x75\x4f\xd7\x31\x45\x51\x96\x2d\x1c\x63\x15\xb3\x80\x26\x79\x29\x95\x66\xff\x1f\xf2\x5c\x72\xf8\x78\xdf\xef\x9d\x49\xbd\x4b\x7d\xc2\x63\xd2\x78\x7e\x19\xbd\xdf\x16\x0e\xfd\xa1\x77\x7f\x01\x00\x00\xff\xff\xd2\xcf\x66\x71\xe0\x00\x00\x00")

func configChainstorageAvacchainMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageAvacchainMainnetProductionYml,
		"config/chainstorage/avacchain/mainnet/production.yml",
	)
}

func configChainstorageAvacchainMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageAvacchainMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/avacchain/mainnet/production.yml", size: 224, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBitcoinMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5b\x6f\xdb\xb8\x12\x7e\xd7\xaf\x18\xe4\x3c\x27\xbe\xb4\xee\x39\xd5\x5b\x6f\x38\x27\xe8\xd9\x64\xb1\x08\xb0\xc0\xbe\x10\x63\x72\x64\x11\xa6\x48\x95\x1c\xb9\xf6\xfe\xfa\x05\x2f\xaa\x6c\x37\x69\x52\xec\xb6\x81\x5f\x24\x71\x38\xb7\xef\xe3\x7c\xf4\xbf\xe0\xae\xd5\x01\x1a\x6d\x08\x74\x80\x0d\x59\xf2\xc8\xa4\x60\x7d\x80\x8b\x0e\xb7\x04\xd2\xd9\x46\x6f\x2e\xae\xe0\xfd\x2d\xdc\xdc\xde\xc1\x87\xf7\xd7\x77\x57\x15\xf6\xba\xae\x00\x3a\xdc\x0b\x3b\x74\x62\x6d\x9c\xdc\x8a\xe8\x25\xd4\xb0\x98\xcf\xe7\xe7\x6b\xa1\x86\x55\x05\x10\xdf\x3f\x3b\xbf\x25\x9f\xec\x2a\x80\xc0\x9e\xb0\xd3\x76\x23\xd6\xc8\xb2\x15\x41\xff\x49\x35\xac\x4e\x97\xb4\x65\xf2\x3b\x34\x35\x2c\xc2\xc9\x42\x8a\xe1\x04\xed\xc8\xb2\x60\xdd\x51\x0d\x2f\xe6\x5d\x85\x9f\x43\xcc\x0e\x3f\x07\x81\x52\xba\xc1\x72\x0d\x8a\x76\x64\x5c\xdf\x91\xe5\x0a\x60\x3d\xc8\x2d\x71\x0d\x17\x17\x15\x80\x32\x9f\xa2\x39\x80\x22\x83\x07\x11\x48\x86\x1a\x5e\xa7\x22\x00\x2c\x46\xaf\xb4\xc7\xae\x37\x24\x64\x8b\xda\x06\x76\x1e\x37\x54\x2a\x13\x6b\xcd\xd2\x69\x2b\x3a\xd4\xd6\x12\x0b\x65\x3e\xa5\x9d\x3b\x1d\xf4\x5a\x1b\xcd\x87\x94\x9a\x1b\xb8\xb8\x7e\x95\x5c\xab\x83\xc5\xce\xa9\x75\x0e\x9d\x3b\xc8\xb8\x36\xdf\x17\x2d\x6d\x2e\xf5\x3f\xb6\x39\xf7\xe9\x51\x17\xa2\x25\xbd\x69\x59\x68\xab\x68\xff\x24\x7f\x87\x71\xcb\x7d\x9e\x77\xe4\x83\x76\x96\x94\x78\x3c\xcd\xc9\xf6\xd1\x84\xef\x75\x5b\xb6\x7d\x2b\xf3\x87\x42\x1c\xc6\xbd\xea\x9e\x70\x64\x55\xef\xb4\x1d\x09\xd3\x7b\x0a\x7a\x13\x7d\x0c\xde\x08\xda\xf7\xda\x23\x6b\x67\x33\xfb\x00\x3c\x6d\xd2\xdb\x10\x2e\x09\x03\x5f\x2e\x12\x69\x53\xfc\x42\x34\x64\x14\xd2\x75\xd1\x51\x48\xa6\xff\xfd\xe3\xfa\xd7\x4a\xa2\x22\x2b\x93\x0d\x2a\x15\xd7\x46\x86\xba\x98\x4b\x0d\xc7\x95\x5c\x96\x34\x2f\xa7\x34\x3d\x31\xd9\x98\x88\xe8\xc9\x6b\xa7\x6a\xf8\x77\x95\xb6\x44\x8f\xb9\xbc\xc0\xe8\xb9\xc0\x55\xc3\xbc\x9a\x98\xb7\xc9\xa9\x19\x64\x0a\x5c\xc3\x32\xbd\x85\x82\xd6\x72\x32\x4c\xa7\x6c\x91\xea\x4c\x5f\x72\x00\x78\xfb\xff\xdb\x77\x1f\xdf\xfd\xef\xcd\xf5\x8d\x78\x7b\x7d\xf7\xee\xf6\xfa\xa6\x02\x90\x46\x93\xe5\xec\xb8\xc3\xc0\xe4\xf3\xf3\xd4\x51\xb1\xf1\x6e\xe8\x4b\x99\x00\xc1\xe0\x8e\x1e\xb1\xd9\xa1\xd1\x0a\xd9\x7d\xdb\xd7\xc8\x8a\xb3\xb2\xe6\x27\x65\xc5\xb7\x86\x90\x07\x5f\x82\x7a\x17\x88\x19\x45\x8f\x3e\x90\xaf\xa1\x41\x13\xa8\x02\xd0\xde\x53\x62\x4e\x24\x99\xd2\x81\x31\xe2\x04\x2f\xe2\x4c\x23\x8e\x23\xad\x86\x9b\x0f\x77\xbf\xdf\xfe\xf6\x71\x2c\x5f\xfc\xf2\xe6\xfa\xe6\xe6\xc3\x5d\x95\x27\xa8\xc8\x83\xe4\x9c\x5b\xd2\xbb\x23\x74\x3c\xda\x0d\x95\x19\x18\x5b\xae\x74\x48\xb4\x56\xe6\x93\xe8\xbd\x93\x14\x82\xf3\x35\xb0\x1f\xa8\x6a\x06\x2b\x23\xd6\x68\x44\x2e\xed\xe2\xa2\x0a\x6a\x9b\xc8\x33\x70\x2b\x5a\x42\x15\x4b\x48\xdd\x48\x5f\xd8\x6d\xc9\x96\x0f\x27\x67\xe2\x0b\xd9\x5a\xe6\x3e\xd4\xb3\x99\x6d\xf8\x12\x7b\x7d\x15\x53\x5d\x63\xa0\x2b\xe9\xba\x19\xf6\x7a\x46\xfb\x7e\x76\xbc\x75\x56\xea\x99\x95\x7a\x66\xbb\xc5\xbd\x63\xde\x53\xe0\x66\x30\x25\xf5\x40\x7e\x97\xa9\xb0\xd6\x56\x4d\xe1\xe7\x57\xe9\x57\xbf\x9e\xbf\x9e\x57\xc1\xe0\xd4\x98\x32\x5f\x14\x19\xc6\x2c\x25\x13\x1b\xc7\xaf\x8b\x36\x9f\x3e\xda\xf7\x24\x99\x54\x4a\xa1\x31\x2e\x8b\xc1\x25\x74\xce\x6a\x76\x3e\x3d\xf7\xce\x18\xca\x8f\x59\x4d\xd2\x4b\x1c\xd1\xae\x11\xe1\x60\xa5\xb0\x4e\x1d\x23\x9d\xaa\x60\x1d\x1b\xba\x4c\x4f\x5d\xc4\xc9\x4a\x12\x06\x03\xe7\xd9\x31\xa6\x70\x12\x77\x8d\x72\xdb\xe8\x18\x2d\x33\x0c\x25\xeb\x5d\xd4\x04\x4f\xec\x0f\x51\xc1\x74\x37\x74\x02\x99\xa9\xeb\x39\x64\x4e\x1d\x99\x05\xd9\x92\x1a\x0c\x09\x76\xe5\xf0\x16\x31\xa9\x61\xd5\x9d\x99\xe6\x65\x27\xa4\x71\x81\x26\xbb\x7c\x58\x63\x2a\x93\xc2\x2e\x57\x45\xdf\x64\x4b\x72\x9b\x8f\xcf\xa8\xbd\x65\x25\x8a\xab\xa7\x42\x3b\x52\x71\xa6\x64\x91\x8e\x63\x2e\x6b\xe3\xd0\x09\xe9\xac\x1c\xbc\x8f\x87\x8d\xf6\xec\x51\xb2\x8b\xa8\x2f\x17\xc9\x82\x31\x6c\x85\xd1\x21\x09\x70\x83\x83\xc9\xc3\x7b\xec\x90\x50\x24\x75\x1c\x80\x53\xb2\xcb\xee\xd4\x82\xf6\x24\x07\x3e\x35\x79\xd9\x9e\xda\x68\x15\xc7\x1e\x1f\xea\x2f\x9f\xae\xa6\xb6\x47\x0c\xc8\xca\xb6\xc3\x48\xc8\x67\x07\x41\xb6\xda\x4c\xd4\x3c\x2a\xef\xa1\x8d\xaf\xca\xc6\xe7\x6b\xe5\xd4\xbd\x38\x38\xbc\x0b\x41\x9c\xcd\xe0\x47\xfb\xb9\xfa\x81\xa4\x96\x5b\xd7\x34\xe7\x77\xc4\x53\xb6\x2f\x1e\x22\xfb\x62\x24\x7b\x8f\x1e\x8d\x21\xa3\x43\x57\xc3\xcb\x6f\x35\xbc\x94\x5e\x54\x56\x92\xe5\x28\xeb\x79\x40\xfc\x0c\x38\xce\x00\x88\x37\xed\x3c\xd8\x9e\x08\xc5\x7f\x7e\x26\x14\xf3\xaf\xb1\x58\x3d\x00\xc5\x72\xf5\xbd\x48\xfc\xf8\x5e\x4f\x92\x91\x05\xe3\xac\xc5\x2d\xa1\xe7\x35\xe1\x51\xcf\x16\xe7\x4d\xfb\xfb\x30\x2c\x9f\x08\xc3\x8b\x47\x61\x78\x98\xfe\x4d\x14\xb1\xa8\x7b\xd3\x95\x27\x0b\x40\xf9\xd7\x11\xb3\x8a\xaa\x18\x35\x40\x1e\x64\xbc\x3b\xad\xbe\x46\xab\x9c\x81\x90\x2f\xb5\x42\x7a\x42\xbe\x0f\x96\xd1\x80\x6c\xbc\xdd\xa8\xe3\x98\xcf\x06\xf5\x97\x1b\xc1\x78\x1f\xf8\xc7\x27\xdb\x53\x71\x5c\x7e\xdf\x69\x7a\x58\xc6\x9f\xb7\xa1\x47\xf7\xaa\xf1\x2e\x98\xee\x5b\xf7\x24\xf4\x57\x00\x00\x00\xff\xff\x3d\x5f\x4f\xa8\x86\x10\x00\x00")

func configChainstorageBitcoinMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBitcoinMainnetBaseYml,
		"config/chainstorage/bitcoin/mainnet/base.yml",
	)
}

func configChainstorageBitcoinMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageBitcoinMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bitcoin/mainnet/base.yml", size: 4230, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBitcoinMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\xbd\x6e\xc3\x30\x0c\x06\x77\x3d\x05\x91\xce\x36\xdc\x66\x28\xa2\x39\x1d\xba\x34\x4b\x76\x83\x96\xbe\xc4\x84\xf5\x63\x48\x8c\xd3\xf4\xe9\x0b\x3b\x45\xc1\x91\x77\x87\xef\x85\xce\xa3\x54\xba\x48\x00\x49\xa5\x2b\x12\x0a\x2b\x3c\x0d\x0f\xda\x45\x9e\x40\x2e\xa7\x8b\x5c\x77\x2d\x1d\x4f\xf4\x75\x3a\xd3\xc7\xf1\xf3\xdc\x1a\xbe\x57\x6b\x88\xf8\x5e\x7b\x76\x2e\xdf\x92\x5a\xf2\x58\x10\xf2\x1c\x91\xd4\x10\x0d\x37\x37\x41\x2d\xe1\x9b\xe3\x1c\xd0\xb8\x91\x25\x55\xcd\x85\xaf\x68\x06\x51\x97\x25\x35\x91\x25\x25\x68\xe3\xb1\x18\xc7\x1e\xc9\x61\xcb\x7a\x5f\x50\xab\x25\x45\x9c\x73\xe1\xb0\x02\xed\x5f\xa9\x75\x39\xda\xf7\xb7\xfd\xde\x54\x94\x05\x65\x15\x06\x49\xbe\xff\xb7\xba\x76\x3b\x7b\xe8\x0e\x9d\xb9\xe7\x32\x5d\x42\x7e\xee\x9d\x73\x08\x4f\x83\x88\x9d\xca\x22\xfa\xe8\x47\x70\xd1\x01\xac\xbd\x4a\x44\xbe\xa9\xa5\xd7\x2e\x6e\x8c\x1b\xe1\xa6\x39\x4b\xd2\xbe\xca\x0f\xd6\x47\x67\x7e\x03\x00\x00\xff\xff\xdc\x01\x01\x89\x34\x01\x00\x00")

func configChainstorageBitcoinMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBitcoinMainnetDevelopmentYml,
		"config/chainstorage/bitcoin/mainnet/development.yml",
	)
}

func configChainstorageBitcoinMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageBitcoinMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bitcoin/mainnet/development.yml", size: 308, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBitcoinMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageBitcoinMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBitcoinMainnetLocalYml,
		"config/chainstorage/bitcoin/mainnet/local.yml",
	)
}

func configChainstorageBitcoinMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageBitcoinMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bitcoin/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBitcoinMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x4f\xc3\x30\x10\xc5\xf1\xdd\x9f\xe2\xa9\xcc\xb1\x22\x3a\xa0\x7a\x2e\x03\x0b\x5d\xb2\x57\xe7\xf3\x35\x3d\x35\x3e\x47\xb6\x43\xe1\xdb\xa3\x56\x08\xbd\xf5\xfd\x7f\x2f\x98\xae\xda\x70\xd1\x45\xa0\x0d\xb3\x98\x54\xea\x92\x10\x7f\xb0\xcb\x74\x13\x70\xb1\x8b\xce\x3b\x8f\xe3\x09\x9f\xa7\x09\xef\xc7\x8f\xc9\x3b\xba\xb7\xe0\x00\xba\xb7\x33\x31\x97\xcd\x7a\xc0\x5a\x4b\xda\xb8\x6b\x31\x07\xc4\x8d\x6f\xd2\x03\xe4\x9b\xf2\xba\xc8\xc0\x57\x52\x6b\xbd\x54\x9a\x65\x88\xda\xb9\xa8\x0d\x99\xd4\x4c\xfa\xf0\x28\x1d\x53\x12\x63\x79\xb2\x29\x55\x69\x2d\xa0\x4b\x5e\x4b\xa5\xc5\xff\x31\x9e\x4b\x0e\x6f\xaf\xfb\xbd\x6b\x52\xbf\xa4\x3e\xce\x51\x2d\x9d\xff\x8b\xd1\x3f\x17\x0e\xe3\x61\x74\xbf\x01\x00\x00\xff\xff\x62\xf1\xd6\xf7\xde\x00\x00\x00")

func configChainstorageBitcoinMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBitcoinMainnetProductionYml,
		"config/chainstorage/bitcoin/mainnet/production.yml",
	)
}

func configChainstorageBitcoinMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageBitcoinMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bitcoin/mainnet/production.yml", size: 222, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBscMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5d\x6f\xdc\xb6\x12\x7d\xd7\xaf\x20\x7c\x9f\xed\xfd\x70\x9c\x7b\x23\xe0\x3e\xe4\x0b\xf7\x1a\x69\xed\xa2\x35\x50\xa0\x2f\xc4\x88\x1c\xad\x88\xa5\x48\x85\x1c\x6d\x76\xfb\xeb\x8b\x21\x25\x6b\x77\xeb\xb5\x1d\x34\x89\xe1\x17\x2d\x39\x33\x9c\x99\x73\x78\x86\xfe\x97\xb8\x6b\x4c\x14\xb5\xb1\x28\x4c\x14\x2b\x74\x18\x80\x50\x8b\x6a\x27\xce\x5a\x58\xa3\x50\xde\xd5\x66\x75\x76\x21\x3e\xdc\x8a\x9b\xdb\x3b\xf1\xf1\xc3\xf5\xdd\x45\x01\x9d\x29\x0b\x21\x5a\xd8\x4a\xd7\xb7\xb2\xb2\x5e\xad\x25\x47\x89\xa5\x58\xcc\xe7\xf3\xe3\xbd\x58\x8a\x2b\x5e\xe4\x85\x2f\x3e\xac\x31\x24\xc3\x42\x88\x48\x01\xa1\x35\x6e\x25\x2b\x20\xd5\xc8\x68\xfe\xc4\xc1\x78\xda\x32\x8e\x30\x6c\xc0\x96\x62\x11\x0f\x36\xd2\x21\x5e\xe2\x06\x1d\x49\x32\x2d\x72\xd4\xb6\x80\x2f\x91\xd3\x83\x2f\x51\x82\x52\xbe\x77\x54\x0a\x8d\x1b\xb4\xbe\x6b\xd1\x51\x21\x44\xd5\xab\x35\x52\x29\xce\xce\x0a\x21\xb4\xfd\xcc\xe6\x42\x68\xb4\xb0\x93\x11\x55\x2c\xc5\x9b\x54\x85\x10\x0e\x38\x2a\x6e\xa1\xed\x2c\x4a\xd5\x80\x71\x91\x7c\x80\x15\x0e\xa5\xc9\x2a\x2a\xd9\x82\x71\x0e\x49\x6a\xfb\x39\x79\x6d\x4c\x34\x95\xb1\x86\x76\x29\x2d\xdf\xd3\x10\xf6\x75\x0a\xab\x77\x0e\x5a\xaf\xab\x7c\x6c\x6e\x1f\x41\x65\x9f\x7f\x52\x72\x1c\xea\x7e\xca\x31\xf7\xe7\x51\x77\xd9\xa0\x59\x35\x24\x8d\xd3\xb8\x7d\x56\xac\xdd\xe8\x72\x1c\x75\x83\x21\x1a\xef\x50\xcb\xa7\xd3\x9b\x6c\x1f\x4d\xf4\xc1\x90\x83\xcb\x63\x19\x9f\x0a\xbf\x1b\x7d\xf5\xd1\x51\xe8\x74\xe7\x8d\x1b\x89\xd1\x05\x8c\x66\xc5\xfe\x7d\xb0\x12\xb7\x9d\x09\x40\xc6\xbb\x52\x5c\xce\xdb\x42\x88\x80\xab\xf4\xab\x8f\xe7\x08\x91\xce\x17\x89\x9c\xe9\xec\x81\x50\x40\x20\x95\x6f\x39\x50\x4c\xa6\xff\xfb\xe3\xfa\x97\x42\x81\x46\xa7\x92\x0d\x68\xcd\x7b\x23\x13\x3d\xe7\x52\x8a\xfd\x2a\xce\xab\xa8\xce\xa7\x14\x03\x12\x3a\x4e\x42\x76\x18\x8c\xd7\xa5\xf8\x77\x91\xcc\x39\x5a\x2e\x2b\x12\x04\x1a\xe0\x29\xc5\xbc\x98\x18\xb6\xca\x69\x59\x20\x8c\x54\x8a\x65\xfa\x15\x07\x84\x96\x93\x61\xba\x49\x97\x71\x5c\xc8\xf1\xc5\xbb\x9f\x6e\xdf\x7f\x7a\xff\xff\xb7\xd7\x37\xf2\xdd\x6f\xef\x0b\x21\x94\x35\xe8\x28\xc7\x6c\x21\x12\x86\xfc\x3d\x35\x52\xae\x82\xef\xbb\xa1\x3a\x21\xa2\x85\x0d\x3e\x61\xb3\x01\x6b\x34\x90\x7f\x3c\xd6\x48\x84\xa3\x8a\x16\x07\x15\xf1\xaf\x1a\x81\xfa\x30\x1c\x1a\x7c\x44\x22\x90\x1d\x84\x88\xa1\x14\x35\xd8\x88\x85\x10\x26\x04\x4c\x64\x61\x5e\x69\x13\x09\x18\x1e\x96\x32\x16\x2d\x24\xd6\xac\x52\xdc\x7c\xbc\xfb\xfd\xf6\xd7\x4f\x5c\xbc\xfc\xf9\xed\xf5\xcd\xcd\xc7\xbb\x22\xeb\xa3\xcc\x2a\xb1\x4f\x26\x15\xfc\x1e\x24\x01\xdc\x0a\x07\x71\x7b\xc5\x40\x9b\x98\x38\xec\xbc\x46\xa9\xc0\x41\xd8\x4d\xd9\x8c\x9b\x9d\xb7\x96\x55\xee\xd4\xfe\xa4\x83\x87\x16\x75\xef\x14\x33\x04\xac\xcc\x5d\x39\x3b\x2b\xa2\x5e\x27\xba\xf5\xd4\xc8\x06\x41\x73\xf5\xa9\x91\x69\x85\xfc\x1a\xdd\xb0\x70\x70\x83\xee\xe9\xd9\x10\x75\xb1\x9c\xcd\x5c\x4d\xe7\xd0\x99\x0b\xe5\x8d\xab\x20\xe2\x85\xf2\xed\x0c\x3a\x33\xc3\x6d\x37\xdb\x77\x9d\x55\x51\xcd\x86\x66\xcc\x36\x8b\x07\xc5\x3f\x60\xa4\xba\xb7\xa5\xa0\xd0\x63\x11\x31\x6c\x32\x83\x2a\xe3\xf4\x74\xf4\xfc\x22\xfd\x95\x6f\xe6\x6f\xe6\x45\xb4\x30\x75\x75\x50\x20\x8d\x96\x60\x18\x1a\x13\x81\xc7\xe5\x25\xdf\x54\xdc\x76\xa8\x08\x75\x4a\xa0\xb6\x3e\x0f\x88\x73\xd1\x7a\x67\xc8\x87\xf4\xcd\xed\xc6\xfc\x99\x3b\x8b\x61\x76\x4f\xb3\xff\x72\x05\x2c\xe3\xbe\x96\x71\xe7\x54\x46\x6e\xa2\x4a\x3a\x9c\x0c\xb7\x75\x99\xbe\x5a\x86\xdb\x29\x94\x16\x22\x65\xbd\x29\xc5\x65\x5b\x1c\x24\x50\x81\x5a\xd7\x86\x8f\xcd\xfc\x04\x45\x66\xc3\x43\x23\x20\x85\x1d\x8f\x37\xd3\xf6\xad\x04\x22\x6c\x3b\x8a\xa5\xb8\x3c\x34\x8b\xaa\x41\xdd\x5b\x94\xe4\x87\x5b\x3f\x4c\x9b\x52\x5c\xb5\x47\xa6\x79\xdb\x4b\x65\x7d\xc4\xc9\x6e\x31\xcf\x86\xfb\xe3\x77\x79\x35\x0c\x3f\xd5\xa0\x5a\xe7\xcb\x37\x0e\xe6\x61\x87\x27\x6f\xc0\x2e\x78\x85\x31\xa2\x66\x31\xca\x13\x9c\xb5\x31\x0f\xce\xbe\x95\xca\x3b\xd5\x87\xc0\x3d\xc4\x2d\x05\x50\xe4\x13\xf8\xaf\x93\x05\x41\x5c\x4b\x6b\x62\x9a\xce\x35\xf4\x36\xab\xfd\xd8\x21\xa9\x51\x19\x56\xcd\x29\xd9\x65\x7b\x68\x81\x5b\x54\x3d\x1d\x9a\xbc\x6a\x0e\x6d\x8c\x66\xbd\xa4\x5d\x79\xbf\x74\x31\xb5\x9d\x31\x40\xa7\x9a\x16\x98\x97\x2f\x0e\x82\x6a\x8c\x9d\x38\xba\x57\xde\x29\xc7\xd7\x83\xe3\xcb\xb5\x72\xea\x1e\x6b\x47\xf0\x31\xca\x23\x05\x7f\xb2\x9f\x57\xdf\x91\xd4\x6a\xed\xeb\xfa\xf8\x01\x79\xc8\xf6\xc5\x29\xb2\x2f\x46\xb2\x77\x10\xc0\x5a\xb4\x26\xb6\x59\xbe\x4f\x36\x7c\x28\x7d\x18\xcf\x0a\x1d\xf1\x5b\x20\xab\xdd\x8f\x80\xe3\x08\x00\x7e\x87\x67\x85\x7b\x26\x14\xff\xf9\x81\x50\x5c\xfe\x1d\x8a\xab\xd3\xb2\xf3\x95\x40\x7c\xff\x56\x4f\xa3\x23\x0f\x8e\xa3\x0e\x37\x08\x81\x2a\x84\x47\x5a\xf6\xcf\x41\x58\x7e\x2b\x10\x4e\x73\xbf\xe6\xf1\xc5\x13\x6f\x7a\x7f\x64\xf5\x1f\xfe\x27\xe1\xa4\x78\x1e\xf2\x00\x50\x3b\x65\xf7\x2e\xd4\x03\x68\xc5\xfc\x0e\x96\x2a\x20\xd0\x43\xa8\x8c\x06\xe8\xf8\x89\xa3\xf7\x0f\x7d\x31\xa4\xef\x1f\x06\xe3\xb3\xe0\x9b\xeb\xda\x73\x71\x5c\x7e\xd5\x5d\x7a\xe2\x32\xbd\x58\x3f\xc7\x36\x16\xd9\x8c\xdf\x83\xe9\xd5\xf5\x40\x42\x7f\x05\x00\x00\xff\xff\x91\x8f\xfb\x77\xa1\x10\x00\x00")

func configChainstorageBscMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBscMainnetBaseYml,
		"config/chainstorage/bsc/mainnet/base.yml",
	)
}

func configChainstorageBscMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageBscMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bsc/mainnet/base.yml", size: 4257, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBscMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x6f\xc2\x30\x10\xc5\xf1\xdd\x9f\xe2\x44\xe7\x58\x51\x19\x2a\x3c\xd3\xa1\x4b\x59\xb2\xa3\xcb\xf9\x11\x2c\xe2\x73\xe4\x33\xa1\xfd\xf6\x15\x51\x85\xde\xfa\xfe\xbf\x37\x1a\xae\xc9\xe8\x92\x66\x50\x32\x9a\xa0\xa8\xdc\x10\x69\xfc\xa5\x5d\xe6\x1b\x48\x8a\x5e\xd2\xb4\xf3\x74\x3c\xd1\xf7\x69\xa0\xcf\xe3\xd7\xe0\x1d\x3f\x2c\x38\x22\x7e\xd8\x99\x45\xca\x5d\x5b\xa0\x88\x15\x73\x59\x32\xb4\x39\xa2\xf1\x2e\x37\xb4\x40\xf8\xe1\xbc\xcc\xe8\xe4\xca\x49\xad\x95\xca\x13\xba\xd1\xa4\xcb\x9c\x54\xd1\xba\x88\xd5\x09\x47\xa8\x60\x23\x63\xac\x30\x0b\xd4\x90\x97\x52\x79\x7e\x1e\xfc\xbf\xe2\xa5\xe4\xf0\xf1\xbe\xdf\x3b\x43\x5d\x51\x9f\xc1\x98\x34\x9e\x5f\x55\xef\xb7\x85\x43\x7f\xe8\xdd\x5f\x00\x00\x00\xff\xff\x5d\x3b\x11\x73\xde\x00\x00\x00")

func configChainstorageBscMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBscMainnetDevelopmentYml,
		"config/chainstorage/bsc/mainnet/development.yml",
	)
}

func configChainstorageBscMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageBscMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bsc/mainnet/development.yml", size: 222, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBscMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageBscMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBscMainnetLocalYml,
		"config/chainstorage/bsc/mainnet/local.yml",
	)
}

func configChainstorageBscMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageBscMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bsc/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBscMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x4f\xc3\x30\x10\xc5\xf1\xdd\x9f\xe2\xa9\xcc\xb1\x22\x3a\xa0\x7a\x2e\x03\x0b\x5d\xb2\x57\xe7\xf3\x35\xb5\x1a\x9f\x23\x9f\x43\xe1\xdb\xa3\x56\x08\xbd\xf5\xfd\x7f\x2f\x98\xae\xd9\x70\xc9\x8b\x20\x1b\x66\x51\x69\xd4\x25\x21\xfe\x60\x57\xe8\x26\xe0\xaa\x97\x3c\xef\x3c\x8e\x27\x7c\x9e\x26\xbc\x1f\x3f\x26\xef\xe8\x6e\xc1\x01\x74\xb7\x33\x31\xd7\x4d\x7b\xc0\xda\x6a\xda\xb8\xe7\xaa\x0e\x88\x1b\xdf\xa4\x07\xc8\x37\x95\x75\x91\x81\xaf\x94\xd5\x7a\x6d\x34\xcb\x10\x8d\x87\x42\x59\x55\xfa\xf0\xa8\x1c\x53\x12\x65\x79\x92\x29\x35\x31\x0b\xe8\x52\xd6\xda\x68\xf1\x7f\x84\xe7\x5a\xc2\xdb\xeb\x7e\xef\x4c\xda\x97\xb4\xc7\x39\x66\x4d\xe7\xff\x62\xf4\xcf\x85\xc3\x78\x18\xdd\x6f\x00\x00\x00\xff\xff\x23\xe5\xbe\x3c\xda\x00\x00\x00")

func configChainstorageBscMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBscMainnetProductionYml,
		"config/chainstorage/bsc/mainnet/production.yml",
	)
}

func configChainstorageBscMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageBscMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bsc/mainnet/production.yml", size: 218, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageDogecoinMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\xd1\x6f\xdb\xb6\x13\x7e\xd7\x5f\x71\xc8\xef\x39\xb1\x9d\x36\xfd\xad\x02\xf6\xd0\xb5\x41\x17\x74\x4b\x86\x21\xc0\x80\xbd\x10\x27\xf2\x64\x11\xa6\x48\x95\x3c\xb9\xf6\xfe\xfa\x81\x22\x65\xd9\x6e\x52\x37\x58\xdb\x20\x2f\x16\x79\x3c\xde\x7d\xf7\xdd\x77\xcc\xff\xe0\xbe\xd1\x01\x6a\x6d\x08\x74\x80\x25\x59\xf2\xc8\xa4\xa0\xda\xc2\x59\x8b\x2b\x02\xe9\x6c\xad\x97\x67\x17\xf0\xee\x0e\x6e\xef\xee\xe1\xfa\xdd\xcd\xfd\x45\x81\x9d\x2e\x0b\x80\x16\x37\xc2\xf6\xad\xa8\x8c\x93\x2b\x11\xbd\x84\x12\x16\xf3\xf9\xfc\x78\x2f\x94\x70\x15\x17\xe3\xc2\x27\xe7\x57\xe4\x07\xc3\x02\x20\xb0\x27\x6c\xb5\x5d\x8a\x0a\x59\x36\x22\xe8\x7f\x28\x1b\x4f\x5b\xda\x32\xf9\x35\x9a\x12\x16\xe1\x60\x63\xb8\xc4\x09\x5a\x93\x65\xc1\xba\xa5\xe8\xb5\x2d\xf0\x53\x88\xe1\xe1\xa7\x20\x50\x4a\xd7\x5b\x2e\x41\xd1\x9a\x8c\xeb\x5a\xb2\x5c\x00\x54\xbd\x5c\x11\x97\x70\x76\x56\x00\x28\xf3\x31\x9a\x03\x28\x32\xb8\x15\x81\x64\x28\xe1\xf5\x90\x05\x80\xc5\xe8\x95\x36\xd8\x76\x86\x84\x6c\x50\xdb\xc0\xce\xe3\x92\x72\x6a\x42\xb9\x25\x49\xa7\xad\x68\x51\x5b\x4b\x2c\x94\xf9\x38\x1c\x5d\xeb\xa0\x2b\x6d\x34\x6f\x87\xd8\x5c\xcf\xd9\xf7\xab\xc1\xb7\xda\x5a\x6c\x9d\xaa\xd2\xdd\x09\x43\xc6\xca\x3c\xf1\xba\xe1\x74\x46\xe0\xd4\xe9\x84\xd4\x69\x1f\xa2\x21\xbd\x6c\x58\x68\xab\x68\xf3\x35\x0e\xab\xed\x78\xe4\x41\xd7\x6b\xf2\x41\x3b\x4b\x4a\x9c\x0e\x74\xb2\x3d\x1d\xf2\x83\x7e\xf3\xb9\x2f\xc5\xfe\xc8\x1d\xd5\x76\x3c\xab\x1e\xba\x8f\xac\xea\x9c\xb6\x23\x6d\x3a\x4f\x41\x2f\xa3\x93\xde\x1b\x41\x9b\x4e\x7b\x64\xed\x6c\x09\x2f\xe6\x6d\x01\xe0\x69\x39\x7c\xf5\xe1\x9c\x30\xf0\xf9\x62\xa0\xee\x10\x40\xa6\x1b\x32\x0a\xe9\xda\xe8\x28\x0c\xa6\xef\xff\xbe\xf9\xa3\x90\xa8\xc8\xca\xc1\x06\x95\x8a\x7b\x23\x4f\x5d\x8c\xa5\x84\xfd\x54\xce\xc7\x38\xcf\xa7\x38\x3d\x31\xd9\x18\x89\xe8\xc8\x6b\xa7\x4a\xf8\x7f\x31\x9c\x89\x2e\x53\x82\x81\xd1\x73\x2e\x59\x09\xf3\x62\xe2\xdf\x32\xc5\x66\x90\x29\x70\x09\x8b\xe1\x2b\xe4\x82\x2d\x26\xc3\xd4\x6c\xed\xb8\x90\xfc\xc3\x2f\xbf\xdd\xbd\xfd\xf0\xf6\xd7\x37\x37\xb7\xe2\xdd\xdd\xfb\xeb\xb7\x77\x37\xb7\x05\x80\x34\x9a\x2c\x27\xc7\x2d\x06\x26\x9f\x7e\x4f\x90\x8a\xa5\x77\x7d\x97\xf3\x04\x08\x06\xd7\x74\xc2\x66\x8d\x46\x2b\x64\xf7\x65\x5f\x23\x2f\x8e\xd2\x9a\x1f\xa4\x15\xbf\x6a\x42\xee\x7d\xbe\xd4\xbb\x40\xcc\x28\x3a\xf4\x81\x7c\x09\xec\x7b\x2a\x00\xb4\xf7\x34\x50\x27\xb2\x4c\xe9\xc0\x18\xeb\x14\x15\x2f\x6a\x1b\x71\x94\xb6\x12\x6e\xaf\xef\xff\xba\xfb\xf3\xc3\x0e\x00\xf1\xfb\x9b\x9b\xdb\xdb\xeb\xfb\x62\xe7\x77\xbf\xe3\xad\x63\x51\xbb\xde\x2a\x41\xde\x3b\x2f\xa4\x53\x51\x45\x5f\x4e\x26\x19\xda\xb1\xd0\x49\x95\xc6\xcb\xc6\xaa\x27\x9d\x16\x49\xad\x3e\xe3\xae\xf4\x6e\xaf\xf8\x1e\xed\x92\xb2\xd2\xc6\x7b\x94\x0e\x43\xdf\x28\xf3\x51\x74\xde\x49\x0a\xc1\x8d\x49\xd7\xbd\x95\x91\x4a\x68\x44\x42\xee\xec\xac\x08\x6a\x35\x90\xb3\xe7\x46\x34\x84\x2a\x22\x34\x80\x3d\xac\xb0\x5b\x91\xcd\x0b\x07\x4d\xb7\x23\x73\xc3\xdc\x85\x72\x36\xb3\x35\x9f\x63\xa7\x2f\x62\xa8\x15\x06\xba\x90\xae\x9d\x61\xa7\x67\xb4\xe9\x66\xfb\x47\x67\x63\x42\xb3\x9c\xd0\x6c\xbd\x78\x70\x9a\x78\x0a\x5c\xf7\x26\xc7\x1e\xc8\xaf\x13\xd5\x2a\x6d\xd5\x74\xff\xfc\x62\xf8\x2b\x5f\xcf\x5f\xcf\x8b\x60\x70\x42\x66\xd4\x30\x32\x8c\x25\x5c\x1d\xb0\x7d\x5c\x4d\xcd\x4d\x9b\x8e\x24\x93\x1a\x02\xa8\x8d\x4b\x13\xe7\x1c\x5a\x67\x35\x3b\x3f\xfc\xee\x9c\x31\x94\x7e\xa6\x91\x95\x3f\x62\xdf\x1b\x5c\xd1\x6c\xd7\x73\x3f\xc7\x74\xe2\x7c\x70\xb5\x08\x5b\x2b\x85\x75\xea\x90\x61\x05\x00\xeb\x08\xf4\xe5\xf0\xab\x8d\xf5\xb3\x92\x84\xc1\xc0\x49\xb4\x4a\x58\x34\xc5\x41\x34\x15\xca\x55\xad\x63\x0c\x89\x70\x28\x59\xaf\xe3\x34\xf2\xc4\x7e\x1b\x87\xa7\x6e\xfb\x56\x20\x33\xb5\x1d\x87\x12\x5e\x1c\x9a\x05\xd9\x90\xea\x0d\x09\x76\x59\x30\xf2\x18\x2b\xe1\xaa\x3d\x32\x4d\xdb\x4e\x48\xe3\x02\x4d\x76\x8b\x79\x32\xdc\x1f\xee\x97\x57\x79\xb4\xca\x86\xe4\x2a\xb5\xec\x38\xf6\xf3\x4e\x9c\xeb\x9e\x32\x17\x49\x45\x1d\x4b\xef\x83\x08\x7f\x6a\x80\xbe\x15\xd2\x59\xd9\x7b\x1f\x1b\x9c\x36\xec\x51\xb2\x8b\x4c\xb8\x4c\xbd\xc3\x18\x56\xc2\xe8\x30\xcc\xfe\x1a\x7b\x93\x46\xc6\x88\x90\x50\x24\x75\x54\xdd\x29\xd8\xcb\xf6\xd0\x82\x36\x24\x7b\x3e\x34\x79\xd9\x1c\xda\x68\x15\xa5\x96\xb7\xe5\x6e\xe9\x62\x82\x3d\xd6\x80\xac\x6c\x5a\x8c\x24\x7d\xf6\x22\xc8\x46\x9b\x89\xb0\x7b\xe9\x3d\x76\xf0\x55\x3e\xf8\x7c\x50\x4e\xe8\x45\x35\xf1\x2e\x04\x71\xa4\xfb\x27\xf1\xbc\xfa\x8e\xa4\x96\x2b\x57\xd7\xc7\xcf\xd3\x43\xb6\x2f\x1e\x23\xfb\x62\x24\x7b\x87\x1e\x8d\x21\xa3\x43\x3b\xea\xfe\x23\x80\xe7\xd4\xf3\x64\x97\x64\x39\xbe\x25\x92\x3a\xfc\x88\x72\x1c\x15\x20\xbe\xf2\x93\xdc\x7d\x65\x29\x7e\xfa\x91\xa5\x98\x7f\x5e\x8b\xab\xc7\x75\xe7\x89\x95\xf8\xfe\x58\x4f\x83\x24\x8d\x91\x23\x88\x1b\x42\xcf\x15\xe1\x17\x30\xfb\xef\x55\xb8\xfc\x66\x55\x78\x9c\xfd\x75\x1c\x60\x71\xe6\x95\x50\xa3\x09\xb4\xd3\xff\xfc\xef\x4e\x8c\x2a\x4e\xc4\x38\x02\xe4\x56\x9a\xbd\x96\x3a\x28\x57\x6e\x82\x90\x9e\xd2\x42\x7a\x42\x7e\xa8\x2e\xa3\x01\xd9\xf8\xe6\x51\xfb\xb7\x3e\x5b\xad\x77\x0f\x85\xf1\x99\xf0\xcd\xa5\xed\x6b\x2b\x79\xf9\xb4\x76\x3a\xd1\x4f\xcf\x06\xe8\xde\x73\x6b\x7c\x20\x0e\x2f\xaf\x07\x02\xfa\x37\x00\x00\xff\xff\xc6\x68\xa8\x85\x03\x11\x00\x00")

func configChainstorageDogecoinMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageDogecoinMainnetBaseYml,
		"config/chainstorage/dogecoin/mainnet/base.yml",
	)
}

func configChainstorageDogecoinMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageDogecoinMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/dogecoin/mainnet/base.yml", size: 4355, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageDogecoinMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x6e\xc2\x30\x18\xc4\xf1\xdd\x4f\x71\xa2\x73\xac\xa8\x0c\x15\x9e\xe9\xd0\xa5\x2c\xd9\xd1\x17\xfb\x08\x16\xf1\xe7\xc8\x36\xa1\x7d\xfb\x8a\xa8\x42\xb7\xde\xff\xf7\x86\xe1\x1a\x2b\x2e\x71\x26\x62\xc5\x44\x65\x91\xc6\x80\xf1\x17\xbb\x24\x37\xc2\x67\xbd\xc4\x69\x67\x71\x3c\xe1\xfb\x34\xe0\xf3\xf8\x35\x58\x23\x8f\xea\x0c\x20\x8f\x7a\x16\xef\xf3\x5d\x9b\x43\xe0\xca\x39\x2f\x89\xda\x0c\x30\xde\xfd\x8d\xcd\x81\x3f\x92\x96\x99\x9d\xbf\x4a\xd4\xda\x72\x91\x89\x5d\xc8\x13\x7d\x8e\xda\x25\x89\xaa\x6c\x5d\xe0\x6a\xbc\x04\xaa\xe7\xe6\x86\x50\x58\xab\x43\x63\x5a\x72\x91\xf9\x79\xb0\xff\x94\xf5\x39\xb9\x8f\xf7\xfd\xde\x54\x96\x95\xe5\x19\x8c\x51\xc3\xf9\x55\xf5\x76\x9b\x3b\xf4\x87\xde\xfc\x05\x00\x00\xff\xff\x02\x04\x92\x7d\xe3\x00\x00\x00")

func configChainstorageDogecoinMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageDogecoinMainnetDevelopmentYml,
		"config/chainstorage/dogecoin/mainnet/development.yml",
	)
}

func configChainstorageDogecoinMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageDogecoinMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/dogecoin/mainnet/development.yml", size: 227, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageDogecoinMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageDogecoinMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageDogecoinMainnetLocalYml,
		"config/chainstorage/dogecoin/mainnet/local.yml",
	)
}

func configChainstorageDogecoinMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageDogecoinMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/dogecoin/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageDogecoinMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\x05\x91\x37\xdb\x08\x5e\x86\x22\x9a\xd3\xa1\x4b\xb3\x78\x37\x68\xe9\xda\x11\x2c\x89\x06\x25\xd7\xe9\xdf\x17\x76\x8a\x82\xcb\x1d\xce\x39\xe0\x3f\xea\x1e\xa1\xd0\x18\x22\x28\x14\x9a\x90\xa1\x5c\xe1\x69\xf8\xa6\x53\xe2\x19\xe4\x24\x8f\x61\x3a\xb5\x74\xbb\xd3\xe7\xbd\xa3\xf7\xdb\x47\xd7\x1a\xde\x8a\x35\x44\xbc\x95\x9e\x9d\x93\x35\x57\x4b\x8b\x8a\x5f\x5d\x0d\x92\x0d\xd1\xb0\xba\x19\xd5\x12\x9e\x9c\x96\x88\xc6\x3d\x38\xe4\x52\x45\x79\x42\xe3\x65\x82\x93\x90\x9b\xc4\x21\x67\xd4\x66\x57\x8d\x63\x8f\xec\x70\x74\xbd\x57\x94\x62\xa9\x22\x2d\xa2\x1c\xdb\xdf\x4e\xeb\x24\xd9\xb7\xff\x97\x8b\x29\xd0\x2f\xe8\x0e\x0f\x21\xfb\xfe\xcf\x38\xb7\xc7\xd9\xeb\xf9\x7a\x36\x25\xf2\x4e\xe0\xb9\xc0\x55\xf8\x7e\x13\x9d\xc7\x28\xaf\xe7\x1b\x4a\x92\x43\x15\x3d\xf6\x22\x31\xe2\x35\x4b\x55\x70\x82\x9a\x9f\x00\x00\x00\xff\xff\x24\x99\x42\xc7\x1e\x01\x00\x00")

func configChainstorageDogecoinMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageDogecoinMainnetProductionYml,
		"config/chainstorage/dogecoin/mainnet/production.yml",
	)
}

func configChainstorageDogecoinMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageDogecoinMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/dogecoin/mainnet/production.yml", size: 286, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumGoerliBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x41\x6f\x1b\x37\x13\xbd\xef\xaf\x18\xf8\x3b\xdb\x92\x1c\x3b\x5f\xb3\x40\x0f\x6d\x62\x24\x46\xd2\xb8\x08\x5c\x14\xe8\x85\x18\x91\xb3\x5a\x42\x5c\x72\x43\xce\x2a\x52\x7f\x7d\x41\x72\x57\x2b\xa9\xb2\x15\xa3\x49\x0c\x5f\xb4\xe4\x70\x38\x33\xef\xcd\x3c\xfa\x7f\x70\x5f\xeb\x00\x95\x36\x04\x3a\xc0\x82\x2c\x79\x64\x52\x30\xdf\xc0\x59\x83\x4b\x02\xe9\x6c\xa5\x17\x67\x17\xf0\xe6\x0e\x3e\xde\xdd\xc3\xcd\x9b\xdb\xfb\x8b\x02\x5b\x5d\x16\x00\x0d\xae\x85\xed\x1a\x31\x37\x4e\x2e\x45\xf4\x12\x4a\x98\x4d\xa7\xd3\xc3\xbd\x50\xc2\x75\x5c\x8c\x0b\x5f\x9c\x5f\x92\x4f\x86\x05\x40\x60\x4f\xd8\x68\xbb\x10\x73\x64\x59\x8b\xa0\xff\xa6\xde\x78\xdc\xd2\x96\xc9\xaf\xd0\x94\x30\x0b\x7b\x1b\xe9\x12\x27\x68\x45\x96\x05\xeb\x86\xa2\xd7\xa6\xc0\x2f\x21\x86\x87\x5f\x82\x40\x29\x5d\x67\xb9\x04\x45\x2b\x32\xae\x6d\xc8\x72\x01\x30\xef\xe4\x92\xb8\x84\xb3\xb3\x02\x40\x99\xcf\xd1\x1c\x40\x91\xc1\x8d\x08\x24\x43\x09\xaf\x52\x16\x00\x16\xa3\x57\x5a\x63\xd3\x1a\x12\xb2\x46\x6d\x03\x3b\x8f\x0b\xea\x53\x13\xc4\x35\x79\xea\x1a\xb1\x70\xe4\x8d\x16\xca\x7c\x4e\x27\x57\x3a\xe8\xb9\x36\x9a\x37\x29\x34\xd7\x71\xef\xfa\x65\x72\xad\x36\x16\x1b\xa7\xe6\xf9\xea\x5c\x42\xc6\xb9\x79\xda\x6d\xe9\x70\x9f\xff\xa9\xc3\xb9\x4e\x27\x5d\x88\x9a\xf4\xa2\x66\xa1\xad\xa2\xf5\xd7\xf8\x9b\x6f\x86\x23\xc7\x3c\xaf\xc8\x07\xed\x2c\x29\x71\x3a\xcc\xd1\xf6\x64\xc0\x47\xdd\xf6\xc7\x1e\x8b\xfc\x81\x2b\xe6\x9b\xe1\xac\x3a\x72\x1d\x59\xd5\x3a\x6d\x07\xc2\xb4\x9e\x82\x5e\x44\x1f\x9d\x37\x82\xd6\xad\xf6\xc8\xda\xd9\x12\x5e\x4c\x9b\x02\xc0\xd3\x22\x7d\x75\xe1\x9c\x30\xf0\xf9\x2c\x91\x36\xdd\xdf\x13\x0d\x19\x85\x74\x4d\x74\x14\x92\xe9\xdb\xbf\x6e\x7f\x2f\x24\x2a\xb2\x32\xd9\xa0\x52\x71\x6f\x60\xa8\x6b\x50\xdb\x12\x76\x33\x39\x1f\xc2\x3c\xdf\x86\xe9\x89\xc9\xc6\x40\x44\x4b\x5e\x3b\x55\xc2\xff\x8b\x74\x24\x7a\xcc\xe9\x05\x46\xcf\x3d\x5c\x25\x4c\x8b\x91\x79\x8b\x1c\x9a\x41\xa6\xc0\x25\xcc\xd2\x57\xe8\xd1\x9a\x8d\x86\xb9\xcb\x5e\x84\x61\x25\x5f\x00\xbf\x7e\xb8\x7b\xfd\xfe\xf5\xbb\x5f\x6e\x3f\x8a\x9b\xfb\x77\x37\x9f\x6e\xfe\xf8\xad\x00\x90\x46\x93\xe5\xec\xb9\xc1\xc0\xe4\xf3\xef\xb1\xa4\x62\xe1\x5d\xd7\xf6\x79\x02\x04\x83\x2b\x3a\x61\xb3\x42\xa3\x15\xb2\x7b\xdc\xd7\x40\x8b\x83\xbc\xa6\x7b\x79\xc5\xaf\x8a\x90\x3b\xdf\x5f\xea\x5d\x20\x66\x14\x2d\xfa\x40\xbe\x04\xf6\x1d\x15\x00\xda\x7b\x4a\xcc\x89\x24\x53\x3a\x30\x46\x9c\x60\x76\x15\x87\x1a\x71\x9c\x69\x25\x7c\xbc\xb9\xff\xf3\xee\xd3\xfb\x6d\xfe\xe2\xed\xdd\xcd\xa7\x0f\xb7\x45\x9e\xa1\xa2\x9f\x24\x07\xe4\x92\xde\xed\xc0\xe3\xd1\x2e\xa8\x1f\x82\x57\x45\xd5\x59\x19\xe1\x44\x23\x72\xf0\x67\x67\x45\x50\xcb\xc4\x8f\x8e\x6b\x51\x13\xaa\x18\x64\xca\x37\xad\xb0\x5b\x92\xed\x17\xf6\x68\xbf\xe5\x53\xcd\xdc\x86\x72\x32\xb1\x15\x9f\x63\xab\x2f\xa4\xd3\x76\x8e\x81\x2e\xa4\x6b\x26\xd8\xea\x09\xad\xdb\xc9\xee\xd1\xc9\x10\xf1\x24\x47\x3c\x59\xcd\x8e\x4e\x72\x4f\x81\xab\xce\xf4\x25\x0b\xe4\x57\x19\xec\xb9\xb6\x6a\xbc\x7e\x7a\x91\xfe\xca\x57\xd3\x57\xd3\x22\x18\x1c\x53\xef\x47\x88\x22\xc3\x58\xc2\xd5\x74\x8f\x71\xc3\xf2\x2c\xf5\x17\xad\x5b\x92\x4c\x2a\x45\x50\x19\x97\xc7\xfd\x39\x34\xce\x6a\x76\x3e\xfd\x6e\x9d\x31\x94\x7f\x66\xbd\xe8\x3f\x62\xeb\x19\x5c\xd2\x64\xcb\xfb\x9f\x63\x3e\x71\x3a\xbb\x4a\x84\x8d\x95\xc2\x3a\xb5\x0b\x72\x0a\x85\x75\x2c\xf4\x2c\xfd\x6a\x22\x42\x56\x92\x30\x18\x38\x8f\x8d\x12\x66\xd7\x4d\xb1\x17\xce\x1c\xe5\xb2\xd2\x31\x88\xcc\x2c\x94\xac\x57\x51\x0c\x3c\xb1\xdf\x44\xe9\xd2\x4d\xd7\x08\x64\xa6\xa6\xe5\x50\xc2\x8b\x7d\xb3\x20\x6b\x52\x9d\x21\xc1\xae\xef\xda\x5e\x45\x4a\xb8\x6e\x0e\x4c\xf3\xb6\x13\xd2\xb8\x40\xa3\x5d\xae\x56\x0c\x65\x94\xd6\xcb\xeb\x5e\xd8\x64\x4d\x72\x99\xdb\x66\x10\xdd\x7e\x27\xaa\xaa\xa7\xd6\x3b\x49\x21\x90\x8a\xc3\x24\xab\x73\x9c\x6f\x59\x14\xbb\x46\x48\x67\x65\xe7\x7d\x6c\x32\x5a\xb3\x47\xc9\x2e\x72\xe1\xf2\x2a\x59\x30\x86\xa5\x30\x3a\x24\xe5\xad\xb0\x33\x9c\x96\x87\x0a\x09\x45\x52\xc7\xc9\x37\x06\x7b\xd9\xec\x5b\xd0\x9a\x64\xc7\xfb\x26\x57\xf5\xbe\x8d\x56\x71\xde\xf1\xa6\xdc\x2e\x5d\x8c\x65\x8f\x18\x90\x95\x75\x83\x91\xa6\xcf\x0e\x82\xac\xb5\x19\x19\xbb\x93\xde\x43\x07\x5f\xf6\x07\x9f\xaf\x94\x63\xf5\xe2\x38\xf1\x2e\x04\x71\x30\x7b\x4f\xd6\xf3\xfa\x3b\x92\x5a\x2e\x5d\x55\x1d\x3e\x0e\xf7\xd9\x3e\x7b\x88\xec\xb3\x81\xec\x2d\x7a\x34\x86\x8c\x0e\x4d\x1c\xb9\x8f\x14\xbc\x4f\xbd\x97\x57\x49\x96\xa3\x9e\xe7\xe1\xf7\x23\xe0\x38\x00\x20\xbe\xb1\xf3\xbc\xfb\x4a\x28\x7e\xfa\x91\x50\x4c\xff\x8d\xc5\xf5\xc3\x73\x27\x6d\x54\xa8\x8d\x5b\x91\x17\x64\xa3\x38\xab\xad\xf8\x3e\x05\xa4\xef\x0f\xc3\x28\x32\x59\x62\x0e\xaa\x5f\x13\x7a\x9e\x13\x3e\x52\xce\xff\x0e\xd0\xe5\x37\x03\xe8\xe1\xc6\x78\x04\x8e\x2a\xea\x5e\x94\xca\x12\x2a\x34\x81\xb6\xaa\xd1\xff\x8f\x12\x03\x8e\x42\x1a\x85\x43\x6e\xa4\xd9\x69\xc4\x23\x48\x86\xfc\x06\x16\xd2\x13\xf2\x31\xc4\x06\x83\x6d\x20\xe3\xa5\xcf\xc6\x82\xed\xf3\x62\x78\x5c\x7c\xf3\x79\xf8\xb5\x18\x5f\x3e\xad\x07\x4f\x34\xe1\xb3\x15\x74\xe7\x91\x36\xbc\x2b\xd3\x7b\xed\x48\x40\xff\x04\x00\x00\xff\xff\x65\x3d\x3c\xbc\xb6\x10\x00\x00")

func configChainstorageEthereumGoerliBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumGoerliBaseYml,
		"config/chainstorage/ethereum/goerli/base.yml",
	)
}

func configChainstorageEthereumGoerliBaseYml() (*asset, error) {
	bytes, err := configChainstorageEthereumGoerliBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/goerli/base.yml", size: 4278, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumGoerliDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xbd\x6e\x83\x30\x14\xc5\xf1\xdd\x4f\x71\x95\xce\x20\x94\x54\xaa\xe2\x39\x1d\xba\x34\x0b\x3b\xba\xd8\x27\xd8\xc2\x1f\xc8\xbe\x90\xf6\xed\x2b\x50\x95\x73\xd6\xbf\x7e\x6f\xd4\x3b\x5f\xe9\xe1\x03\xc8\x57\x9a\x90\x50\x58\x60\x69\xfc\xa5\x53\xe4\x19\x64\x72\x7a\xf8\xe9\xd4\xd2\xed\x4e\xdf\xf7\x9e\x3e\x6f\x5f\x7d\xab\xf8\x59\xb5\x22\xe2\x67\x1d\xd8\x98\xbc\x26\xd1\x64\xb1\x21\xe4\x25\x22\x89\x22\x1a\x57\x33\x43\x34\xe1\x87\xe3\x12\xd0\x18\xc7\x3e\x55\xc9\x85\x27\x34\x10\x87\x82\x35\x36\x53\x46\x09\xbe\xb1\xd8\x94\x61\x8b\x64\x70\xb0\xd6\x16\xd4\xaa\x49\x10\x97\x5c\x38\xec\x41\xfb\x2f\xb5\x26\x47\xfd\x71\xbe\x5c\xd4\x41\xee\xfd\x18\xb2\x99\x87\x2a\x5c\x64\x70\xf0\x93\x13\x4d\xef\xe7\x6e\x9f\xaa\x28\x1b\xca\x51\xf9\x64\x87\x17\xdd\xb5\xc7\xf5\xb5\xbb\x76\xea\x2f\x00\x00\xff\xff\x30\xbe\x0b\x83\x07\x01\x00\x00")

func configChainstorageEthereumGoerliDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumGoerliDevelopmentYml,
		"config/chainstorage/ethereum/goerli/development.yml",
	)
}

func configChainstorageEthereumGoerliDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageEthereumGoerliDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/goerli/development.yml", size: 263, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumGoerliLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageEthereumGoerliLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumGoerliLocalYml,
		"config/chainstorage/ethereum/goerli/local.yml",
	)
}

func configChainstorageEthereumGoerliLocalYml() (*asset, error) {
	bytes, err := configChainstorageEthereumGoerliLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/goerli/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumGoerliProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x4e\xc3\x30\x18\xc4\xf1\xdd\x4f\x71\x2a\x73\xac\x88\x0e\xa8\x9e\xcb\xc0\x42\x97\xec\xd5\x17\xfb\x9a\x58\x8d\xed\xe8\xb3\x43\xe1\xed\x51\x23\x84\x6e\xbd\xff\xef\x05\xc3\x1c\x2b\x6e\x71\x21\x62\xc5\xc4\x4c\x95\xc6\x80\xf1\x07\x87\x24\x77\xc2\x97\x7c\x8b\xd3\xc1\xe2\x7c\xc1\xe7\x65\xc0\xfb\xf9\x63\xb0\x46\x1e\xd5\x19\x40\x1e\xf5\x2a\xde\x97\x2d\x37\x87\x55\x4b\xd8\x7c\x8b\x25\x1b\x60\xdc\xfc\x9d\xcd\x81\xdf\x92\xd6\x85\x9d\x9f\x25\xe6\xda\x8a\xca\xc4\x8e\x6d\xa6\x72\x4b\xdd\x54\xa8\x4b\xec\x9e\xa5\xf1\x12\x98\x3d\x77\x36\x04\x65\xad\x0e\x8d\x69\x2d\x2a\x8b\xfd\x63\xac\x2f\xc9\xbd\xbd\x1e\x8f\xa6\x52\xbf\xa8\xcf\xf3\x18\x73\xb8\xfe\x17\xbd\xdd\xe7\x4e\xfd\xa9\x37\xbf\x01\x00\x00\xff\xff\xef\x4b\x61\x54\xde\x00\x00\x00")

func configChainstorageEthereumGoerliProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumGoerliProductionYml,
		"config/chainstorage/ethereum/goerli/production.yml",
	)
}

func configChainstorageEthereumGoerliProductionYml() (*asset, error) {
	bytes, err := configChainstorageEthereumGoerliProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/goerli/production.yml", size: 222, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\xdb\x6e\x1b\x37\x10\x7d\xdf\xaf\x20\xdc\x67\x5b\x17\x5b\x69\xb3\x40\x1e\xd2\xc4\x68\x8c\x34\x76\x11\xb8\x28\xd0\x17\x62\x44\xce\x6a\x09\xf1\xb2\x21\x67\x15\xa9\x5f\x5f\xf0\x22\xad\xe4\x9b\x1c\xa4\xa9\xe1\x97\x15\x39\x1c\x1e\xce\x39\x9c\x43\xff\xc4\x6e\x5b\x15\x58\xa3\x34\x32\x15\xd8\x02\x2d\x7a\x20\x94\x6c\xbe\x61\x27\x06\x96\xc8\x84\xb3\x8d\x5a\x9c\x9c\xb1\xf7\x37\xec\xfa\xe6\x96\x5d\xbe\xbf\xba\x3d\xab\xa0\x53\x75\xc5\x98\x81\x35\xb7\xbd\xe1\x73\xed\xc4\x92\xc7\x2c\xa1\x66\x93\xf1\x78\x7c\x77\x2e\xd4\x6c\x16\x07\xe3\xc0\x57\xe7\x97\xe8\x53\x60\xc5\x58\x20\x8f\x60\x94\x5d\xf0\x39\x90\x68\x79\x50\xff\x60\x09\x1e\xa6\x94\x25\xf4\x2b\xd0\x35\x9b\x84\x83\x89\xb4\x89\xe3\xb8\x42\x4b\x9c\x94\xc1\x98\xd5\x54\xf0\x35\x44\x78\xf0\x35\x70\x10\xc2\xf5\x96\x6a\x26\x71\x85\xda\x75\x06\x2d\x55\x8c\xcd\x7b\xb1\x44\xaa\xd9\xc9\x49\xc5\x98\xd4\x5f\x62\x38\x63\x12\x35\x6c\x78\x40\x11\x6a\xf6\x3a\x9d\x82\x31\x0b\x31\x2b\xae\xc1\x74\x1a\xb9\x68\x41\xd9\x40\xce\xc3\x02\xcb\xd1\x38\x52\x8b\x1e\x7b\xc3\x0d\x28\x6b\x91\xb8\xd4\x5f\xd2\xd2\x95\x0a\x6a\xae\xb4\xa2\x4d\xc2\xe6\x7a\x2a\xb9\x5f\xa5\xdc\x72\x63\xc1\x38\x39\xcf\x7b\xe7\x1a\x12\xcc\xf5\x37\x6e\x97\x56\x97\x0a\x1c\x5b\x9d\x2b\x75\x3c\x07\x6f\x51\x2d\x5a\xe2\xca\x4a\x5c\x3f\x27\xe1\x7c\xb3\x5d\xf2\x60\xea\x15\xfa\xa0\x9c\x45\xc9\x8f\x03\x1d\x62\x8f\x43\x7e\x30\x6f\x59\xf7\x14\xf6\x47\xf6\x98\x6f\xb6\x6b\xe5\x43\xfb\xa1\x95\x9d\x53\x76\x2b\x9b\xce\x63\x50\x8b\x98\xa4\xf7\x9a\xe3\xba\x53\x1e\x48\x39\x5b\xb3\xf3\xb1\xa9\x18\xf3\xb8\x48\xbf\xfa\x70\x8a\x10\xe8\x74\x92\xa4\x9b\x00\x14\xb9\x01\x01\x17\xce\xc4\x44\x21\x85\xfe\xf6\xf7\xd5\x1f\x95\x00\x89\x56\xa4\x18\x90\x32\xce\x6d\x75\xea\x22\x96\x9a\xed\x1f\xe5\x74\x8b\xf3\x74\xc0\xe9\x91\xd0\x46\x24\xbc\x43\xaf\x9c\xac\xd9\xcf\x55\x5a\x13\x53\xe6\x03\x06\x02\x4f\x85\xb2\x9a\x8d\xab\x41\x7f\x8b\x8c\x4d\x03\x61\xa0\x9a\x4d\xd3\xaf\x50\x08\x9b\x0e\x81\xf9\xb2\x9d\x87\xed\x48\xde\x80\xfd\xfa\xfb\xcd\xbb\x8f\xef\x3e\xbc\xbd\xba\xe6\x97\xb7\x1f\x2e\x3f\x5f\xfe\xf9\xa9\x62\x4c\x68\x85\x96\x72\x66\x03\x81\xd0\xe7\xef\xa1\xa6\x7c\xe1\x5d\xdf\x95\x83\x32\x16\x34\xac\xf0\x48\xcc\x0a\xb4\x92\x40\xee\xe9\x5c\x5b\x61\xdc\x39\xd7\xe4\xe0\x5c\xb1\x00\x0d\x02\xf5\xbe\x6c\xea\x5d\x40\x22\xe0\x1d\xf8\x80\xbe\x66\xe4\x7b\xac\x18\x53\xde\x63\xd2\x4e\x94\x99\x54\x81\x20\x12\xc5\x26\x17\xb1\xb7\x21\xc5\xd6\x56\xb3\xeb\xcb\xdb\xbf\x6e\x3e\x7f\xdc\x9d\x9f\x7f\x7a\x7b\x75\x7d\x7d\x79\x5b\xe5\x5e\xca\x4b\x47\xb9\xab\x2f\xe1\xdd\x1e\x41\x1e\xec\x02\x4b\x37\xbc\xa8\x9a\xde\x8a\x48\x28\x68\x9e\xe1\x9f\x9c\x54\x41\x2e\x93\x44\x7a\x6a\x79\x8b\x20\x23\xcc\x74\xe2\x34\x42\x6e\x89\xb6\x0c\x1c\x48\x7f\x27\xa9\x96\xa8\x0b\xf5\x68\x64\x1b\x3a\x85\x4e\x9d\x09\xa7\xec\x1c\x02\x9e\x09\x67\x46\xd0\xa9\x11\xae\xbb\xd1\xfe\xd2\xd1\x16\xf2\xa8\x40\x1e\xad\x26\x0f\xf6\x74\x8f\x81\x9a\x5e\x97\xaa\x05\xf4\xab\xcc\xf7\x5c\x59\x39\xec\x3f\x3e\x4b\x7f\xf5\xeb\xf1\xeb\x71\x15\x34\x0c\x67\x2f\x9d\x44\xa2\x26\x28\x29\x07\xd1\x6d\x87\xa7\xf1\x8a\xe1\xba\x43\x41\x28\x13\x80\x46\xbb\xdc\xf7\x4f\x99\x71\x56\x91\xf3\xe9\xbb\x73\x5a\x63\xfe\xcc\xc6\x71\xe7\xc7\x68\xa7\x90\x37\x93\x34\x11\xaf\xa5\x86\x25\x8e\x76\x57\xe2\xcd\x34\x4d\x08\xef\x42\xe0\x3b\xd9\x55\x8c\xc5\x96\xee\x1a\x1e\x36\x56\x70\xeb\xe4\x81\x26\x22\x6c\x52\x91\x95\x49\xfa\x32\x91\x4e\x2b\x90\x6b\x08\x94\xfb\x4c\xcd\xce\x4d\x75\x00\x7d\x0e\x62\xd9\xa8\x08\x38\xeb\x10\x04\xa9\x55\x34\x10\x8f\xe4\x37\xd1\xef\x94\xe9\x0d\x07\x22\x34\x1d\x85\x9a\x9d\x1f\x86\x05\xd1\xa2\xec\x35\x72\x72\xe5\x8e\x17\xe7\xa9\xd9\xcc\xdc\x09\xcd\xd3\x8e\x0b\xed\x02\x0e\x71\x93\x71\x0e\xdc\xf7\xe3\xe9\xac\xb8\xa1\x68\x51\x2c\xf3\x25\xdb\x3a\x75\x99\x89\x56\xec\xb1\xf3\x4e\x60\x08\x28\x63\xeb\xc9\x96\x1e\xdb\x61\x76\xd2\xde\x70\xe1\xac\xe8\xbd\x8f\x05\xc7\x35\x79\x10\xe4\xa2\x6c\xa6\x17\x29\x82\x20\x2c\xb9\x56\x21\xd9\x75\x03\xbd\xce\x5d\x7e\x5b\x21\x2e\x51\xa8\xd8\x28\x07\xb0\x53\x73\x18\x81\x6b\x14\x3d\x1d\x86\x5c\xb4\x87\x31\x4a\xc6\xee\x48\x9b\x7a\x37\x74\x36\x94\x3d\x72\x80\x56\xb4\x06\xa2\xa2\x5f\x9c\x04\xd1\x2a\x3d\xa8\x7b\xef\x78\x8f\x2d\x7c\x55\x16\xbe\x5c\x29\x87\xea\xc5\xd6\x73\x78\x65\x9e\x59\xcf\xd9\x0f\x14\xb5\x58\xba\xa6\xd9\x7b\x51\xce\xc6\x63\x13\xee\x09\x7e\x32\x7e\x4c\xf0\xbb\x99\x0e\x3c\x68\x8d\x5a\x05\x13\x5b\xf4\x13\x45\x2f\xc7\x2f\x86\x2c\xd0\x52\x7c\x02\x14\x0b\xda\x9b\x3c\x34\xe5\xc9\x2c\xde\xad\xb2\xd9\x8f\xe7\xed\x7e\x73\x2b\x4d\xf4\x99\x9c\xfd\xf2\x3f\x72\x36\x19\xdf\x67\x6c\xf6\x78\x83\x4a\x13\x0d\x28\xed\x56\xe8\x39\xda\xe8\xf9\x72\xe7\xe9\xdf\xc2\xe4\x8f\xa7\x61\x70\xae\xec\x5b\x77\xaa\xdf\x22\x78\x9a\x23\x3c\x51\xce\xef\x27\x68\xfa\xdd\x04\x9d\x87\x23\x97\xe7\x09\x36\x9a\x68\x8f\xd1\x51\x6b\xd6\x80\x0e\xb8\x73\x97\xf2\xff\x4f\xc4\x1b\xfd\x36\x1a\x8c\xd8\x08\x9d\xd3\xde\x27\x72\x92\xc7\x42\x7e\x5b\x73\xe1\x11\xe8\x21\xc6\xb6\x01\x3b\x24\xc3\xae\x2f\xa6\x82\xdd\x9b\x65\xfb\x48\xf9\xcf\x1b\xe7\x73\x39\x9e\x1e\xa1\xf8\xf0\x0a\x1e\xb9\x83\x2f\x56\xcf\xbd\x87\xdf\xf6\xa9\x9a\x5e\x74\x0f\x00\xfa\x37\x00\x00\xff\xff\x75\x20\x9d\x76\x13\x11\x00\x00")

func configChainstorageEthereumMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumMainnetBaseYml,
		"config/chainstorage/ethereum/mainnet/base.yml",
	)
}

func configChainstorageEthereumMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageEthereumMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/mainnet/base.yml", size: 4371, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x6e\x83\x30\x10\xc6\xf1\xdd\x4f\x71\x4a\x67\x10\x4a\x86\x2a\x9e\xd3\xa1\x4b\xb3\xb0\xa3\xc3\xfe\x02\x56\xec\x33\xb2\x0f\xd2\xbe\x7d\x05\xaa\xaa\x9b\xee\xd3\x5f\xbf\x37\xea\xe7\x50\xe9\x11\x22\x28\x54\x9a\x20\x28\xac\xf0\x34\xfe\xd0\x29\xf1\x13\xe4\xb2\x3c\xc2\x74\x6a\xe9\x76\xa7\xaf\x7b\x4f\x1f\xb7\xcf\xbe\x35\xfc\xaa\xd6\x10\xf1\xab\x0e\xec\x5c\x5e\x45\x2d\x79\x6c\x88\x79\x49\x10\x35\x44\xe3\xea\x9e\x50\x4b\xf8\xe6\xb4\x44\x34\x6e\xe6\x20\x55\x73\xe1\x09\x0d\x74\x46\xc1\x9a\x9a\xc4\x41\x04\xda\x78\x6c\xc6\xb1\x87\x38\x1c\xae\xf7\x05\xb5\x5a\x52\xa4\x25\x17\x8e\x7b\xd0\xfe\x51\xad\xcb\xc9\xbe\x9f\x2f\x17\x73\x98\x7b\x8f\x0d\xa2\x83\xf2\xb4\x3f\x44\x91\x15\x55\x2d\x9d\x4d\x45\xd9\x50\xf6\x75\x0c\xe2\x87\x7f\xb7\x6b\x8f\xb3\xd7\xee\xda\x99\xdf\x00\x00\x00\xff\xff\x09\xce\xe9\x04\x05\x01\x00\x00")

func configChainstorageEthereumMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumMainnetDevelopmentYml,
		"config/chainstorage/ethereum/mainnet/development.yml",
	)
}

func configChainstorageEthereumMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageEthereumMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/mainnet/development.yml", size: 261, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageEthereumMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumMainnetLocalYml,
		"config/chainstorage/ethereum/mainnet/local.yml",
	)
}

func configChainstorageEthereumMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageEthereumMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x4e\xc3\x30\x18\xc4\xf1\xdd\x4f\x71\x2a\x73\xac\x88\x0e\xa8\x9e\xcb\xc0\x42\x97\xec\xd5\x17\xfb\x9a\x58\x8d\x3f\x47\xb6\x43\xe1\xed\x51\x23\x84\x6e\xbd\xff\xef\x05\xc3\x1c\x2b\x6e\x71\x21\x62\xc5\x44\x65\x91\xc6\x80\xf1\x07\x87\x24\x77\xc2\x67\xbd\xc5\xe9\x60\x71\xbe\xe0\xf3\x32\xe0\xfd\xfc\x31\x58\x23\x8f\xea\x0c\x20\x8f\x7a\x15\xef\xf3\xa6\xcd\x61\x2d\x39\x6c\xbe\xc5\xac\x06\x18\x37\x7f\x67\x73\xe0\xb7\xa4\x75\x61\xe7\x67\x89\x5a\x5b\x2e\x32\xb1\x63\x9b\x59\xb8\xa5\x2e\x49\x54\x65\xeb\x9e\xa9\xf1\x12\xa8\x9e\xbb\x1b\x42\x61\xad\x0e\x8d\x69\xcd\x45\x16\xfb\xe7\x58\x9f\x93\x7b\x7b\x3d\x1e\x4d\x65\xf9\x62\x79\x9e\xc7\xa8\xe1\xfa\x5f\xf4\x76\x9f\x3b\xf5\xa7\xde\xfc\x06\x00\x00\xff\xff\xae\x16\x62\xef\xdf\x00\x00\x00")

func configChainstorageEthereumMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumMainnetProductionYml,
		"config/chainstorage/ethereum/mainnet/production.yml",
	)
}

func configChainstorageEthereumMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageEthereumMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/mainnet/production.yml", size: 223, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageOptimismMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x41\x6f\x1b\x37\x13\xbd\xef\xaf\x20\xfc\x9d\x6d\x49\x4e\x9c\xaf\xd9\x5b\x9a\x04\xad\x91\xc6\x0e\x5a\x01\x05\x7a\x21\x66\xc9\x59\x2d\x21\x2e\xb9\xe1\xcc\xca\x52\x7f\x7d\xc1\x25\xd7\x2b\x39\x72\xe4\x20\x48\x0c\x5d\x24\x72\x38\x1c\xbe\xf7\xf8\x86\xfa\x9f\x58\x36\x86\x44\x6d\x2c\x0a\x43\x62\x85\x0e\x03\x30\x6a\x51\xed\xc4\x59\x0b\x6b\x14\xca\xbb\xda\xac\xce\x2e\xc4\xbb\x5b\x71\x73\xbb\x14\xef\xdf\x5d\x2f\x2f\x0a\xe8\x4c\x59\x08\xd1\xc2\x56\xba\xbe\x95\x95\xf5\x6a\x2d\x63\x16\x2a\xc5\x62\x3e\x9f\x3f\x9c\xa3\x52\x5c\xc5\xc1\x38\x70\xe7\xc3\x1a\xc3\x10\x58\x08\x41\x1c\x10\x5a\xe3\x56\xb2\x02\x56\x8d\x24\xf3\x2f\xe6\xe0\x69\xca\x38\xc6\xb0\x01\x5b\x8a\x05\x1d\x4c\x0c\x9b\x78\x89\x1b\x74\x2c\xd9\xb4\x18\xb3\xb6\x05\xdc\x51\x2c\x0f\xee\x48\x82\x52\xbe\x77\x5c\x0a\x8d\x1b\xb4\xbe\x6b\xd1\x71\x21\x44\xd5\xab\x35\x72\x29\xce\xce\x0a\x21\xb4\xfd\x1c\xc3\x85\xd0\x68\x61\x27\x09\x15\x95\xe2\xf5\x70\x0a\x21\x1c\xc4\xac\xb8\x85\xb6\xb3\x28\x55\x03\xc6\x11\xfb\x00\x2b\xcc\x47\x93\xbe\x63\xd3\x1a\x6a\x65\x0b\xc6\x39\x64\xa9\xed\xe7\x61\xe9\xc6\x90\xa9\x8c\x35\xbc\x1b\x6a\xf3\x3d\xe7\xdc\xaf\x86\xdc\x7a\xe7\xa0\xf5\xba\x4a\x7b\x27\x0c\x19\x2a\xfb\x8d\xdb\x0d\xab\x33\x02\xa7\x56\x27\xa4\x4e\xe7\x90\x0d\x9a\x55\xc3\xd2\x38\x8d\xdb\xa7\x24\xac\x76\xe3\x92\xa3\xa9\x37\x18\xc8\x78\x87\x5a\x9e\x2e\x74\x8a\x3d\x5d\xf2\xd1\xbc\x79\xdd\xd7\x6a\x7f\x64\x8f\x6a\x37\xae\xd5\xc7\xf6\x43\xa7\x3b\x6f\xdc\x28\x9b\x2e\x20\x99\x55\x4c\xd2\x07\x2b\x71\xdb\x99\x00\x6c\xbc\x2b\xc5\x8b\x79\x5b\x08\x11\x70\x35\xfc\xea\xe9\x1c\x81\xf8\x7c\x31\x48\x77\x28\x20\xcb\x0d\x18\xa4\xf2\x6d\x4c\x44\x43\xe8\x6f\xff\x5c\x7f\x2a\x14\x68\x74\x6a\x88\x01\xad\xe3\xdc\xa8\x53\x1f\x6b\x29\xc5\xfe\x51\xce\xc7\x3a\xcf\xa7\x3a\x03\x32\xba\x58\x89\xec\x30\x18\xaf\x4b\xf1\xff\x62\x58\x13\x53\xa6\x03\x12\x43\xe0\x4c\x59\x29\xe6\xc5\xa4\xbf\x55\xaa\xcd\x02\x23\x71\x29\x16\xc3\x2f\xca\x84\x2d\xa6\xc0\xe1\xb2\x5d\xb6\xe3\x40\xca\x2f\x7e\xfd\xe3\xf6\xed\x87\xb7\xbf\xbf\xb9\xbe\x91\xb7\x9f\x96\xd7\x1f\xaf\xff\xfa\x58\x08\xa1\xac\x41\xc7\x29\x71\x0b\xc4\x18\xd2\xf7\x09\x52\xb9\x0a\xbe\xef\xf2\x39\x85\x20\x0b\x1b\x3c\x11\xb3\x01\x6b\x34\xb0\xff\x7a\xae\x51\x17\x27\x8f\x55\x23\x70\x1f\xf2\xa6\xc1\x13\x32\x83\xec\x20\x10\x86\x52\xd4\x60\x09\x0b\x21\x4c\x08\x38\x68\x27\xca\x4c\x1b\x62\x88\x44\x45\xcb\x8b\xe6\x86\x1c\xbd\xad\x14\x37\xef\x97\x7f\xdf\xfe\xf9\xe1\x1e\x01\xf9\xf1\xcd\xf5\xcd\xcd\xfb\x65\x91\xcc\x54\x26\x4b\xf9\x42\x60\x2a\xf8\x3d\x86\x02\xb8\x15\x66\x3b\x7c\x19\xc9\x37\x34\x88\x3b\x6e\x51\x5b\x7f\x17\x29\xe4\x9e\x4a\xc1\xa1\xc7\xa2\xee\x9d\x8a\x8c\x83\x95\xe9\x80\x67\x67\x05\xe9\xf5\xa0\xa1\x9e\x1b\xd9\x20\xe8\x78\x90\x01\x93\x61\x84\xfd\x1a\x5d\x1e\x38\xb8\x1b\xf7\x9a\x6b\x98\x3b\x2a\x67\x33\x57\xf3\x39\x74\xe6\x42\x79\xe3\x2a\x20\xbc\x50\xbe\x9d\x41\x67\x66\xb8\xed\x66\xfb\x4b\x67\xe3\x91\x66\xf9\x48\xb3\xcd\xe2\xa8\xe9\x07\x24\xae\x7b\x9b\x6b\x27\x0c\x9b\xa4\x88\xca\x38\x3d\xed\x3f\xbf\x18\x3e\xe5\xeb\xf9\xeb\x79\x41\x16\x26\x6c\xb2\xd5\x68\xb4\x0c\x23\xfa\x93\x2c\xc7\xf1\xab\x28\xce\x68\xba\xbe\x96\xb4\x73\x4a\x3a\xaf\xbf\x64\x8d\x4d\xc4\xe5\xc5\xf0\xad\x8d\x80\x3b\x85\xd2\x02\x71\xb2\x82\xd4\x50\x46\xd0\x87\xb6\x52\x81\x5a\xd7\xc6\xda\x51\xc5\xa0\xd8\x6c\xa2\xc9\x07\xe4\xb0\x8b\x3d\xc9\xb4\x7d\x2b\x81\x19\xdb\x8e\x29\x25\xdf\x0b\x23\xd5\xa0\xee\x2d\x4a\xf6\xf9\x1e\xe6\xee\x90\x4b\xde\x0f\x4d\xd3\x5e\x2a\xeb\x09\xa7\xb8\xcb\x79\x0a\xdc\xef\x99\x97\x57\xb9\x63\xa9\x06\xd5\x3a\xdd\x84\xb1\x9b\xe6\x99\xd8\x2e\x03\x76\xc1\x2b\x24\x42\x1d\xed\x21\xb5\xdd\x68\x59\xa9\xdb\xf5\xad\x54\xde\xa9\x3e\x84\x78\x6f\x70\xcb\x01\x14\xfb\xc4\x5c\x0a\x61\xa0\xb5\xb4\x86\x86\x9e\x5a\x43\x6f\x93\x15\xdf\xeb\x52\xa3\x32\xd1\xcd\xf6\xaa\x6d\x0f\x23\x70\x8b\xaa\xe7\xc3\x90\x97\xcd\x61\x8c\xd1\xd1\xc2\x78\x57\xde\x0f\x5d\x4c\xb8\x47\x12\xd0\xa9\xa6\x85\xa8\xaa\x67\x63\x61\x91\x59\x50\x8d\xb1\x5a\x1e\x39\xde\x63\x0b\x5f\xe5\x85\xcf\x07\xe5\x84\x5e\xbc\xfe\xc1\x13\xc9\x07\x7e\x7a\x12\xcf\xab\x1f\x86\x67\x24\xda\xd7\xf5\xc3\x67\xdf\xa1\xdc\x17\x8f\xa9\x7d\x31\xaa\xbd\x83\x00\xd6\xa2\x35\xd4\x26\x0b\x7d\x14\xf0\x7c\xf4\xdc\x31\x15\x3a\x8e\x3d\x3a\x79\xd5\xcf\xa0\xe3\x01\x01\xf1\xf5\xec\x9d\x79\x3a\x15\xbf\xfc\x4c\x2a\xe6\x5f\x72\x71\xf5\xb8\xf1\x7c\x23\x13\x3f\x1e\xeb\x8c\x6c\x7c\xbf\xf9\x23\x1e\xde\x20\x04\xae\x10\xbe\x82\xd9\xf7\xb3\x70\xf9\xdd\x2c\xbc\xa0\x13\xe2\xaf\x63\x07\x8b\x5d\x6f\x7a\xbc\x24\xff\xcf\xff\x22\x62\x51\xb1\x27\xc6\x16\xa0\x76\xca\xee\xdd\xa8\x23\x6c\x51\x7a\xa0\x4a\x15\x10\xf8\x18\x2b\x63\x00\xba\xf8\x48\xd1\xfb\x9b\x3e\x1b\xd3\x89\xdf\xfb\xff\x8b\x4f\x6e\x14\x4f\x37\xb6\xa7\xf2\x78\x79\x82\xc6\xc3\xbb\x74\xe2\x32\x3d\x1b\x9e\x23\x8c\x45\x0a\x8b\xcf\xb9\x42\x88\xf3\x63\x05\xfd\x17\x00\x00\xff\xff\x83\x45\x6a\x15\x58\x10\x00\x00")

func configChainstorageOptimismMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageOptimismMainnetBaseYml,
		"config/chainstorage/optimism/mainnet/base.yml",
	)
}

func configChainstorageOptimismMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageOptimismMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/optimism/mainnet/base.yml", size: 4184, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageOptimismMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x6f\x83\x30\x10\xc5\xf1\xdd\x9f\xe2\x94\xce\x20\x54\x86\x28\x9e\xd3\xa1\x4b\xb3\xb0\xa3\xc3\x7e\x01\x0b\x6c\x23\xdf\x85\xb4\xdf\xbe\x8a\x55\xf5\xbd\xf5\xaf\xdf\x1b\x0d\x4b\x10\xba\x87\x0d\x14\x84\x66\x24\x14\x56\x78\x9a\x7e\xe8\x14\x79\x05\xb9\x9c\xee\x61\x3e\xb5\x74\xbd\xd1\xd7\x6d\xa0\x8f\xeb\xe7\xd0\x1a\x7e\x8a\x35\x44\xfc\x94\x91\x9d\xcb\x8f\xa4\x96\x3c\x0e\x6c\x79\x8f\x48\x6a\x88\xa6\x87\x5b\xa1\x96\xf0\xcd\x71\xdf\xd0\xb8\x85\x43\x12\xcd\x85\x67\x34\x79\xd7\x10\x83\xc4\x26\x72\x48\x09\xda\x78\x1c\xc6\xb1\x47\x72\xa8\xae\xf7\x05\x22\x96\x14\x71\xcf\x85\xb7\x57\xd0\xfe\x51\xad\xcb\xd1\x9e\xdf\xfb\xde\x54\xf3\xd5\x4f\x5b\x76\xeb\x28\xca\x45\xc7\x05\x61\x5e\xd4\x52\x7f\xee\xea\x8c\xa0\x1c\x28\x35\x0b\xc9\x8f\xff\x76\xd7\xd6\xdb\x4b\x77\xe9\xcc\x6f\x00\x00\x00\xff\xff\x4b\x76\x14\xbe\x09\x01\x00\x00")

func configChainstorageOptimismMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageOptimismMainnetDevelopmentYml,
		"config/chainstorage/optimism/mainnet/development.yml",
	)
}

func configChainstorageOptimismMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageOptimismMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/optimism/mainnet/development.yml", size: 265, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageOptimismMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageOptimismMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageOptimismMainnetLocalYml,
		"config/chainstorage/optimism/mainnet/local.yml",
	)
}

func configChainstorageOptimismMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageOptimismMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/optimism/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageOptimismMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x6e\xc3\x30\x0c\x84\xe1\x5d\x4f\x71\x48\x67\x1b\x46\x33\x14\xd1\x9c\x0e\x5d\x9a\xc5\x7b\x40\x53\x8c\x43\xc4\xa2\x0c\x51\x6e\xda\xb7\x2f\x12\x14\xc5\xad\xf7\x7f\x2f\x18\xaf\xea\xb8\xe8\x22\x50\xc7\x2c\x26\x95\x9a\x24\x4c\x3f\xd8\x65\xba\x09\xb8\xd8\x45\xe7\x5d\x8f\xe3\x09\x9f\xa7\x11\xef\xc7\x8f\xb1\x0f\x74\xf7\x18\x00\xba\xfb\x99\x98\xcb\x66\x2d\x62\xad\x25\x6d\xdc\xb4\x58\x00\xa6\x8d\x6f\xd2\x22\xe4\x9b\xf2\xba\x48\xc7\x57\x52\xf3\x56\x2a\xcd\xd2\x95\xb5\x69\x56\xcf\x5d\x26\x35\x93\xd6\x3d\xd2\xc0\x94\xc4\x58\x9e\x6e\x4a\x55\xdc\x23\x9a\xe4\xb5\x54\x5a\xfa\x3f\xa7\xe7\x92\xe3\xdb\xeb\x7e\x1f\x5c\xea\x97\xd4\xc7\x79\x52\x4b\xe7\xff\x62\xe8\x9f\x8b\x87\xe1\x30\x84\xdf\x00\x00\x00\xff\xff\x4c\x97\x1c\x66\xdf\x00\x00\x00")

func configChainstorageOptimismMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageOptimismMainnetProductionYml,
		"config/chainstorage/optimism/mainnet/production.yml",
	)
}

func configChainstorageOptimismMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageOptimismMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/optimism/mainnet/production.yml", size: 223, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstoragePolygonMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5b\x6f\x1b\x37\x13\x7d\xdf\x5f\x41\xf8\x7b\xb6\x75\x71\xf4\xb5\x59\x20\x0f\x69\x12\xa4\x46\x52\x3b\x28\x0c\x14\xed\x0b\x31\x4b\xce\x6a\x09\x71\xc9\x0d\x39\xab\x48\xfd\xf5\x05\x2f\xab\x95\xe4\x8b\x1c\x34\xae\xe1\x17\x2d\x39\x1c\x9e\x99\x33\x33\x87\xfe\x1f\xbb\x6d\x94\x67\xb5\xd2\xc8\x94\x67\x4b\x34\xe8\x80\x50\xb2\x6a\xcb\xce\x5a\x58\x21\x13\xd6\xd4\x6a\x79\x76\xc1\xde\xdf\xb0\xeb\x9b\x5b\xf6\xe1\xfd\xd5\xed\x45\x01\x9d\x2a\x0b\xc6\x5a\xd8\x70\xd3\xb7\xbc\xd2\x56\xac\x78\xf0\xe2\x4b\x36\x9b\x4e\xa7\xc7\x7b\xbe\x64\x8b\xb0\x18\x16\xbe\x59\xb7\x42\x17\x0d\x0b\xc6\x3c\x39\x84\x56\x99\x25\xaf\x80\x44\xc3\xbd\xfa\x1b\xb3\xf1\xb8\xa5\x0c\xa1\x5b\x83\x2e\xd9\xcc\x1f\x6c\xc4\x4b\x2c\xc7\x35\x1a\xe2\xa4\x5a\x2c\xd9\x6c\xd1\x16\xf0\xcd\x07\x78\xf0\xcd\x73\x10\xc2\xf6\x86\x4a\x26\x71\x8d\xda\x76\x2d\x1a\x2a\x18\xab\x7a\xb1\x42\x2a\xd9\xd9\x59\xc1\x98\xd4\x5f\x83\x39\x63\x12\x35\x6c\xb9\x47\xe1\x4b\xf6\x3a\x46\xc1\x98\x81\xe0\x15\x37\xd0\x76\x1a\xb9\x68\x40\x19\x4f\xd6\xc1\x12\x73\x68\xbc\xb3\x7a\xbb\xb4\x86\xb7\xa0\x8c\x41\xe2\x52\x7f\x8d\x27\xd7\xca\xab\x4a\x69\x45\xdb\x08\xcd\xf6\x94\x5d\xff\x3f\xba\x96\x5b\x03\xad\x95\x55\xba\x3a\xa5\x90\xa0\xd2\xdf\x77\x5b\x3c\x9c\xe3\x3f\x75\x38\xe5\xe9\xa4\x0b\xde\xa0\x5a\x36\xc4\x95\x91\xb8\x79\x8a\xbf\x6a\x3b\x1c\xb9\xcf\xf3\x1a\x9d\x57\xd6\xa0\xe4\xa7\x61\x8e\xb6\x27\x01\xdf\xeb\x36\x1f\x7b\x0c\xf9\x03\x57\x54\xdb\xe1\xac\xbc\xe7\x3a\x34\xb2\xb3\xca\x0c\x05\xd3\x39\xf4\x6a\x19\x7c\xf4\x4e\x73\xdc\x74\xca\x01\x29\x6b\x4a\x76\x39\x6d\x0b\xc6\x1c\x2e\xe3\x57\xef\xcf\x11\x3c\x9d\xcf\x62\xd1\xc6\xfb\x73\xa1\x01\x01\x17\xb6\x0d\x8e\x7c\x34\xfd\xf8\xd7\xd5\x97\x42\x80\x44\x23\xa2\x0d\x48\x19\xf6\x86\x0a\xb5\x01\x4b\xc9\xf6\x23\x39\xcf\x30\xcf\x47\x98\x0e\x09\x4d\x00\xc2\x3b\x74\xca\xca\x92\xfd\x54\xc4\x23\xc1\x63\x0a\xcf\x13\x38\xca\x74\x95\x6c\x5a\x8c\x95\xb7\x4c\xd0\x34\x10\x7a\x2a\xd9\x3c\x7e\xf9\xcc\xd6\x6c\x34\x8c\x5d\x36\xf7\xc3\x42\xf2\xcf\x7e\xf9\x7c\xf3\xee\xd3\xbb\x5f\xdf\x5e\x5d\xf3\x2f\x37\x9f\xff\xfc\x78\x73\x5d\x30\x26\xb4\x42\x43\xc9\x6f\x0b\x9e\xd0\xa5\xdf\x63\x42\xf9\xd2\xd9\xbe\xcb\x51\xc6\x00\xdc\x76\xb0\x09\xcd\x0d\x44\xd8\x76\x14\xe6\x47\xc2\xa3\x61\x8d\x27\x9c\xac\x41\x2b\x09\x64\x1f\xbf\x6c\xa8\x9a\xa3\xb0\xa7\x07\x61\x87\xaf\x1a\x81\x7a\x97\x2f\x75\xd6\x23\x11\xf0\x0e\x9c\x47\x57\x32\x72\x3d\x16\x8c\x29\xe7\x30\x16\x56\xa8\x41\xa9\x3c\x41\xa0\x91\x5d\xc6\x46\x37\x48\x61\xe6\x95\xec\xfa\xc3\xed\x1f\x37\xbf\x7f\x1a\x12\xc4\x7f\x7b\x7b\x75\x7d\xfd\xe1\xb6\x48\x33\x96\xa7\x49\x73\x5c\x7c\xc2\xd9\x3d\xfa\x1c\x98\x25\xe6\x21\xf9\xaa\xa8\x7b\x23\x02\xdd\xa0\x79\x42\x7f\x76\x56\x78\xb9\x8a\xf5\xd3\x53\xc3\x1b\x04\x19\x50\xc6\x80\xe3\x0a\xd9\x15\x9a\xbc\x70\xd0\x16\xbb\x7a\x6b\x88\x3a\x5f\x4e\x26\xa6\xa6\x73\xe8\xd4\x85\xb0\xca\x54\xe0\xf1\x42\xd8\x76\x02\x9d\x9a\xe0\xa6\x9b\xec\x1f\x9d\x64\xc4\x93\x8c\x78\xb2\x9e\xdd\x3b\xe9\x1d\x7a\xaa\x7b\x9d\x73\xe6\xd1\xad\x53\x39\x54\xca\xc8\xf1\xfa\xe9\x45\xfc\x2b\x5f\x4f\x5f\x4f\x0b\xaf\x61\x0c\x3d\x8f\x18\x89\x9a\x20\xaa\xcc\x41\x49\x0e\xeb\x8b\xd0\x7f\xb8\xe9\x50\x10\xca\x88\xa0\xd6\x36\xc9\xc1\x39\x6b\xad\x51\x64\x5d\xfc\xdd\x59\xad\x31\xfd\x4c\x7a\x72\xf4\x31\xd9\x15\xc8\x9b\x59\xdc\x08\x3d\xab\x61\x85\x93\x5d\xc3\xbc\x09\x3d\x12\xc6\xba\xad\xb9\xdf\x1a\xc1\x8d\x95\xfb\xf4\x27\x8c\xa4\x02\x05\xf3\xf8\xab\x0d\xdc\x19\x81\x5c\x83\xa7\x34\x70\x82\x59\x5b\x1c\x00\xad\x40\xac\x6a\x15\xe0\xa5\xa2\x03\x41\x6a\x1d\x64\x24\xb6\x47\x10\x3d\xd5\xf6\xed\x5e\x6f\x5c\x1e\x9a\x79\xd1\xa0\xec\x35\x72\xb2\xb9\xdf\xb3\xfe\xe4\xf4\xec\x9b\xa6\x6d\xcb\x85\xb6\x1e\x47\xbb\xd9\x34\x19\xee\x8b\xf2\x7c\x91\x25\x51\x34\x28\x56\xa9\xa3\x06\xb9\xce\x3b\x35\x28\x6d\xd7\xe8\x38\x9a\xd0\x40\x72\xd7\x20\xa9\x9b\x1d\x76\xce\x0a\xf4\x1e\x65\x98\x50\x49\xf2\x87\x3c\xa5\x9a\x11\xd6\x88\xde\xb9\x90\x7a\xdc\x90\x03\x41\x36\x56\xd0\x3c\x99\x10\xf8\x15\xd7\xca\x47\x41\xaf\xa1\xd7\x49\x0c\x86\xf4\x71\x89\x42\x85\x81\x3a\x46\x32\x6f\x0f\x2d\x70\x83\xa2\xa7\x43\x93\x57\xcd\xa1\x8d\x92\x61\x8c\xd2\xb6\xdc\x2d\x5d\x8c\x9c\x04\x82\xd0\x88\xa6\x85\x50\xdd\x2f\xce\x90\x68\x94\x1e\x0b\x7d\x2f\xbc\x87\x0e\xce\x9b\x17\xce\xe4\x98\xbc\x30\x84\x9c\xf5\x9e\x1f\x8d\xec\x93\xe9\x5c\x3c\x63\xc1\x8b\x95\xad\xeb\xbd\x27\xe7\x62\x3a\x6d\xfd\x9d\x66\x98\x4d\x1f\x6a\x86\xdd\x4e\x07\x0e\xb4\x46\xad\x7c\x1b\x86\xf5\x23\x49\xcf\xe1\x67\xe1\x16\x68\x28\xbc\x14\xa2\xe8\x1e\x6c\x1e\x8a\xf7\x65\x68\xbb\x7c\xd7\xf3\xd3\x76\x44\x54\x78\xe1\xa7\x69\xfa\x44\xca\x7e\xfe\x0f\x29\xbb\xbc\xcb\xd7\xe2\xe1\xd1\x75\x6a\x72\x3d\x9d\xc7\xe7\x67\x61\x54\xb0\xa4\x5f\x47\xc9\x6f\x10\x1c\x55\x08\x8f\x64\xf3\xdf\xf3\x33\xff\x81\x2d\x75\x87\x8f\xf9\xe2\x24\x1f\x75\xd0\xce\xa0\xb7\x25\xab\x41\xfb\x51\x5e\xf2\x7f\x48\x01\x71\x50\xe3\xa0\x30\x62\x2b\xf4\xee\x21\x76\x44\xe5\x3c\x71\xe9\xd3\x13\x9c\x0b\x87\x40\xf7\x71\x36\x18\xdc\x45\xf2\x62\x65\xb0\x7b\xbc\x0c\xaf\x95\x1f\x3e\x37\x9f\x4a\xf2\xfc\xfb\xc6\xe6\x63\x4f\x88\x97\x4d\xe9\xde\x23\x70\x78\xb7\xc6\x67\xdf\x3d\x80\xfe\x09\x00\x00\xff\xff\x70\x2d\x42\x2b\x36\x11\x00\x00")

func configChainstoragePolygonMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstoragePolygonMainnetBaseYml,
		"config/chainstorage/polygon/mainnet/base.yml",
	)
}

func configChainstoragePolygonMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstoragePolygonMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/polygon/mainnet/base.yml", size: 4406, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstoragePolygonMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8d\xb1\x6e\xc3\x30\x0c\x05\x77\x7d\x05\x91\xce\x36\x8c\x64\x28\xa2\x39\x1d\xba\x34\x8b\x77\x83\x96\x5e\x1c\xc1\x12\x65\x48\x8c\xd3\xfc\x7d\x61\xa3\x68\xc1\x89\xb8\xe3\xf1\x8d\xfa\x7b\xa8\x74\x0b\x11\x14\x2a\x4d\x10\x14\x56\x78\x1a\x5f\x74\x48\x3c\x83\x5c\x96\x5b\x98\x0e\x2d\x5d\xae\xf4\x75\xed\xe9\xe3\xf2\xd9\xb7\x86\x9f\xd5\x1a\x22\x7e\xd6\x81\x9d\xcb\x0f\x51\x4b\x1e\x2b\x62\x5e\x12\x44\x0d\xd1\xf8\x70\x33\xd4\x12\xbe\x39\x2d\x11\x8d\xbb\x73\x90\xaa\xb9\xf0\x84\x66\xc9\xf1\x35\x65\x69\x12\x07\x11\x68\xe3\xb1\x1a\xc7\x1e\xe2\xb0\x67\xbd\x2f\xa8\xd5\x92\x22\x2d\xb9\x70\xdc\x84\xf6\xb7\xd4\xba\x9c\xec\xfb\xf1\x74\x32\x7b\x72\xf3\xc7\x98\xdd\x3c\x28\x4f\xdb\x42\x54\x95\xc7\x08\x4b\x47\x43\x84\x15\xa2\xff\x28\xb2\xa2\xea\x86\x2a\xca\x8a\xb2\x5f\x07\xf1\xc3\xdf\xcb\xae\xdd\xc7\x9e\xbb\x73\x67\x7e\x02\x00\x00\xff\xff\x7d\xc2\x36\xaf\x1f\x01\x00\x00")

func configChainstoragePolygonMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstoragePolygonMainnetDevelopmentYml,
		"config/chainstorage/polygon/mainnet/development.yml",
	)
}

func configChainstoragePolygonMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstoragePolygonMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/polygon/mainnet/development.yml", size: 287, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstoragePolygonMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstoragePolygonMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstoragePolygonMainnetLocalYml,
		"config/chainstorage/polygon/mainnet/local.yml",
	)
}

func configChainstoragePolygonMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstoragePolygonMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/polygon/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstoragePolygonMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\x31\x6f\x83\x30\x10\x46\x77\xff\x8a\x53\x3a\x83\x50\x33\x54\xf1\x9c\x0e\x5d\x9a\x85\x1d\x1d\xf6\x07\xb1\xb0\x7d\x96\x6d\x4a\xf2\xef\x2b\x48\x55\xdd\xf2\x0d\xef\x3d\xdd\x1b\xf5\x77\x57\x68\x72\x1e\xe4\x0a\xcd\x88\xc8\x5c\x61\x69\x7c\xd2\x29\xf0\x02\x32\x12\x27\x37\x9f\x5a\xba\xde\xe8\xfb\xd6\xd3\xe7\xf5\xab\x6f\x15\x6f\x45\x2b\x22\xde\xca\xc0\xc6\xc8\x1a\xab\xa6\x94\xc5\xae\xa6\x3a\x89\x8a\x68\x5c\xcd\x82\xaa\x09\x0f\x0e\xc9\xa3\x31\x77\x76\xb1\x54\xc9\x3c\xa3\x49\xe2\x9f\xb3\xc4\x26\xb0\x8b\x11\xb5\xd9\x4d\x65\xd8\x22\x1a\x1c\x59\x6b\x33\x4a\xd1\x54\x11\x92\x64\xf6\xed\x5f\xa6\x35\x12\xf4\xc7\xfb\xf9\xac\x0a\xf2\x0f\xf2\x0e\x8f\x2e\xda\xe1\xdf\xe8\xda\xe3\xf4\xa5\xbb\x74\xaa\x78\xde\x09\x3c\x12\x4c\x85\x1d\x36\xc9\xcb\xe4\xe5\xf5\x7b\x43\x41\xa2\xab\x92\x8f\x9d\xc4\x7b\xbc\x66\xa9\x19\x1c\x90\xd5\x6f\x00\x00\x00\xff\xff\x07\x1f\xc3\xfd\x1d\x01\x00\x00")

func configChainstoragePolygonMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstoragePolygonMainnetProductionYml,
		"config/chainstorage/polygon/mainnet/production.yml",
	)
}

func configChainstoragePolygonMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstoragePolygonMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/polygon/mainnet/production.yml", size: 285, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageSolanaMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5b\x6f\xdb\x36\x14\x7e\xd7\xaf\x20\xb2\xe7\xc4\xb2\x13\x77\xab\xde\xb2\xb6\xd8\x82\x76\xc9\xb0\x05\x18\xb0\x17\xe2\x98\x3c\xb2\x08\xf3\xa2\x92\x47\xae\xbd\x5f\x3f\xf0\xe2\xc8\x76\x93\x38\x43\xb7\x05\x7e\x91\xa8\xc3\x73\xfb\x3e\x9e\x8f\xfe\x8e\xdd\x77\x2a\xb0\x56\x69\x64\x2a\xb0\x25\x5a\xf4\x40\x28\xd9\x62\xcb\xce\x0c\xac\x90\x09\x67\x5b\xb5\x3c\xbb\x60\xef\xef\xd8\xed\xdd\x3d\xfb\xf0\xfe\xe6\xfe\xa2\x82\x5e\x35\x15\x63\x06\x36\xdc\x0e\x86\x2f\xb4\x13\x2b\x1e\xbd\x84\x86\x4d\xeb\xba\x3e\xfe\x16\x1a\x36\x8f\x8b\x71\xe1\x8b\xf3\x2b\xf4\xc9\xb0\x62\x2c\x90\x47\x30\xca\x2e\xf9\x02\x48\x74\x3c\xa8\xbf\xb0\x18\x8f\x9f\x94\x25\xf4\x6b\xd0\x0d\x9b\xcd\x6b\x13\x0e\xbe\xa5\x38\x8e\xe3\x1a\x2d\x71\x52\x06\xa3\x63\x53\xc1\x97\x10\x33\x84\x2f\x81\x83\x10\x6e\xb0\xd4\x30\x89\x6b\xd4\xae\x37\x68\xa9\x62\x6c\x31\x88\x15\x52\xc3\xce\xce\x2a\xc6\xa4\xfe\x1c\xcd\x19\x93\xa8\x61\xcb\x03\x8a\xd0\xb0\xb7\xa9\x10\xc6\x2c\x44\xaf\xb8\x01\xd3\x6b\xe4\xa2\x03\x65\x03\x39\x0f\x4b\x2c\xd5\xf1\xe0\x34\x58\xe0\x06\x94\xb5\x48\x5c\xea\xcf\x69\xe3\x5a\x05\xb5\x50\x5a\xd1\x36\x65\xe6\x06\x2a\x9e\xdf\x24\xcf\x72\x6b\xc1\x38\xb9\xc8\x91\x73\x13\x09\x16\xfa\x1f\x05\x4b\x7b\x4b\xf5\xa7\xf6\xe6\x2e\x9d\xf2\xc0\x3b\x54\xcb\x8e\xb8\xb2\x12\x37\x2f\x71\xb7\xd8\xee\xb6\x3c\xe2\x78\x8d\x3e\x28\x67\x51\xf2\xd3\x49\x8e\xb6\xa7\xd2\x7d\xd4\x6b\xd9\xf5\x5c\xde\x4f\x44\x58\x6c\x77\x7b\xe5\xd7\xd1\xd0\xca\xde\x29\xbb\xa3\x4a\xef\x31\xa8\x65\x74\x31\x78\xcd\x71\xd3\x2b\x0f\xa4\x9c\x6d\xd8\x65\x6d\x2a\xc6\x3c\x2e\xd3\xdb\x10\xce\x11\x02\x9d\x4f\x13\x5d\x53\xf8\x42\x31\x20\xe0\xc2\x99\xe8\x28\x24\xd3\x9f\xfe\xbc\xf9\xb5\x12\x20\xd1\x8a\x64\x03\x52\xc6\x6f\x3b\x6e\xba\x98\x4b\xc3\xf6\x0b\x39\xcf\x59\x9e\x8f\x59\x7a\x24\xb4\x31\x0f\xde\xa3\x57\x4e\x36\xec\xfb\x2a\xed\x88\x0e\x73\x71\x81\xc0\x53\x81\xaa\x61\x75\x35\x72\x6e\x99\x33\xd3\x40\x18\xa8\x61\xd3\xf4\x16\x0a\x54\xd3\xd1\x30\x1d\xaf\xab\x3a\x9f\xc1\xb4\x96\x43\xb0\x1f\x3f\xdd\xbd\xfb\xf8\xee\xe7\xeb\x9b\x5b\xfe\xfb\xdd\xa7\xeb\xdb\xeb\x8a\x31\xa1\x15\x5a\xca\x9e\x0d\x04\x42\x9f\x9f\xc7\x8e\xf2\xa5\x77\x43\x5f\xca\x64\x2c\x68\x58\xe3\x09\x9b\x35\x68\x25\x81\xdc\xf3\xbe\x76\xa4\x38\xaa\xab\x3e\xa8\x2b\xbe\xb5\x08\x34\xf8\x12\xd4\xbb\x80\x44\xc0\x7b\xf0\x01\x7d\xc3\x5a\xd0\x01\x2b\xc6\x94\xf7\x98\x88\x13\x39\x26\x55\x20\x88\x38\xc5\x41\x17\x47\x1a\x52\x9c\x68\x0d\xbb\xfd\x70\xff\xc7\xdd\x6f\x1f\x4b\xfd\xfc\x97\xeb\x9b\xdb\xdb\x0f\xf7\x55\x1e\xa0\x3c\xcf\x90\x23\x6e\x09\xef\xf6\xe0\xf1\x60\x97\x58\x06\xe0\x55\xc4\x5d\x85\xc4\x6a\xa9\x3f\xf3\xde\x3b\x81\x21\x38\xdf\x30\xf2\x03\x56\xed\x60\x45\x04\x1b\x34\xcf\xa5\x9d\x9d\x55\x41\xae\x12\x79\x06\xea\x78\x87\x20\x63\x09\xa9\x1b\x69\x85\xdc\x0a\x6d\x59\x38\x38\x12\x0f\x64\xeb\x88\xfa\xd0\x4c\x26\xb6\xa5\x73\xe8\xd5\x85\x70\xca\x2e\x20\xe0\x85\x70\x66\x02\xbd\x9a\xe0\xa6\x9f\xec\x6f\x9d\xe4\x72\x26\xa5\x9c\xc9\x7a\xfa\xe8\x88\xf7\x18\xa8\x1d\x74\xc9\x3c\xa0\x5f\x67\x26\x2c\x94\x95\x63\xf4\xfa\x22\xfd\x9a\xb7\xf5\xdb\xba\x0a\x1a\xc6\xbe\x94\xd9\x22\x51\x13\x34\x6c\x3a\xaf\x0f\xf8\xf8\xb0\x6e\x2e\xeb\xc8\x4a\xdc\xf4\x28\x08\x65\x4a\xa2\xd5\x2e\xeb\xc0\x39\x33\xce\x2a\x72\x3e\x3d\xf7\x4e\x6b\xcc\x8f\x59\x48\xd2\x4b\x1c\xcf\xae\xe5\x61\x6b\x05\xb7\x4e\x1e\x40\x9d\x82\x92\x8a\x2d\x9d\xa5\x27\x13\x91\xb2\x02\xb9\x86\x40\x79\x78\x34\xec\xd2\x54\x07\x51\x17\x20\x56\xad\x8a\xb1\x32\xc1\x40\x90\x5a\x47\x35\xf0\x48\x7e\x1b\xa5\x4b\x99\xc1\x70\x20\x42\xd3\x53\x68\xd8\xe5\xa1\x59\x10\x1d\xca\x41\x23\x27\x57\x0e\x6f\x91\x91\x86\xcd\xcd\x91\x69\xfe\xec\xb8\xd0\x2e\xe0\x68\x37\xad\xb3\xe1\xbe\xba\xce\xe6\x45\xd8\x44\x87\x62\x95\x4f\xcf\x4e\x77\xcb\x97\xa8\xaa\x1e\x0b\xeb\x50\xc6\x99\x92\x05\x3a\x4e\xb9\x2c\x8a\x83\xe1\xc2\x59\x31\x78\x1f\xcf\x1a\x6e\xc8\x83\x20\x17\x51\x7f\x73\x95\x2c\x08\xc2\x8a\x6b\x15\x92\xf2\xb6\x30\xe8\x3c\xba\x77\x1d\xe2\x12\x85\x8a\xf3\x6f\x4c\x76\x66\x0e\x2d\x70\x83\x62\xa0\x43\x93\xab\xee\xd0\x46\xc9\x38\xf6\x68\xdb\x3c\x2c\x5d\x8c\x6d\x8f\x18\xa0\x15\x9d\x81\x48\xc8\x57\x07\x41\x74\x4a\x8f\xc4\xdc\x2b\xef\xa9\x8d\x6f\xca\xc6\xd7\x6b\xe5\xd8\xbd\x38\x37\xbc\x0b\x81\x1f\x8d\xe0\x93\xfd\x9c\xff\x87\xa4\x16\x2b\xd7\xb6\x7b\xf7\xc3\x69\xf8\x8a\xed\xd3\xa7\xc8\x3e\xdd\x91\xbd\x07\x0f\x5a\xa3\x56\xc1\xe4\xc9\xfb\x64\xc3\x4b\xe9\x45\x65\x05\x5a\x8a\xaa\x9e\xc7\xdc\xff\x01\xc7\x11\x00\xf1\x9a\x9d\xc7\xda\x0b\xa1\xf8\xe1\x75\xa1\x98\xcd\x9f\x1c\x3b\x5f\x03\x51\x9a\xfa\x6a\xd4\x1f\x05\x23\xcb\xc5\x51\x8b\x3b\x04\x4f\x0b\x84\x67\x7a\xf6\xed\x28\xcc\xbe\x19\x85\x79\xb9\xac\x3d\xc7\xff\x36\x4a\x58\x94\xbd\x22\xd1\x3b\x01\x28\xff\x37\x62\x5a\x51\x13\xa3\x06\x88\xad\x88\x57\xa7\xcb\xc7\x00\x9b\xe5\xa3\x13\xf2\xad\x96\x0b\x8f\x40\x8f\x01\xb3\x33\x40\x1b\xaf\x37\x72\x2f\xe8\xab\x61\xfd\x70\x21\xd8\x5d\x07\xfe\xf5\xd1\xf6\x52\x24\x67\xa7\x81\x3c\xfc\xa3\xfc\xb4\x92\xbf\x6e\x4b\xf7\x2e\x56\xbb\xeb\x60\xba\x70\x3d\x92\xd0\xdf\x01\x00\x00\xff\xff\x7f\x43\x77\x19\x86\x10\x00\x00")

func configChainstorageSolanaMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageSolanaMainnetBaseYml,
		"config/chainstorage/solana/mainnet/base.yml",
	)
}

func configChainstorageSolanaMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageSolanaMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/solana/mainnet/base.yml", size: 4230, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageSolanaMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xd0\xbf\x8e\xdc\x20\x10\x06\xf0\x9e\xa7\x18\x5d\x6a\x5b\xbe\xbb\x44\xb9\xa5\xde\x14\x69\xb2\xcd\xf6\x68\x0c\x63\x1b\x19\x86\x15\x33\xde\x3f\x6f\x1f\xd9\xce\x66\xa1\x41\xfa\x3e\x7e\x82\xf9\x06\xe7\x29\x0a\x0c\x31\x11\x44\x81\x91\x98\x2a\x2a\x05\xe8\x1f\xf0\x96\x71\x26\xf0\x85\x87\x38\xbe\xb5\x70\x3c\xc1\x9f\xd3\x19\x7e\x1d\x7f\x9f\x5b\x83\x37\xb1\x06\x00\x6f\xe2\xd0\xfb\xb2\xb0\x5a\x08\x74\xa5\x54\x2e\x99\x58\x0d\x40\xbf\xf8\x99\xd4\x02\xdd\x31\x5f\x12\x35\x7e\xc2\xc8\xa2\xa5\xe2\x48\x8d\x94\x84\x8c\x4d\xc6\xc8\x4c\xda\x04\xba\x1a\x8f\x81\xd8\xd3\xa6\x86\x50\x49\xc4\x82\x52\xbe\x94\x8a\x69\x2d\xb4\xff\xa0\xd6\x97\x6c\x7f\x7e\x7c\x7e\x9a\x4d\x5c\xfb\x7d\x2a\x7e\x76\xa2\x58\xd5\x4d\x14\xc7\x49\x2d\x7c\x75\xfb\x32\x42\xf5\x4a\x75\xab\x45\x0e\xee\xbf\xdd\xb5\xdb\xb6\x87\xee\xd0\x19\x49\xf8\x82\x76\xc2\x05\x4a\x8a\x16\xde\x57\xe4\x19\x69\xcc\xf4\x0a\xb2\x01\x28\x8b\xba\x32\x38\x79\xb0\x77\x5c\x02\xb9\x10\x45\x71\xfd\xc8\xf3\xa6\x46\xaa\x16\x3e\xb6\x53\x26\x27\x91\x3d\xb9\x84\xa2\x6e\x33\x2d\xbc\xff\xc8\xe6\x56\xea\x3c\xa4\xb2\x4f\xb5\x47\x3f\x0f\x31\xa5\xfd\xd9\x00\xbc\x64\xe7\x0b\xfb\xa5\x56\x62\x75\x74\xd7\x8a\x5e\x4b\x15\x0b\xdf\xbf\xcc\xdf\x00\x00\x00\xff\xff\x76\xe7\x46\xe6\xc3\x01\x00\x00")

func configChainstorageSolanaMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageSolanaMainnetDevelopmentYml,
		"config/chainstorage/solana/mainnet/development.yml",
	)
}

func configChainstorageSolanaMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageSolanaMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/solana/mainnet/development.yml", size: 451, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageSolanaMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageSolanaMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageSolanaMainnetLocalYml,
		"config/chainstorage/solana/mainnet/local.yml",
	)
}

func configChainstorageSolanaMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageSolanaMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/solana/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageSolanaMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x4f\xc3\x30\x10\xc5\xf1\xdd\x9f\xe2\xa9\xcc\xb1\x22\x3a\xa0\x7a\x2e\x03\x0b\x5d\xb2\x57\x97\xf3\x35\xb5\x6a\x9f\x23\x9f\x43\xe1\xdb\xa3\x56\x08\xbd\xf5\xfd\x7f\x2f\x98\xae\xc9\x70\x49\x59\x90\x0c\x8b\xa8\x34\xea\x12\x31\xff\x60\x57\xe8\x26\xe0\xaa\x97\xb4\xec\x3c\x8e\x27\x7c\x9e\x26\xbc\x1f\x3f\x26\xef\xe8\x6e\xc1\x01\x74\xb7\x33\x31\xd7\x4d\x7b\xc0\xda\x6a\xdc\xb8\xa7\xaa\x0e\x98\x37\xbe\x49\x0f\x90\x6f\x2a\x6b\x96\x81\xaf\x94\xd4\x7a\x6d\xb4\xc8\x60\x35\x93\xd2\x50\x28\xa9\x4a\x1f\x1e\xa1\x63\x8a\xa2\x2c\x4f\x35\xc6\x26\x66\x01\x5d\xca\x5a\x1b\x65\xff\xa7\x78\xae\x25\xbc\xbd\xee\xf7\xce\xa4\x7d\x49\x7b\x9c\xe7\xa4\xf1\xfc\x5f\x8c\xfe\xb9\x70\x18\x0f\xa3\xfb\x0d\x00\x00\xff\xff\x65\xd1\xb9\x68\xdd\x00\x00\x00")

func configChainstorageSolanaMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageSolanaMainnetProductionYml,
		"config/chainstorage/solana/mainnet/production.yml",
	)
}

func configChainstorageSolanaMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageSolanaMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/solana/mainnet/production.yml", size: 221, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"config/chainstorage/arbitrum/mainnet/base.yml":         configChainstorageArbitrumMainnetBaseYml,
	"config/chainstorage/arbitrum/mainnet/development.yml":  configChainstorageArbitrumMainnetDevelopmentYml,
	"config/chainstorage/arbitrum/mainnet/local.yml":        configChainstorageArbitrumMainnetLocalYml,
	"config/chainstorage/arbitrum/mainnet/production.yml":   configChainstorageArbitrumMainnetProductionYml,
	"config/chainstorage/avacchain/mainnet/base.yml":        configChainstorageAvacchainMainnetBaseYml,
	"config/chainstorage/avacchain/mainnet/development.yml": configChainstorageAvacchainMainnetDevelopmentYml,
	"config/chainstorage/avacchain/mainnet/production.yml":  configChainstorageAvacchainMainnetProductionYml,
	"config/chainstorage/bitcoin/mainnet/base.yml":          configChainstorageBitcoinMainnetBaseYml,
	"config/chainstorage/bitcoin/mainnet/development.yml":   configChainstorageBitcoinMainnetDevelopmentYml,
	"config/chainstorage/bitcoin/mainnet/local.yml":         configChainstorageBitcoinMainnetLocalYml,
	"config/chainstorage/bitcoin/mainnet/production.yml":    configChainstorageBitcoinMainnetProductionYml,
	"config/chainstorage/bsc/mainnet/base.yml":              configChainstorageBscMainnetBaseYml,
	"config/chainstorage/bsc/mainnet/development.yml":       configChainstorageBscMainnetDevelopmentYml,
	"config/chainstorage/bsc/mainnet/local.yml":             configChainstorageBscMainnetLocalYml,
	"config/chainstorage/bsc/mainnet/production.yml":        configChainstorageBscMainnetProductionYml,
	"config/chainstorage/dogecoin/mainnet/base.yml":         configChainstorageDogecoinMainnetBaseYml,
	"config/chainstorage/dogecoin/mainnet/development.yml":  configChainstorageDogecoinMainnetDevelopmentYml,
	"config/chainstorage/dogecoin/mainnet/local.yml":        configChainstorageDogecoinMainnetLocalYml,
	"config/chainstorage/dogecoin/mainnet/production.yml":   configChainstorageDogecoinMainnetProductionYml,
	"config/chainstorage/ethereum/goerli/base.yml":          configChainstorageEthereumGoerliBaseYml,
	"config/chainstorage/ethereum/goerli/development.yml":   configChainstorageEthereumGoerliDevelopmentYml,
	"config/chainstorage/ethereum/goerli/local.yml":         configChainstorageEthereumGoerliLocalYml,
	"config/chainstorage/ethereum/goerli/production.yml":    configChainstorageEthereumGoerliProductionYml,
	"config/chainstorage/ethereum/mainnet/base.yml":         configChainstorageEthereumMainnetBaseYml,
	"config/chainstorage/ethereum/mainnet/development.yml":  configChainstorageEthereumMainnetDevelopmentYml,
	"config/chainstorage/ethereum/mainnet/local.yml":        configChainstorageEthereumMainnetLocalYml,
	"config/chainstorage/ethereum/mainnet/production.yml":   configChainstorageEthereumMainnetProductionYml,
	"config/chainstorage/optimism/mainnet/base.yml":         configChainstorageOptimismMainnetBaseYml,
	"config/chainstorage/optimism/mainnet/development.yml":  configChainstorageOptimismMainnetDevelopmentYml,
	"config/chainstorage/optimism/mainnet/local.yml":        configChainstorageOptimismMainnetLocalYml,
	"config/chainstorage/optimism/mainnet/production.yml":   configChainstorageOptimismMainnetProductionYml,
	"config/chainstorage/polygon/mainnet/base.yml":          configChainstoragePolygonMainnetBaseYml,
	"config/chainstorage/polygon/mainnet/development.yml":   configChainstoragePolygonMainnetDevelopmentYml,
	"config/chainstorage/polygon/mainnet/local.yml":         configChainstoragePolygonMainnetLocalYml,
	"config/chainstorage/polygon/mainnet/production.yml":    configChainstoragePolygonMainnetProductionYml,
	"config/chainstorage/solana/mainnet/base.yml":           configChainstorageSolanaMainnetBaseYml,
	"config/chainstorage/solana/mainnet/development.yml":    configChainstorageSolanaMainnetDevelopmentYml,
	"config/chainstorage/solana/mainnet/local.yml":          configChainstorageSolanaMainnetLocalYml,
	"config/chainstorage/solana/mainnet/production.yml":     configChainstorageSolanaMainnetProductionYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"config": &bintree{nil, map[string]*bintree{
		"chainstorage": &bintree{nil, map[string]*bintree{
			"arbitrum": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageArbitrumMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageArbitrumMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageArbitrumMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageArbitrumMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"avacchain": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageAvacchainMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageAvacchainMainnetDevelopmentYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageAvacchainMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"bitcoin": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageBitcoinMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageBitcoinMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageBitcoinMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageBitcoinMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"bsc": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageBscMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageBscMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageBscMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageBscMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"dogecoin": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageDogecoinMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageDogecoinMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageDogecoinMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageDogecoinMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"ethereum": &bintree{nil, map[string]*bintree{
				"goerli": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageEthereumGoerliBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageEthereumGoerliDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageEthereumGoerliLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageEthereumGoerliProductionYml, map[string]*bintree{}},
				}},
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageEthereumMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageEthereumMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageEthereumMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageEthereumMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"optimism": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageOptimismMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageOptimismMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageOptimismMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageOptimismMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"polygon": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstoragePolygonMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstoragePolygonMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstoragePolygonMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstoragePolygonMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"solana": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageSolanaMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageSolanaMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageSolanaMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageSolanaMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
