// Code generated for package config by go-bindata DO NOT EDIT. (@generated)
// sources:
// config/chainstorage/arbitrum/mainnet/base.yml
// config/chainstorage/arbitrum/mainnet/development.yml
// config/chainstorage/arbitrum/mainnet/local.yml
// config/chainstorage/arbitrum/mainnet/production.yml
// config/chainstorage/avacchain/mainnet/base.yml
// config/chainstorage/avacchain/mainnet/development.yml
// config/chainstorage/avacchain/mainnet/production.yml
// config/chainstorage/bitcoin/mainnet/base.yml
// config/chainstorage/bitcoin/mainnet/development.yml
// config/chainstorage/bitcoin/mainnet/local.yml
// config/chainstorage/bitcoin/mainnet/production.yml
// config/chainstorage/bsc/mainnet/base.yml
// config/chainstorage/bsc/mainnet/development.yml
// config/chainstorage/bsc/mainnet/local.yml
// config/chainstorage/bsc/mainnet/production.yml
// config/chainstorage/dogecoin/mainnet/base.yml
// config/chainstorage/dogecoin/mainnet/development.yml
// config/chainstorage/dogecoin/mainnet/local.yml
// config/chainstorage/dogecoin/mainnet/production.yml
// config/chainstorage/ethereum/goerli/base.yml
// config/chainstorage/ethereum/goerli/development.yml
// config/chainstorage/ethereum/goerli/local.yml
// config/chainstorage/ethereum/goerli/production.yml
// config/chainstorage/ethereum/mainnet/base.yml
// config/chainstorage/ethereum/mainnet/development.yml
// config/chainstorage/ethereum/mainnet/local.yml
// config/chainstorage/ethereum/mainnet/production.yml
// config/chainstorage/optimism/mainnet/base.yml
// config/chainstorage/optimism/mainnet/development.yml
// config/chainstorage/optimism/mainnet/local.yml
// config/chainstorage/optimism/mainnet/production.yml
// config/chainstorage/polygon/mainnet/base.yml
// config/chainstorage/polygon/mainnet/development.yml
// config/chainstorage/polygon/mainnet/local.yml
// config/chainstorage/polygon/mainnet/production.yml
// config/chainstorage/solana/mainnet/base.yml
// config/chainstorage/solana/mainnet/development.yml
// config/chainstorage/solana/mainnet/local.yml
// config/chainstorage/solana/mainnet/production.yml
package config

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _configChainstorageArbitrumMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5b\x6f\xdc\xb6\x12\x7e\xd7\xaf\x18\xf8\x3c\xdb\xab\xb5\xe3\x9c\x13\x01\xe7\x21\x37\xb4\x46\x1a\xbb\x08\x5c\x14\xe8\x0b\x31\x22\x47\x2b\x62\x79\x51\xc8\xd1\x66\xb7\xbf\xbe\xa0\x28\x59\xbb\xae\xed\x4d\x90\xa6\x86\x5f\xb4\xe4\x70\x6e\xdf\xc7\x6f\xe8\xff\xc0\x6d\xab\x23\x34\xda\x10\xe8\x08\x2b\x72\x14\x90\x49\x41\xbd\x83\x13\x8b\x6b\x02\xe9\x5d\xa3\x57\x27\x67\xf0\xee\x06\xae\x6f\x6e\xe1\xfd\xbb\xab\xdb\xb3\x02\x3b\x5d\x15\x00\x16\xb7\xc2\xf5\x56\xd4\xc6\xcb\xb5\x48\x5e\x62\x05\xcb\xb2\x2c\xef\xef\xc5\x0a\x2e\xd3\x62\x5a\xf8\xe2\xc3\x9a\xc2\x60\x58\x00\x44\x0e\x84\x56\xbb\x95\xa8\x91\x65\x2b\xa2\xfe\x93\x46\xe3\x79\x4b\x3b\xa6\xb0\x41\x53\xc1\x32\x1e\x6c\x0c\x41\xbc\xa0\x0d\x39\x16\xac\x2d\x25\xaf\xb6\xc0\x2f\x31\xa5\x87\x5f\xa2\x40\x29\x7d\xef\xb8\x02\x45\x1b\x32\xbe\xb3\xe4\xb8\x00\xa8\x7b\xb9\x26\xae\xe0\xe4\xa4\x00\x50\xe6\x73\x32\x07\x50\x64\x70\x27\x22\xc9\x58\xc1\xab\xa1\x0a\x00\x87\xc9\x2b\x6d\xd1\x76\x86\x84\x6c\x51\xbb\xc8\x3e\xe0\x8a\xc6\xd2\x04\x86\x5a\x73\xe8\xad\xb0\xa8\x9d\x23\x16\xca\x7c\x1e\x8e\x6e\x74\xd4\xb5\x36\x9a\x77\x43\x6e\xbe\xe7\xd1\xf7\xcb\xc1\xb7\xda\x39\xb4\x5e\xd5\x39\x76\xee\x21\x63\x6d\xbe\x31\xdc\x70\x7a\xec\xc0\xb1\xd3\xb9\x53\xc7\x7d\x88\x96\xf4\xaa\x65\xa1\x9d\xa2\xed\xd7\x38\xac\x77\xd3\x91\x07\x5d\x6f\x28\x44\xed\x1d\x29\x71\x3c\xd1\xd9\xf6\x78\xca\x0f\xfa\x1d\xcf\x3d\x95\xfb\x23\x31\xea\xdd\x74\x56\x3d\x14\xaf\x0b\x14\xf5\x2a\x9d\xea\x83\x11\xb4\xed\x74\x40\xd6\xde\x55\x70\x51\xda\x02\x20\xd0\x6a\xf8\xd5\xc7\x53\xc2\xc8\xa7\xcb\x81\xab\x43\xc4\x91\x5f\xc8\x28\xa4\xb7\xc9\x51\x1c\x4c\x7f\xfa\xe3\xea\xd7\x42\xa2\x22\x27\x07\x1b\x54\x2a\xed\x4d\xc4\xf4\x29\x78\x05\xfb\xb9\x9f\x4e\x89\x9d\xce\x89\x05\x62\x72\x29\x13\xd1\x51\xd0\x5e\x55\xf0\xdf\x62\x38\x93\x5c\xe6\x8a\x22\x63\xe0\x11\xa3\x0a\xca\x62\x26\xdc\x2a\xe7\x66\x90\x29\x72\x05\xcb\xe1\x57\x1c\x11\x5a\xce\x86\xc3\xed\xba\x2c\x4b\x1b\xa7\xb5\x1c\x02\xde\xfc\x72\xf3\xf6\xc3\xdb\x9f\x5f\x5f\x5d\x8b\xd7\x9f\xde\x5c\xdd\x7e\xfa\xed\x63\x01\x20\x8d\x26\xc7\xd9\xb7\xc5\xc8\x14\xf2\x37\x00\x39\xd5\x79\xed\x58\xac\x82\xef\xbb\xb1\x54\x80\x68\x70\x43\x47\x6c\x36\x68\xb4\x42\xf6\x4f\xfb\x9a\xb8\x70\xb4\xb2\x86\x90\xfb\x30\x06\x0d\x3e\x12\x33\x8a\x0e\x43\xa4\x50\x41\x83\x26\x52\x01\xa0\x43\xa0\x81\x2f\x89\x5a\x4a\x47\xc6\x84\x55\x92\xb9\x24\x68\xc4\x49\xcf\x2a\xb8\x7e\x7f\xfb\xfb\xcd\xa7\x0f\x77\x1d\x10\x1f\x5f\x5f\x5d\x5f\xbf\xbf\x2d\xb2\x80\x8a\x2c\x23\x7f\x23\x95\x0c\x7e\x0f\xa4\x80\x6e\x45\xa3\x04\xbe\x28\x9a\xde\xc9\x04\x2a\x1a\x91\x0b\x38\x39\x29\xa2\x5a\x0f\x34\xe9\xb9\x15\x2d\xa1\x4a\x89\x0e\x35\x0f\x2b\xec\xd7\xe4\xc6\x85\x03\xbe\xdf\xd1\xaa\x65\xee\x62\xb5\x58\xb8\x86\x4f\xb1\xd3\x67\xd2\x6b\x57\x63\xa4\x33\xe9\xed\x02\x3b\xbd\xa0\x6d\xb7\xd8\x3f\xba\x98\x52\x5e\x8c\x29\x2f\x36\xcb\x07\x85\x3c\x50\xe4\xa6\x37\x15\x70\xe8\xa9\x88\x14\x36\x19\xf1\x5a\x3b\x35\xc7\x2f\xcf\x86\xbf\xea\x55\xf9\xaa\x2c\xa2\xc1\xb9\xf6\x51\x3e\x14\x19\xc6\x0a\xce\xcb\xf2\x80\x79\xd3\xfa\xd2\x5e\x94\x89\x7f\xb4\xed\x48\x32\xa9\x21\x89\xc6\xf8\x2c\xf8\xa7\x60\xbd\xd3\xec\xc3\xf0\xdd\x79\x63\x28\x7f\xe6\x89\x41\x61\x71\x47\x8d\xff\xa7\x2a\x92\x22\xfb\x46\xc4\x9d\x93\xc2\x79\xb5\x0f\x6f\x4e\x80\x75\x6a\xf0\xf9\xf0\x65\x13\x32\x4e\x92\x30\x18\x39\xeb\x44\x05\xe7\xb6\x38\xc8\xa0\x46\xb9\x6e\x74\x8a\x9b\x49\x85\x92\xf5\x26\x0d\x80\x40\x1c\x76\x69\x5e\x69\xdb\x5b\x81\xcc\x64\x3b\x8e\x15\x5c\x1c\x9a\x45\xd9\x92\xea\x0d\x09\xf6\xe3\x95\x1d\x27\x47\x05\x97\xf6\x9e\x69\xde\xf6\x42\x1a\x1f\x69\xb6\x5b\x96\xd9\x70\x7f\x9e\x9e\x5f\x8e\xd3\x4c\xb6\x24\xd7\xf9\xc6\x4c\x93\x76\xdc\x49\xa3\x34\x50\x17\xbc\xa4\x18\x49\x25\x25\xc9\x23\x39\xa9\x5b\x9e\x84\xbd\x15\xd2\x3b\xd9\x87\x90\x9a\x48\x5b\x0e\x28\xd9\x27\x06\x5c\x8c\x4e\x18\xe3\x5a\x18\x1d\x87\x79\xdb\x60\x6f\xb2\x4c\x4f\x2d\x12\x8a\xa4\x4e\xc2\x37\x67\x7b\x6e\x0f\x2d\x68\x4b\xb2\xe7\x43\x93\x17\xed\xa1\x8d\x56\x49\xed\x78\x57\xdd\x2d\x9d\xcd\x7d\x4f\x20\x90\x93\xad\xc5\xc4\xce\x67\x47\x41\xb6\xda\xcc\x2c\xdd\x2b\xef\xb1\x83\x2f\xc7\x83\xcf\xd7\xca\xb9\x7b\x49\x46\x82\x8f\x51\xdc\xd3\xdd\xa3\xfd\xbc\xfc\x81\xac\x96\x6b\xdf\x34\xf7\x9f\x84\x87\x74\x5f\x3e\xc6\xf6\xe5\xc4\xf6\x0e\x03\x1a\x43\x46\x47\x9b\xa4\xf6\x89\x86\x8f\xa5\x8f\xc3\x55\x92\xe3\x34\xce\xb3\xe6\xfd\x1b\x70\xdc\x03\x20\xbd\xac\xb3\xc6\x7d\x25\x14\xff\x7b\x5e\x28\x2e\x1f\xd7\x9d\x6f\x04\xe2\xc7\xb7\x7a\x1e\x1e\x79\x74\xdc\xeb\x70\x4b\x18\xb8\x26\x7c\xa2\x65\xdf\x0f\xc2\xf9\x77\x83\x70\x11\x8f\x70\xbf\x49\xf3\x2b\xcd\xbc\xf9\x8d\x93\xe5\x7f\xfc\x07\x23\x25\x95\x26\x62\x9a\x00\x72\x27\xcd\xde\x85\x7a\x00\xad\x98\x9f\xb2\x42\x06\x42\x7e\x08\x95\xc9\x80\x5c\x7a\x78\xa9\xfd\xa0\xcf\x86\xf4\xdd\xd3\x60\x7a\x18\xfc\xe3\xba\xf6\xb5\x38\x9e\x1f\x81\xf1\xf0\x2e\x1d\xb9\x4c\xcf\xd6\xcf\xa9\x8d\x45\x36\x4b\xaf\xc2\xe1\xdd\xf5\x40\x42\x7f\x05\x00\x00\xff\xff\xb2\x31\xf4\x5b\x73\x10\x00\x00")

func configChainstorageArbitrumMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageArbitrumMainnetBaseYml,
		"config/chainstorage/arbitrum/mainnet/base.yml",
	)
}

func configChainstorageArbitrumMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageArbitrumMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/arbitrum/mainnet/base.yml", size: 4211, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageArbitrumMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xbb\x6e\xeb\x30\x10\x84\xe1\x9e\x4f\xb1\xf0\xa9\x45\xe8\xc4\x08\x02\xb3\x76\x8a\x34\x71\xa3\x5e\x58\x91\x63\x89\x10\x2f\x02\xb9\x92\x93\xb7\x0f\x4c\x04\x99\x69\x7f\x7c\xff\x68\x58\x7c\xa5\xbb\x0f\x20\x5f\x69\x46\x42\x61\x81\xa3\xe9\x9b\x4e\x91\x57\x90\xcd\xe9\xee\xe7\x93\xa6\xeb\x8d\x3e\x6f\x03\xbd\x5f\x3f\x06\xad\xf8\x51\x8d\x22\xe2\x47\x1d\xd9\xda\xbc\x27\x31\xe4\x70\x20\xe4\x2d\x22\x89\x22\x9a\x76\xbb\x42\x0c\xe1\x8b\xe3\x16\xd0\xd9\x85\x7d\xaa\x92\x0b\xcf\xe8\xb8\x4c\x5e\xca\x1e\xbb\xc8\x3e\x25\x48\xe7\x70\x28\xcb\x0e\xc9\xa2\xb9\xce\x15\xd4\x6a\x48\x10\xb7\x5c\x38\x3c\x03\xfd\x4b\x69\x9b\xa3\x79\x7b\x39\x9f\x55\x33\x9f\xfd\x14\xb2\x5d\xc7\x2a\x5c\x64\x5c\xe0\xe7\x45\x0c\xfd\x7f\xed\xdb\x54\x45\x39\x50\x5a\xe6\x93\x1b\xff\xec\x5e\xb7\x9b\x4b\x7f\xe9\xd5\x4f\x00\x00\x00\xff\xff\xb0\x89\x54\x72\x09\x01\x00\x00")

func configChainstorageArbitrumMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageArbitrumMainnetDevelopmentYml,
		"config/chainstorage/arbitrum/mainnet/development.yml",
	)
}

func configChainstorageArbitrumMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageArbitrumMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/arbitrum/mainnet/development.yml", size: 265, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageArbitrumMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageArbitrumMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageArbitrumMainnetLocalYml,
		"config/chainstorage/arbitrum/mainnet/local.yml",
	)
}

func configChainstorageArbitrumMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageArbitrumMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/arbitrum/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageArbitrumMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x6e\xc3\x30\x0c\x84\xe1\x5d\x4f\x71\x48\x67\x1b\x46\x33\x14\xd1\x9c\x0e\x5d\x9a\xc5\x7b\x40\x53\x8c\x43\xc4\xa2\x0c\x4a\x6e\xda\xb7\x2f\x12\x14\xc5\xad\xf7\x7f\x2f\x18\xaf\x5a\x71\xd1\x45\xa0\x15\xb3\x98\x38\x35\x49\x98\x7e\xb0\xcb\x74\x13\x70\xb1\x8b\xce\xbb\x1e\xc7\x13\x3e\x4f\x23\xde\x8f\x1f\x63\x1f\xe8\x5e\x63\x00\xe8\x5e\xcf\xc4\x5c\x36\x6b\x11\xab\x97\xb4\x71\xd3\x62\x01\x98\x36\xbe\x49\x8b\x90\x6f\xca\xeb\x22\x1d\x5f\x49\xad\xb6\xe2\x34\x4b\x47\x3e\x69\xf3\x2d\x77\x99\xd4\x4c\x5a\xf7\x48\x03\x53\x12\x63\x79\xba\x29\xb9\xd4\x1a\xd1\x24\xaf\xc5\x69\xe9\xff\x9c\x9e\x4b\x8e\x6f\xaf\xfb\x7d\xa8\xe2\x5f\xe2\x8f\xf3\xa4\x96\xce\xff\xc5\xd0\x3f\x17\x0f\xc3\x61\x08\xbf\x01\x00\x00\xff\xff\x86\xa4\x5c\x69\xdf\x00\x00\x00")

func configChainstorageArbitrumMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageArbitrumMainnetProductionYml,
		"config/chainstorage/arbitrum/mainnet/production.yml",
	)
}

func configChainstorageArbitrumMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageArbitrumMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/arbitrum/mainnet/production.yml", size: 223, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageAvacchainMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x51\x6f\xdb\x36\x10\x7e\xd7\xaf\x38\x64\xcf\x89\x65\xb7\xe9\x56\x01\x7b\xc8\xda\x62\x0b\xba\x25\xc3\x10\x6c\xc0\x5e\x88\x33\x79\xb2\x08\x53\xa4\x4a\x9e\x5c\x7b\xbf\x7e\x20\x29\x5b\x76\xe3\xc4\x29\xba\x2c\xc8\x8b\x4c\x1e\x8f\xc7\xfb\x3e\x7e\x1f\xf3\x1d\xdc\x35\x3a\x40\xad\x0d\x81\x0e\xb0\x20\x4b\x1e\x99\x14\xcc\x37\x70\xd6\xe2\x92\x40\x3a\x5b\xeb\xc5\xd9\x05\xbc\xbf\x85\x9b\xdb\x3b\xf8\xf0\xfe\xfa\xee\xa2\xc0\x4e\x57\x05\x40\x8b\x6b\x61\xfb\x56\xcc\x8d\x93\x4b\x11\xb3\x84\x0a\xa6\x65\x59\x7e\x39\x17\x2a\xb8\x8c\x83\x71\xe0\xb3\xf3\x4b\xf2\x29\xb0\x00\x08\xec\x09\x5b\x6d\x17\x62\x8e\x2c\x1b\x11\xf4\x3f\x34\x04\x8f\x53\xda\x32\xf9\x15\x9a\x0a\xa6\xe1\x60\x22\x6d\xe2\x04\xad\xc8\xb2\x60\xdd\x52\xcc\xda\x16\xf8\x39\xc4\xf2\xf0\x73\x10\x28\xa5\xeb\x2d\x57\xa0\x68\x45\xc6\x75\x2d\x59\x2e\x00\xe6\xbd\x5c\x12\x57\x70\x76\x56\x00\x28\xf3\x29\x86\x03\x28\x32\xb8\x11\x81\x64\xa8\xe0\x6d\x3a\x05\x80\xc5\x98\x95\xd6\xd8\x76\x86\x84\x6c\x50\xdb\xc0\xce\xe3\x82\x86\xa3\x09\x5c\xa1\x4c\xe3\xa2\x45\x6d\x2d\xb1\x50\xe6\x53\x5a\xbb\xd2\x41\xcf\xb5\xd1\xbc\x49\xc5\xb9\x9e\x87\xe4\x6f\x52\x72\xb5\xb1\xd8\x3a\x35\xcf\x9b\xe7\x26\x32\xce\xcd\xd7\xee\x97\x96\x0f\x3d\x38\xb5\x3c\xf7\xea\x09\x49\x44\x43\x7a\xd1\xb0\xd0\x56\xd1\xfa\x29\x19\xe7\x9b\xed\x92\xe3\xb9\x57\xe4\x83\x76\x96\x94\x38\x5d\xea\x18\xfb\x84\xa2\x8f\x26\x1e\x16\x3e\x56\xfd\x03\x9b\xcc\x37\xdb\xb5\xea\xe8\x86\x9d\xa7\xa0\x17\x71\x59\xef\x8d\xa0\x75\xa7\x3d\xb2\x76\xb6\x82\x57\x65\x5b\x00\x78\x5a\xa4\x5f\x7d\x38\x27\x0c\x7c\x3e\x4d\x8c\x4d\x5b\x0e\x2c\x43\x46\x21\x5d\x1b\x13\x85\x14\xfa\xf3\xdf\xd7\xbf\x17\x12\x15\x59\x99\x62\x50\xa9\x38\xb7\xa5\xa7\x8b\x9b\x57\xb0\x5f\xfc\xf9\xae\xb2\xf3\xb1\x32\x4f\x4c\x36\x96\x22\x3a\xf2\xda\xa9\x0a\xbe\x2f\x52\x4c\xcc\x99\xcf\x14\x18\x3d\x0f\x38\x55\x50\x16\x23\xed\x16\xb9\x38\x83\x4c\x81\x2b\x98\xa6\x5f\x61\x00\x69\x3a\x06\xa6\x4b\x36\x0b\xdb\x81\x9c\x1f\x7e\xfa\xf5\xf6\xdd\xc7\x77\xbf\x5c\x5d\xdf\x88\xab\x3f\xaf\xde\xa5\xaf\x02\x40\x1a\x4d\x96\x73\xe6\x16\x03\x93\xcf\xdf\x00\x64\x55\xe7\xb4\x65\xb1\xf0\xae\xef\x86\x93\x02\x04\x83\x2b\x3a\x11\xb3\x42\xa3\x15\xb2\x7b\x3c\xd7\x96\x0b\x27\xcf\x55\x13\x72\xef\x87\x4d\xbd\x0b\xc4\x8c\xa2\x43\x1f\xc8\x57\x50\xa3\x09\x54\x00\x68\xef\x29\xf1\x25\x52\x4b\xe9\xc0\x18\xa1\x8a\x5a\x17\x55\x8d\x38\x8a\x5a\x05\x37\x1f\xee\xfe\xba\xfd\xe3\xe3\xd8\x02\xf1\xdb\xd5\xf5\xcd\xcd\x87\xbb\x22\xcb\xa8\xc8\x62\x72\x9f\x55\xd2\xbb\x3d\x90\x3c\xda\x05\x0d\x4a\xf8\xba\xa8\x7b\x2b\x23\xa8\x68\x44\x3e\xc2\xd9\x59\x11\xd4\x32\xf1\xa4\xe7\x46\x34\x84\x2a\x96\x9a\x4e\x9d\x46\xd8\x2d\xc9\x0e\x03\x07\x8c\xdf\xf1\xaa\x61\xee\x42\x35\x99\xd8\x9a\xcf\xb1\xd3\x17\xd2\x69\x3b\xc7\x40\x17\xd2\xb5\x13\xec\xf4\x84\xd6\xdd\x64\x7f\xe9\x64\x57\xf3\x64\xa8\x79\xb2\x9a\x1e\x15\x74\x4f\x81\xeb\xde\x54\xc0\xbe\xa7\x22\x90\x5f\x65\xd0\xe7\xda\xaa\xb1\x80\xf2\x22\xfd\x55\x6f\xcb\xb7\x65\x11\x0c\x8e\x87\x1f\x34\x44\x91\x61\xac\x60\x56\x1e\x30\x6f\x3b\x7c\x19\x2f\x1a\xad\x3b\x92\x4c\x2a\x15\x50\x1b\x97\x45\xff\x1c\x5a\x67\x35\x3b\x9f\xbe\x3b\x67\x0c\xe5\xcf\xec\x1a\xe4\x27\x3b\x66\xfc\x38\x4d\x13\xf1\x3e\x1a\x5c\xd2\x64\x77\x15\x86\x09\xe9\x5d\x08\x62\x47\xb7\x02\x20\x2a\xb8\xab\x45\xd8\x58\x29\xac\x53\xfb\x54\x48\x96\xc5\x3a\x22\x31\x4b\x5f\x6d\x84\xd0\x4a\x12\x06\x03\x67\x49\xc9\xee\x74\x50\xee\x1c\xe5\xb2\xd6\xb1\xc8\x4c\x40\x94\xac\x57\xd1\x30\x3c\xb1\xdf\x44\x83\xd3\x6d\xdf\x0a\x64\xa6\xb6\xe3\x50\xc1\xab\xc3\xb0\x20\x1b\x52\xbd\x21\xc1\x6e\xb8\xdc\x83\xd3\x0c\x4d\xda\x0f\xcd\xd3\x4e\x48\xe3\x02\x8d\x71\xd3\x32\x07\xee\x1b\xf0\xec\x72\xb0\x3f\xd9\x90\x5c\xe6\xdb\xb5\xb5\xe6\x61\x26\x7a\xaf\xa7\xce\x3b\x49\x21\x90\x8a\x9a\x93\x3d\x3c\x0a\x61\xb6\xce\xbe\x15\xd2\x59\xd9\x7b\x1f\x3b\x4e\x6b\xf6\x28\xd9\x65\xaa\xe4\x10\xc6\xb0\x14\x46\x87\x64\xd0\x35\xf6\x26\x4b\xfa\xb6\x45\x42\x91\xd4\x51\x23\xc7\x6a\x67\xed\x61\x04\xad\x49\xf6\x7c\x18\xf2\xba\x39\x8c\xd1\x2a\xea\x22\x6f\xaa\xdd\xd0\xc5\xd8\xf7\x08\x02\x59\xd9\xb4\x18\x69\xfc\xe2\x28\xc8\x46\x9b\x91\xd2\x7b\xc7\x7b\x68\xe1\x9b\x61\xe1\xcb\xb5\x72\xec\x5e\x14\x9c\xc3\x4b\xf3\xc4\x7e\x5e\x3e\x23\xab\xe5\xd2\xd5\xf5\xde\x1b\xf2\xb2\x2c\xdb\x70\x8f\xf1\xd3\xf2\x21\xc6\xef\x66\x3a\xf4\x68\x0c\x19\x1d\xda\x28\xcc\x8f\x34\x7d\x38\xfe\x60\xc5\x92\x2c\x47\xf7\x1f\xcc\xe7\xf9\x11\xb9\x2f\x5c\x83\x26\x3e\x11\x8d\x1f\xfe\x47\x34\xa6\xe5\x7d\x2c\x2e\x1f\xd6\x9e\xaf\x04\xe2\xf9\x7b\x3d\xba\x4d\xf6\x9a\x2f\x5a\xdc\x10\x7a\x9e\x13\x3e\xd2\xb3\x6f\x47\x61\xf6\xcd\x28\xbc\x0a\x27\xb8\x5f\x47\x13\x8b\xbe\x37\xbe\x89\xb2\x05\x0c\xff\x94\xc4\xa2\xa2\x2b\x46\x17\x90\x1b\x69\x68\xd4\xf8\x23\x68\x85\xfc\xf2\x15\xd2\x13\xf2\x31\x54\xb6\x01\x64\xe3\x43\x4d\xed\x6f\xfa\x62\x48\xef\xde\x12\xdb\x97\xc4\x7f\xae\x6d\x4f\xc5\x71\x76\x02\xc6\xc3\xbb\x74\xe2\x32\xbd\x58\x3f\xb7\x6d\x2c\x72\x58\x7c\x42\xa6\x67\xd7\x91\x82\xfe\x0d\x00\x00\xff\xff\xd7\x39\xd7\x46\xa8\x10\x00\x00")

func configChainstorageAvacchainMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageAvacchainMainnetBaseYml,
		"config/chainstorage/avacchain/mainnet/base.yml",
	)
}

func configChainstorageAvacchainMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageAvacchainMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/avacchain/mainnet/base.yml", size: 4264, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageAvacchainMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xb1\x4e\xc4\x30\x0c\x86\xf7\x3c\x85\x75\xcc\xad\x0a\x27\x81\x2e\xf3\x31\xb0\x70\xcb\xed\x95\x9b\xb8\x6d\xd4\x24\xae\x62\x5f\x0b\x6f\x8f\x2e\x9c\xd8\xb0\x27\x5b\x9f\x3f\xeb\x7f\x82\xeb\x1c\x04\xc6\x10\x09\x82\xc0\x44\x99\x0a\x2a\x79\x18\xbe\xe1\x90\x70\x21\x70\x9c\xc7\x30\x1d\x5a\x38\x5f\xe0\xf3\x72\x85\xf7\xf3\xc7\xb5\x35\xb8\x8b\x35\x00\xb8\x4b\x8f\xce\xf1\x2d\xab\x05\x4f\x1b\x45\x5e\x13\x65\x35\x00\xc3\xcd\x2d\xa4\x16\xe8\x0b\xd3\x1a\xa9\x71\x33\x86\x2c\xca\x05\x27\x6a\x70\x43\x57\x17\x4d\xc2\x90\x33\x69\xe3\x69\x33\x0e\x3d\x65\x47\x55\xec\x7d\x21\x11\x0b\x4a\x69\xe5\x82\xf1\x0e\xb4\x0f\x57\xeb\x38\xd9\xb7\x97\xe3\xd1\x54\xc7\x9d\x1f\x22\xbb\xa5\x17\xc5\xa2\xfd\x4c\x61\x9a\xd5\xc2\xf3\x6b\x57\xcb\x08\x95\x8d\x4a\xc5\x42\xf6\xfd\x9f\xbb\x6b\x6b\xdb\x53\x77\xea\xcc\xce\x65\x19\x23\xff\xe6\x72\x85\x45\xfa\x0d\x63\xf0\xa8\x5c\x4f\x01\x1e\x63\xe0\xfc\xdf\xa3\x9f\x00\x00\x00\xff\xff\x23\xb5\x99\xb5\x4e\x01\x00\x00")

func configChainstorageAvacchainMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageAvacchainMainnetDevelopmentYml,
		"config/chainstorage/avacchain/mainnet/development.yml",
	)
}

func configChainstorageAvacchainMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageAvacchainMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/avacchain/mainnet/development.yml", size: 334, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageAvacchainMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8c\x31\x6f\xc2\x30\x10\x85\x77\xff\x8a\x27\x3a\xc7\x8a\xca\x50\xe1\x99\x0e\x5d\xca\x92\x1d\x5d\xce\x47\xb0\x88\xcf\x91\xcf\x81\xf6\xdf\x57\x44\x15\x7a\xdb\xd3\xf7\x7d\x6f\x18\xae\xc9\x70\x49\xb3\x20\x19\x26\x51\xa9\xd4\x24\x62\xfc\xc5\x2e\xd3\x4d\xc0\x45\x2f\x69\xda\x79\x1c\x4f\xf8\x3e\x0d\xf8\x3c\x7e\x0d\xde\xd1\xc3\x82\x03\xe8\x61\x67\x62\x2e\xab\xb6\x80\xa5\x96\xb8\x72\x4b\x45\x1d\x30\xae\x7c\x93\x16\x20\x3f\x94\x97\x59\x3a\xbe\x52\x52\x6b\xa5\xd2\x24\x1d\xdd\x89\xb7\xa3\xcb\x94\x54\xa5\x75\x4f\xd7\x31\x45\x51\x96\x2d\x1c\x63\x15\xb3\x80\x26\x79\x29\x95\x66\xff\x1f\xf2\x5c\x72\xf8\x78\xdf\xef\x9d\x49\xbd\x4b\x7d\xc2\x63\xd2\x78\x7e\x19\xbd\xdf\x16\x0e\xfd\xa1\x77\x7f\x01\x00\x00\xff\xff\xd2\xcf\x66\x71\xe0\x00\x00\x00")

func configChainstorageAvacchainMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageAvacchainMainnetProductionYml,
		"config/chainstorage/avacchain/mainnet/production.yml",
	)
}

func configChainstorageAvacchainMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageAvacchainMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/avacchain/mainnet/production.yml", size: 224, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBitcoinMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5b\x6f\x1b\x37\x13\x7d\xdf\x5f\x31\xf0\xf7\x6c\xeb\x92\x28\x5f\xb3\x6f\xb9\xa1\x35\xd2\xda\x45\x61\xa0\x40\x5f\x88\x11\x39\xab\x25\xc4\x25\x37\xe4\xac\x22\xf5\xd7\x17\xbc\x28\x2b\x29\x76\x64\xa3\x4d\x0c\xbd\xec\x2e\x87\x73\x3b\x87\x73\xa8\xff\xc1\x5d\xab\x03\x34\xda\x10\xe8\x00\x2b\xb2\xe4\x91\x49\xc1\x72\x07\x17\x1d\xae\x09\xa4\xb3\x8d\x5e\x5d\x5c\xc1\xfb\x5b\xb8\xb9\xbd\x83\x0f\xef\xaf\xef\xae\x2a\xec\x75\x5d\x01\x74\xb8\x15\x76\xe8\xc4\xd2\x38\xb9\x16\xd1\x4b\xa8\x61\x36\x9d\x4e\x4f\xd7\x42\x0d\x8b\x0a\x20\xbe\x7f\x76\x7e\x4d\x3e\xd9\x55\x00\x81\x3d\x61\xa7\xed\x4a\x2c\x91\x65\x2b\x82\xfe\x9b\x6a\x58\x1c\x2f\x69\xcb\xe4\x37\x68\x6a\x98\x85\xa3\x85\x14\xc3\x09\xda\x90\x65\xc1\xba\xa3\x1a\x5e\x4c\xbb\x0a\x3f\x87\x98\x1d\x7e\x0e\x02\xa5\x74\x83\xe5\x1a\x14\x6d\xc8\xb8\xbe\x23\xcb\x15\xc0\x72\x90\x6b\xe2\x1a\x2e\x2e\x2a\x00\x65\x3e\x45\x73\x00\x45\x06\x77\x22\x90\x0c\x35\xbc\x4e\x45\x00\x58\x8c\x5e\x69\x8b\x5d\x6f\x48\xc8\x16\xb5\x0d\xec\x3c\xae\xa8\x54\x26\x96\x9a\xa5\xd3\x56\x74\xa8\xad\x25\x16\xca\x7c\x4a\x3b\x37\x3a\xe8\xa5\x36\x9a\x77\x29\x35\x37\x70\x71\xfd\x2a\xb9\x56\x3b\x8b\x9d\x53\xcb\x1c\x3a\x77\x90\x71\x69\x9e\x16\x2d\x6d\x2e\xf5\x9f\xdb\x9c\xfb\x74\xd6\x85\x68\x49\xaf\x5a\x16\xda\x2a\xda\x3e\xca\xdf\x6e\xbf\xe5\x3e\xcf\x1b\xf2\x41\x3b\x4b\x4a\x9c\x4f\x73\xb4\x3d\x9b\xf0\xbd\x6e\xcb\xb6\x6f\x65\xfe\x50\x88\xdd\x7e\xaf\xba\x27\x5c\xef\x29\xe8\x55\xdc\x34\x78\x23\x68\xdb\x6b\x8f\xac\x9d\xcd\x74\x03\xf0\xb4\x4a\x6f\x43\xb8\x24\x0c\x7c\x39\x4b\x2c\x4d\x01\x0b\xb3\x90\x51\x48\xd7\x45\x47\x21\x99\xfe\xfc\xd7\xf5\xef\x95\x44\x45\x56\x26\x1b\x54\x2a\xae\xed\x29\xe9\x62\xf0\x1a\x0e\x53\xbf\x2c\x79\x5d\x8e\x79\x79\x62\xb2\x31\x11\xd1\x93\xd7\x4e\xd5\xf0\xff\x2a\x6d\x89\x1e\x73\x3d\x81\xd1\x73\xc1\xa7\x86\x69\x35\x52\x6d\x95\x53\x33\xc8\x14\xb8\x86\x79\x7a\x0b\x05\x9e\xf9\x68\x98\x8e\xd5\x2c\xd5\x99\xbe\xe4\x00\xf0\xf6\xd7\xdb\x77\x1f\xdf\xfd\xf2\xe6\xfa\x46\xbc\xbd\xbe\x7b\x77\x7b\x7d\x53\x01\x48\xa3\xc9\x72\x76\xdc\x61\x60\xf2\xf9\x19\x80\xac\xea\x9d\xb6\x2c\x56\xde\x0d\x7d\x29\x13\x20\x18\xdc\xd0\x19\x9b\x0d\x1a\xad\x90\xdd\xb7\x7d\xed\x69\x70\x52\xd6\xf4\xa8\xac\xf8\xd6\x10\xf2\xe0\x4b\x50\xef\x02\x31\xa3\xe8\xd1\x07\xf2\x35\x34\x68\x02\x55\x00\xda\x7b\x4a\x54\x89\xac\x52\x3a\x30\x46\x9c\xe0\x45\x1c\x62\xc4\x71\x86\xd5\x70\xf3\xe1\xee\xcf\xdb\x3f\x3e\xee\xcb\x17\xbf\xbd\xb9\xbe\xb9\xf9\x70\x57\xe5\x91\x29\xf2\xe4\x38\x25\x93\xf4\xee\x00\x1d\x8f\x76\x45\x65\xe8\xc5\x96\x2b\x1d\x12\x8f\x95\xf9\x24\x7a\xef\x24\x85\xe0\x7c\x0d\xec\x07\xaa\x9a\xc1\xca\x88\x35\x1a\x91\x4b\xbb\xb8\xa8\x82\x5a\x27\xf2\x0c\xdc\x8a\x96\x50\xc5\x12\x52\x37\xd2\x17\x76\x6b\xb2\xe5\xc3\xd1\x21\xf8\x42\xb6\x96\xb9\x0f\xf5\x64\x62\x1b\xbe\xc4\x5e\x5f\xc5\x54\x97\x18\xe8\x4a\xba\x6e\x82\xbd\x9e\xd0\xb6\x9f\x1c\x6e\x9d\x94\x7a\x26\xa5\x9e\xc9\x66\x76\xef\x5c\xf7\x14\xb8\x19\x4c\x49\x3d\x90\xdf\x64\x2a\x2c\xb5\x55\x63\xf8\xe9\x55\xfa\xd5\xaf\xa7\xaf\xa7\x55\x30\x38\x36\xa6\x0c\x14\x45\x86\x31\x6b\xc7\xc8\xc6\xfd\xd7\x59\x9b\x4f\x1f\x6d\x7b\x92\x4c\x2a\xa5\xd0\x18\x97\xa7\xff\x25\x74\xce\x6a\x76\x3e\x3d\xf7\xce\x18\xca\x8f\x59\x3e\xd2\x4b\x9c\xc9\xae\x11\x61\x67\xa5\xb0\x4e\x1d\x22\x9d\xaa\x60\x1d\x1b\x3a\x4f\x4f\x5d\xc4\xc9\x4a\x12\x06\x03\xe7\x61\xb1\x4f\xe1\x28\xee\x12\xe5\xba\xd1\x31\x5a\x66\x18\x4a\xd6\x9b\x28\x02\x9e\xd8\xef\xa2\x64\xe9\x6e\xe8\x04\x32\x53\xd7\x73\xc8\x9c\x3a\x30\x0b\xb2\x25\x35\x18\x12\xec\xca\xe1\x2d\xea\x51\xc3\xa2\x3b\x31\xcd\xcb\x4e\x48\xe3\x02\x8d\x76\xf9\xb0\xc6\x54\x46\x49\x9d\x2f\x8a\xa0\xc9\x96\xe4\x3a\x1f\x9f\xbd\xd8\x96\x95\xa8\xa6\x9e\x0a\xed\x48\xc5\x99\x92\x55\x39\x8e\xb9\x2c\x86\x43\x27\xa4\xb3\x72\xf0\x3e\x1e\x36\xda\xb2\x47\xc9\x2e\xa2\x3e\x9f\x25\x0b\xc6\xb0\x16\x46\x87\xa4\xb8\x0d\x0e\x26\x4f\xeb\x7d\x87\x84\x22\xa9\xe3\x00\x1c\x93\x9d\x77\xc7\x16\xb4\x25\x39\xf0\xb1\xc9\xcb\xf6\xd8\x46\xab\x38\xf6\x78\x57\x7f\xf9\x74\x35\xb6\x3d\x62\x40\x56\xb6\x1d\x46\x42\x3e\x3b\x08\xb2\xd5\x66\xa4\xe6\x41\x79\x0f\x6d\x7c\x55\x36\x3e\x5f\x2b\xc7\xee\xc5\xc1\xe1\x5d\x08\xe2\x64\x06\x9f\xed\xe7\xe2\x3b\x92\x5a\xae\x5d\xd3\x9c\x5e\x0a\x8f\xd9\x3e\x7b\x88\xec\xb3\x3d\xd9\x7b\xf4\x68\x0c\x19\x1d\xba\x1a\x5e\x7e\xab\xe1\xa5\xf4\xa2\xb2\x92\x2c\x47\x59\xcf\x03\xe2\x47\xc0\x71\x02\x40\xbc\x5a\xe7\xc1\xf6\x48\x28\x7e\xfa\x91\x50\x4c\xbf\xc6\x62\xf1\x00\x14\xf3\xc5\x53\x91\xf8\xfe\xbd\x1e\x25\x23\x0b\xc6\x49\x8b\x5b\x42\xcf\x4b\xc2\x83\x9e\xcd\x4e\x9b\xf6\xef\x61\x98\x3f\x12\x86\x17\x67\x61\x78\x98\xfe\x4d\x14\xb1\xa8\x7b\xe3\x95\x27\x0b\x40\xf9\x9b\x11\xb3\x8a\xaa\x18\x35\x40\xee\x64\xbc\x3b\x2d\xbe\x46\xab\x9c\x81\x90\x2f\xb5\x42\x7a\x42\xbe\x0f\x96\xbd\x01\xd9\x78\xbb\x51\x87\x31\x9f\x0d\xea\x2f\x37\x82\xfd\x7d\xe0\x3f\x9f\x6c\x8f\xc5\x71\xfe\xb4\xd3\xf4\xb0\x8c\x3f\x6f\x43\x0f\xee\x55\xfb\xbb\x60\xba\x6f\xdd\x93\xd0\x3f\x01\x00\x00\xff\xff\xd7\xd5\x62\x26\x77\x10\x00\x00")

func configChainstorageBitcoinMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBitcoinMainnetBaseYml,
		"config/chainstorage/bitcoin/mainnet/base.yml",
	)
}

func configChainstorageBitcoinMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageBitcoinMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bitcoin/mainnet/base.yml", size: 4215, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBitcoinMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\xbd\x6e\xc3\x30\x0c\x06\x77\x3d\x05\x91\xce\x36\xdc\x66\x28\xa2\x39\x1d\xba\x34\x4b\x76\x83\x96\xbe\xc4\x84\xf5\x63\x48\x8c\xd3\xf4\xe9\x0b\x3b\x45\xc1\x91\x77\x87\xef\x85\xce\xa3\x54\xba\x48\x00\x49\xa5\x2b\x12\x0a\x2b\x3c\x0d\x0f\xda\x45\x9e\x40\x2e\xa7\x8b\x5c\x77\x2d\x1d\x4f\xf4\x75\x3a\xd3\xc7\xf1\xf3\xdc\x1a\xbe\x57\x6b\x88\xf8\x5e\x7b\x76\x2e\xdf\x92\x5a\xf2\x58\x10\xf2\x1c\x91\xd4\x10\x0d\x37\x37\x41\x2d\xe1\x9b\xe3\x1c\xd0\xb8\x91\x25\x55\xcd\x85\xaf\x68\x06\x51\x97\x25\x35\x91\x25\x25\x68\xe3\xb1\x18\xc7\x1e\xc9\x61\xcb\x7a\x5f\x50\xab\x25\x45\x9c\x73\xe1\xb0\x02\xed\x5f\xa9\x75\x39\xda\xf7\xb7\xfd\xde\x54\x94\x05\x65\x15\x06\x49\xbe\xff\xb7\xba\x76\x3b\x7b\xe8\x0e\x9d\xb9\xe7\x32\x5d\x42\x7e\xee\x9d\x73\x08\x4f\x83\x88\x9d\xca\x22\xfa\xe8\x47\x70\xd1\x01\xac\xbd\x4a\x44\xbe\xa9\xa5\xd7\x2e\x6e\x8c\x1b\xe1\xa6\x39\x4b\xd2\xbe\xca\x0f\xd6\x47\x67\x7e\x03\x00\x00\xff\xff\xdc\x01\x01\x89\x34\x01\x00\x00")

func configChainstorageBitcoinMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBitcoinMainnetDevelopmentYml,
		"config/chainstorage/bitcoin/mainnet/development.yml",
	)
}

func configChainstorageBitcoinMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageBitcoinMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bitcoin/mainnet/development.yml", size: 308, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBitcoinMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageBitcoinMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBitcoinMainnetLocalYml,
		"config/chainstorage/bitcoin/mainnet/local.yml",
	)
}

func configChainstorageBitcoinMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageBitcoinMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bitcoin/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBitcoinMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x4f\xc3\x30\x10\xc5\xf1\xdd\x9f\xe2\xa9\xcc\xb1\x22\x3a\xa0\x7a\x2e\x03\x0b\x5d\xb2\x57\xe7\xf3\x35\x3d\x35\x3e\x47\xb6\x43\xe1\xdb\xa3\x56\x08\xbd\xf5\xfd\x7f\x2f\x98\xae\xda\x70\xd1\x45\xa0\x0d\xb3\x98\x54\xea\x92\x10\x7f\xb0\xcb\x74\x13\x70\xb1\x8b\xce\x3b\x8f\xe3\x09\x9f\xa7\x09\xef\xc7\x8f\xc9\x3b\xba\xb7\xe0\x00\xba\xb7\x33\x31\x97\xcd\x7a\xc0\x5a\x4b\xda\xb8\x6b\x31\x07\xc4\x8d\x6f\xd2\x03\xe4\x9b\xf2\xba\xc8\xc0\x57\x52\x6b\xbd\x54\x9a\x65\x88\xda\xb9\xa8\x0d\x99\xd4\x4c\xfa\xf0\x28\x1d\x53\x12\x63\x79\xb2\x29\x55\x69\x2d\xa0\x4b\x5e\x4b\xa5\xc5\xff\x31\x9e\x4b\x0e\x6f\xaf\xfb\xbd\x6b\x52\xbf\xa4\x3e\xce\x51\x2d\x9d\xff\x8b\xd1\x3f\x17\x0e\xe3\x61\x74\xbf\x01\x00\x00\xff\xff\x62\xf1\xd6\xf7\xde\x00\x00\x00")

func configChainstorageBitcoinMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBitcoinMainnetProductionYml,
		"config/chainstorage/bitcoin/mainnet/production.yml",
	)
}

func configChainstorageBitcoinMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageBitcoinMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bitcoin/mainnet/production.yml", size: 222, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBscMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5b\x6f\xdc\xb6\x12\x7e\xd7\xaf\x20\x7c\x9e\xed\xbd\x38\xce\x39\x11\x70\x1e\x72\xc3\x39\x46\x5a\xbb\x68\x0d\x14\xe8\x0b\x31\x22\x47\x2b\x62\x29\x52\x21\x47\x9b\xdd\xfe\xfa\x62\x48\xc9\xda\xdd\x7a\x6d\x07\x4d\x62\xf8\x45\x4b\x0e\xe7\xf6\x7d\xfc\x86\xfe\x97\xb8\x6b\x4c\x14\xb5\xb1\x28\x4c\x14\x2b\x74\x18\x80\x50\x8b\x6a\x27\xce\x5a\x58\xa3\x50\xde\xd5\x66\x75\x76\x21\x3e\xdc\x8a\x9b\xdb\x3b\xf1\xf1\xc3\xf5\xdd\x45\x01\x9d\x29\x0b\x21\x5a\xd8\x4a\xd7\xb7\xb2\xb2\x5e\xad\x25\x7b\x89\xa5\x58\xcc\xe7\xf3\xe3\xbd\x58\x8a\x2b\x5e\xe4\x85\x2f\x3e\xac\x31\x24\xc3\x42\x88\x48\x01\xa1\x35\x6e\x25\x2b\x20\xd5\xc8\x68\xfe\xc4\xc1\x78\xda\x32\x8e\x30\x6c\xc0\x96\x62\x11\x0f\x36\x52\x10\x2f\x71\x83\x8e\x24\x99\x16\xd9\x6b\x5b\xc0\x97\xc8\xe9\xc1\x97\x28\x41\x29\xdf\x3b\x2a\x85\xc6\x0d\x5a\xdf\xb5\xe8\xa8\x10\xa2\xea\xd5\x1a\xa9\x14\x67\x67\x85\x10\xda\x7e\x66\x73\x21\x34\x5a\xd8\xc9\x88\x2a\x96\xe2\x4d\xaa\x42\x08\x07\xec\x15\xb7\xd0\x76\x16\xa5\x6a\xc0\xb8\x48\x3e\xc0\x0a\x87\xd2\x64\x15\x95\x6c\xc1\x38\x87\x24\xb5\xfd\x9c\x4e\x6d\x4c\x34\x95\xb1\x86\x76\x29\x2d\xdf\xd3\xe0\xf6\x75\x72\xab\x77\x0e\x5a\xaf\xab\x1c\x36\xb7\x8f\xa0\xb2\xcf\x8f\x94\x0e\x0e\x75\x3f\x75\x30\xf7\xe7\xd1\xe3\xb2\x41\xb3\x6a\x48\x1a\xa7\x71\xfb\x2c\x5f\xbb\xf1\xc8\xb1\xd7\x0d\x86\x68\xbc\x43\x2d\x9f\x4e\x6f\xb2\x7d\x34\xd1\x07\x5d\x0e\x47\x1e\xcb\xf8\x94\xfb\xdd\x78\x56\x1f\x85\xea\x02\x46\xb3\xe2\x03\x7d\xb0\x12\xb7\x9d\x09\x40\xc6\xbb\x52\x5c\xce\xdb\x42\x88\x80\xab\xf4\xab\x8f\xe7\x08\x91\xce\x17\x89\x8d\x29\xd8\xc0\x20\x20\x90\xca\xb7\xec\x28\x26\xd3\xff\xfd\x71\xfd\x4b\xa1\x40\xa3\x53\xc9\x06\xb4\xe6\xbd\x91\x7a\x9e\x83\x97\x62\x3f\xed\xf3\x2a\xaa\xf3\x29\xa7\x80\x84\x8e\x93\x90\x1d\x06\xe3\x75\x29\xfe\x5d\x24\x73\xf6\x96\xeb\x88\x04\x81\x06\x3c\x4a\x31\x2f\x26\x4a\xad\x72\x5a\x16\x08\x23\x95\x62\x99\x7e\xc5\x01\x92\xe5\x64\x98\xae\xce\x65\x1c\x17\xb2\x7f\xf1\xee\xa7\xdb\xf7\x9f\xde\xff\xff\xed\xf5\x8d\x7c\xf7\xdb\xfb\x42\x08\x65\x0d\x3a\xca\x3e\x5b\x88\x84\x21\x7f\x0b\x81\x4e\x77\xde\x38\x92\xab\xe0\xfb\x6e\xa8\x4e\x88\x68\x61\x83\x4f\xd8\x6c\xc0\x1a\x0d\xe4\x1f\xf7\x35\x22\x7f\x54\xd1\xe2\xa0\x22\xfe\x55\x23\x50\x1f\x86\xa0\xc1\x47\x24\x02\xd9\x41\x88\x18\x4a\x51\x83\x8d\x58\x08\x61\x42\xc0\xc4\x0e\x26\x92\x36\x91\x80\xe1\x61\xed\x62\x95\x42\x62\x91\x2a\xc5\xcd\xc7\xbb\xdf\x6f\x7f\xfd\xc4\xc5\xcb\x9f\xdf\x5e\xdf\xdc\x7c\xbc\x2b\xb2\x20\xca\x2c\x0b\xfb\xec\x51\xc1\xef\x41\x12\xc0\xad\x70\x50\xb3\x57\x0c\xb4\x89\x89\xb4\xce\x6b\x94\x0a\x1c\x84\xdd\x94\xcd\xb8\xd9\x79\x6b\x59\xd6\x4e\xed\x4f\xc2\x77\x68\x51\xf7\x4e\x31\x43\xc0\xca\xdc\x95\xb3\xb3\x22\xea\x75\xa2\x5b\x4f\x8d\x6c\x10\x34\x57\x9f\x1a\x99\x56\xc8\xaf\xd1\x0d\x0b\x07\x57\xe6\x9e\x9e\x0d\x51\x17\xcb\xd9\xcc\xd5\x74\x0e\x9d\xb9\x50\xde\xb8\x0a\x22\x5e\x28\xdf\xce\xa0\x33\x33\xdc\x76\xb3\xfd\xa3\xb3\x2a\xaa\xd9\xd0\x8c\xd9\x66\xf1\xa0\xda\x07\x8c\x54\xf7\xb6\x14\x14\x7a\x2c\x22\x86\x4d\x66\x50\x65\x9c\x9e\x42\xcf\x2f\xd2\x5f\xf9\x66\xfe\x66\x5e\x44\x0b\x53\x57\x07\xc9\xd1\x68\x09\x86\x29\x31\x11\x78\x5c\x5e\xf2\x4d\xc5\x6d\x87\x8a\x50\xa7\x04\x6a\xeb\xf3\x44\x38\x17\xad\x77\x86\x7c\x48\xdf\xdc\x6e\xcc\x9f\xb9\xb3\x18\x66\xf7\x34\xfb\x2f\x57\xc0\xba\xed\x6b\x19\x77\x4e\x65\xe4\x26\xaa\xa4\xe0\x64\xb8\xad\xcb\xf4\xd5\x32\xdc\x4e\xa1\xb4\x10\x29\x0b\x4c\x29\x2e\xdb\xe2\x20\x81\x0a\xd4\xba\x36\x1c\x36\xf3\x13\x14\x99\x0d\x4f\x89\x80\x14\x76\x3c\xcf\x4c\xdb\xb7\x12\x88\xb0\xed\x28\x96\xe2\xf2\xd0\x2c\xaa\x06\x75\x6f\x51\x92\x1f\x6e\xfd\x30\x5e\x4a\x71\xd5\x1e\x99\xe6\x6d\x2f\x95\xf5\x11\x27\xbb\xc5\x3c\x1b\xee\xcf\xdb\xe5\xd5\x30\xed\x54\x83\x6a\x9d\x2f\xdf\x38\x89\x87\x1d\x1e\xb5\x01\xbb\xe0\x15\xc6\x88\x9a\xc5\x28\x8f\x6c\xd6\xc6\x3c\x29\xfb\x56\x2a\xef\x54\x1f\x02\xf7\x10\xb7\x14\x40\x91\x4f\xe0\xbf\x4e\x16\x04\x71\x2d\xad\x89\x69\x1c\xd7\xd0\xdb\x2c\xef\x63\x87\xa4\x46\x65\x58\x35\xa7\x64\x97\xed\xa1\x05\x6e\x51\xf5\x74\x68\xf2\xaa\x39\xb4\x31\x9a\xf5\x92\x76\xe5\xfd\xd2\xc5\xd4\x76\xc6\x00\x9d\x6a\x5a\x60\x5e\xbe\x38\x08\xaa\x31\x76\xe2\xe8\x5e\x79\xa7\x0e\xbe\x1e\x0e\xbe\x5c\x2b\xa7\xee\xb1\x76\x04\x1f\xa3\x3c\x52\xf0\x27\xfb\x79\xf5\x1d\x49\xad\xd6\xbe\xae\x8f\x5f\x8c\x87\x6c\x5f\x9c\x22\xfb\x62\x24\x7b\x07\x01\xac\x45\x6b\x62\x9b\xe5\xfb\x64\xc3\x87\xd2\x87\xf1\xac\xd0\x11\xbf\x05\xb2\xda\xfd\x08\x38\x8e\x00\xe0\x87\x77\x56\xb8\x67\x42\xf1\x9f\x1f\x08\xc5\xe5\xdf\xa1\xb8\x3a\x2d\x3b\x5f\x09\xc4\xf7\x6f\xf5\x34\x3a\xf2\xe0\x38\xea\x70\x83\x10\xa8\x42\x78\xa4\x65\xff\x1c\x84\xe5\xb7\x02\xe1\x34\xf7\x6b\x1e\x5f\x3c\xf1\xa6\xf7\x47\x56\xff\xe1\x9f\x10\x4e\x8a\xe7\x21\x0f\x00\xb5\x53\x76\xef\x42\x3d\x80\x56\xcc\xef\x60\xa9\x02\x02\x3d\x84\xca\x68\x80\x8e\x9f\x38\x7a\x3f\xe8\x8b\x21\x7d\xff\x30\x18\x9f\x05\xdf\x5c\xd7\x9e\x8b\xe3\xf2\xab\xee\xd2\x13\x97\xe9\xc5\xfa\x39\xb6\xb1\xc8\x66\xfc\x1e\x4c\xaf\xae\x07\x12\xfa\x2b\x00\x00\xff\xff\xd1\xcb\x0b\x52\x92\x10\x00\x00")

func configChainstorageBscMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBscMainnetBaseYml,
		"config/chainstorage/bsc/mainnet/base.yml",
	)
}

func configChainstorageBscMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageBscMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bsc/mainnet/base.yml", size: 4242, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBscMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x6f\xc2\x30\x10\xc5\xf1\xdd\x9f\xe2\x44\xe7\x58\x51\x19\x2a\x3c\xd3\xa1\x4b\x59\xb2\xa3\xcb\xf9\x11\x2c\xe2\x73\xe4\x33\xa1\xfd\xf6\x15\x51\x85\xde\xfa\xfe\xbf\x37\x1a\xae\xc9\xe8\x92\x66\x50\x32\x9a\xa0\xa8\xdc\x10\x69\xfc\xa5\x5d\xe6\x1b\x48\x8a\x5e\xd2\xb4\xf3\x74\x3c\xd1\xf7\x69\xa0\xcf\xe3\xd7\xe0\x1d\x3f\x2c\x38\x22\x7e\xd8\x99\x45\xca\x5d\x5b\xa0\x88\x15\x73\x59\x32\xb4\x39\xa2\xf1\x2e\x37\xb4\x40\xf8\xe1\xbc\xcc\xe8\xe4\xca\x49\xad\x95\xca\x13\xba\xd1\xa4\xcb\x9c\x54\xd1\xba\x88\xd5\x09\x47\xa8\x60\x23\x63\xac\x30\x0b\xd4\x90\x97\x52\x79\x7e\x1e\xfc\xbf\xe2\xa5\xe4\xf0\xf1\xbe\xdf\x3b\x43\x5d\x51\x9f\xc1\x98\x34\x9e\x5f\x55\xef\xb7\x85\x43\x7f\xe8\xdd\x5f\x00\x00\x00\xff\xff\x5d\x3b\x11\x73\xde\x00\x00\x00")

func configChainstorageBscMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBscMainnetDevelopmentYml,
		"config/chainstorage/bsc/mainnet/development.yml",
	)
}

func configChainstorageBscMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageBscMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bsc/mainnet/development.yml", size: 222, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBscMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageBscMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBscMainnetLocalYml,
		"config/chainstorage/bsc/mainnet/local.yml",
	)
}

func configChainstorageBscMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageBscMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bsc/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBscMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x4f\xc3\x30\x10\xc5\xf1\xdd\x9f\xe2\xa9\xcc\xb1\x22\x3a\xa0\x7a\x2e\x03\x0b\x5d\xb2\x57\xe7\xf3\x35\xb5\x1a\x9f\x23\x9f\x43\xe1\xdb\xa3\x56\x08\xbd\xf5\xfd\x7f\x2f\x98\xae\xd9\x70\xc9\x8b\x20\x1b\x66\x51\x69\xd4\x25\x21\xfe\x60\x57\xe8\x26\xe0\xaa\x97\x3c\xef\x3c\x8e\x27\x7c\x9e\x26\xbc\x1f\x3f\x26\xef\xe8\x6e\xc1\x01\x74\xb7\x33\x31\xd7\x4d\x7b\xc0\xda\x6a\xda\xb8\xe7\xaa\x0e\x88\x1b\xdf\xa4\x07\xc8\x37\x95\x75\x91\x81\xaf\x94\xd5\x7a\x6d\x34\xcb\x10\x8d\x87\x42\x59\x55\xfa\xf0\xa8\x1c\x53\x12\x65\x79\x92\x29\x35\x31\x0b\xe8\x52\xd6\xda\x68\xf1\x7f\x84\xe7\x5a\xc2\xdb\xeb\x7e\xef\x4c\xda\x97\xb4\xc7\x39\x66\x4d\xe7\xff\x62\xf4\xcf\x85\xc3\x78\x18\xdd\x6f\x00\x00\x00\xff\xff\x23\xe5\xbe\x3c\xda\x00\x00\x00")

func configChainstorageBscMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBscMainnetProductionYml,
		"config/chainstorage/bsc/mainnet/production.yml",
	)
}

func configChainstorageBscMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageBscMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bsc/mainnet/production.yml", size: 218, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageDogecoinMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\xdf\x6f\xdb\xb6\x13\x7f\xd7\x5f\x71\xc8\xf7\x39\xb1\x9d\x36\xfd\xae\x02\xf6\xd0\xb5\x41\x17\x74\x4b\x86\x21\xc0\x80\xbd\x10\x27\xf2\x64\x11\xa6\x48\x95\x3c\xb9\xf6\xfe\xfa\x81\x22\x65\xd9\x6e\x52\x37\x58\xdb\x20\x2f\x16\x79\xbc\x9f\x9f\xfb\xdc\xe5\x7f\x70\xdf\xe8\x00\xb5\x36\x04\x3a\xc0\x92\x2c\x79\x64\x52\x50\x6d\xe1\xac\xc5\x15\x81\x74\xb6\xd6\xcb\xb3\x0b\x78\x77\x07\xb7\x77\xf7\x70\xfd\xee\xe6\xfe\xa2\xc0\x4e\x97\x05\x40\x8b\x1b\x61\xfb\x56\x54\xc6\xc9\x95\x88\x5a\x42\x09\x8b\xf9\x7c\x7e\x7c\x17\x4a\xb8\x8a\x87\xf1\xe0\x93\xf3\x2b\xf2\x83\x60\x01\x10\xd8\x13\xb6\xda\x2e\x45\x85\x2c\x1b\x11\xf4\x3f\x94\x85\xa7\x2b\x6d\x99\xfc\x1a\x4d\x09\x8b\x70\x70\x31\x18\x71\x82\xd6\x64\x59\xb0\x6e\x29\x6a\x6d\x0b\xfc\x14\xa2\x7b\xf8\x29\x08\x94\xd2\xf5\x96\x4b\x50\xb4\x26\xe3\xba\x96\x2c\x17\x00\x55\x2f\x57\xc4\x25\x9c\x9d\x15\x00\xca\x7c\x8c\xe2\x00\x8a\x0c\x6e\x45\x20\x19\x4a\x78\x3d\x44\x01\x60\x31\x6a\xa5\x0d\xb6\x9d\x21\x21\x1b\xd4\x36\xb0\xf3\xb8\xa4\x1c\x9a\x50\x6e\x49\xd2\x69\x2b\x5a\xd4\xd6\x12\x0b\x65\x3e\x0e\x4f\xd7\x3a\xe8\x4a\x1b\xcd\xdb\xc1\x37\xd7\x73\xd6\xfd\x6a\xd0\xad\xb6\x16\x5b\xa7\xaa\x64\x3b\xe5\x90\xb1\x32\x4f\x34\x37\xbc\xce\x19\x38\xf5\x3a\x65\xea\xb4\x0e\xd1\x90\x5e\x36\x2c\xb4\x55\xb4\xf9\x1a\x85\xd5\x76\x7c\xf2\xa0\xea\x35\xf9\xa0\x9d\x25\x25\x4e\x3b\x3a\xc9\x9e\x76\xf9\x41\xbd\xf9\xdd\x97\x7c\x7f\xc4\x46\xb5\x1d\xdf\xaa\x87\xec\x75\x9e\x82\x5e\xc6\x57\xbd\x37\x82\x36\x9d\xf6\xc8\xda\xd9\x12\x5e\xcc\xdb\x02\xc0\xd3\x72\xf8\xea\xc3\x39\x61\xe0\xf3\xc5\x80\xd5\xc1\x62\xc6\x17\x32\x0a\xe9\xda\xa8\x28\x0c\xa2\xef\xff\xbe\xf9\xa3\x90\xa8\xc8\xca\x41\x06\x95\x8a\x77\x23\x30\x5d\x34\x5e\xc2\xbe\xef\xe7\xa3\x63\xe7\x93\x63\x9e\x98\x6c\xf4\x44\x74\xe4\xb5\x53\x25\xfc\xbf\x18\xde\x44\x95\x29\xa2\xc0\xe8\x39\xd7\xa8\x84\x79\x31\x01\x6e\x99\x7c\x33\xc8\x14\xb8\x84\xc5\xf0\x15\x72\x85\x16\x93\x60\xea\xae\x76\x3c\x48\xfa\xe1\x97\xdf\xee\xde\x7e\x78\xfb\xeb\x9b\x9b\x5b\xf1\xee\xee\xfd\xf5\xdb\xbb\x9b\xdb\x02\x40\x1a\x4d\x96\x93\xe2\x16\x03\x93\x4f\xbf\x01\xc8\xaa\xce\x69\xcb\x62\xe9\x5d\xdf\xe5\x38\x01\x82\xc1\x35\x9d\x90\x59\xa3\xd1\x0a\xd9\x7d\x59\xd7\x08\x84\xa3\xb0\xe6\x07\x61\xc5\xaf\x9a\x90\x7b\x9f\x8d\x7a\x17\x88\x19\x45\x87\x3e\x90\x2f\x81\x7d\x4f\x05\x80\xf6\x9e\x06\xac\x44\x58\x29\x1d\x18\x63\x9d\x22\xc5\x45\x32\x23\x8e\x5c\x56\xc2\xed\xf5\xfd\x5f\x77\x7f\x7e\xd8\x25\x40\xfc\xfe\xe6\xe6\xf6\xf6\xfa\xbe\xd8\xe9\xdd\x6f\x71\xeb\x58\xd4\xae\xb7\x4a\x90\xf7\xce\x0b\xe9\x54\xa4\xcd\x97\x93\x48\x4e\xed\x58\xe8\x44\x43\xa3\xb1\xb1\xea\x89\x98\x45\xa2\xa7\xcf\xc0\x2a\xbd\xdb\x2b\xbe\x47\xbb\xa4\x4c\xad\xd1\x8e\xd2\x61\x68\x14\x65\x3e\x8a\xce\x3b\x49\x21\xb8\x31\xe8\xba\xb7\x32\x42\x09\x8d\x48\x99\x3b\x3b\x2b\x82\x5a\x0d\xe0\xec\xb9\x11\x0d\xa1\x8a\x19\x1a\x92\x3d\x9c\xb0\x5b\x91\xcd\x07\x07\x5d\xb6\x03\x73\xc3\xdc\x85\x72\x36\xb3\x35\x9f\x63\xa7\x2f\xa2\xab\x15\x06\xba\x90\xae\x9d\x61\xa7\x67\xb4\xe9\x66\xfb\x4f\x67\x63\x40\xb3\x1c\xd0\x6c\xbd\x78\x70\x7c\x78\x0a\x5c\xf7\x26\xfb\x1e\xc8\xaf\x13\xd4\x2a\x6d\xd5\x64\x7f\x7e\x31\xfc\x95\xaf\xe7\xaf\xe7\x45\x30\x38\x65\x66\x24\x2d\x32\x8c\x25\x5c\x1d\xa0\x7d\x3c\x4d\xcd\x4d\x9b\x8e\x24\x93\x1a\x1c\xa8\x8d\x4b\x23\xe6\x1c\x5a\x67\x35\x3b\x3f\xfc\xee\x9c\x31\x94\x7e\xa6\x19\x95\x3f\x62\xdf\x1b\x5c\xd1\x6c\xd7\x73\x3f\xc7\x70\xe2\x40\x70\xb5\x08\x5b\x2b\x85\x75\xea\x10\x61\x05\x00\xeb\x98\xe8\xcb\xe1\x57\x1b\xeb\x67\x25\x09\x83\x81\x13\x4b\x95\xb0\x68\x8a\x03\x6f\x2a\x94\xab\x5a\x47\x1f\x12\xe0\x50\xb2\x5e\xc7\xf1\xe3\x89\xfd\x36\x4e\x4b\xdd\xf6\xad\x40\x66\x6a\x3b\x0e\x25\xbc\x38\x14\x0b\xb2\x21\xd5\x1b\x12\xec\x32\x61\xe4\xb9\x55\xc2\x55\x7b\x24\x9a\xae\x9d\x90\xc6\x05\x9a\xe4\x16\xf3\x24\xb8\x3f\xcd\x2f\xaf\xf2\x2c\x95\x0d\xc9\x55\x6a\xd9\x71\xce\xe7\x9b\x38\xc8\x3d\x65\x2c\x92\x8a\x3c\x96\x16\x82\x98\xfe\xd4\x00\x7d\x2b\xa4\xb3\xb2\xf7\x3e\x36\x38\x6d\xd8\xa3\x64\x17\x91\x70\x99\x7a\x87\x31\xac\x84\xd1\x61\x18\xf6\x35\xf6\x26\xcd\x88\x31\x43\x42\x91\xd4\x91\x75\x27\x67\x2f\xdb\x43\x09\xda\x90\xec\xf9\x50\xe4\x65\x73\x28\xa3\x55\xa4\x5a\xde\x96\xbb\xa3\x8b\x29\xed\xb1\x06\x64\x65\xd3\x62\x04\xe9\xb3\x17\x41\x36\xda\x4c\x80\xdd\x0b\xef\xb1\x87\xaf\xf2\xc3\xe7\x4b\xe5\x94\xbd\xc8\x26\xde\x85\x20\x8e\x78\xff\x64\x3e\xaf\xbe\x23\xa8\xe5\xca\xd5\xf5\xf1\x3e\x7a\x88\xf6\xc5\x63\x60\x5f\x8c\x60\xef\xd0\xa3\x31\x64\x74\x68\x47\xde\x7f\x24\xe1\x39\xf4\x3c\xd9\x25\x59\x8e\xbb\x44\x62\x87\x1f\x51\x8e\xa3\x02\xc4\xb5\x3e\xd1\xdd\x57\x96\xe2\xa7\x1f\x59\x8a\xf9\xe7\xb5\xb8\x7a\x9c\x77\x9e\x58\x89\xef\x9f\xeb\x69\x90\xa4\x31\x72\x94\xe2\x86\xd0\x73\x45\xf8\x85\x9c\xfd\xf7\x2a\x5c\x7e\xb3\x2a\x3c\x8e\xfe\x3a\x0e\xb0\x38\xf3\x4a\xa8\xd1\x04\xda\xf1\x7f\xfe\xff\x26\x7a\x15\x27\x62\x1c\x01\x72\x2b\xcd\x5e\x4b\x1d\x94\x2b\x37\x41\x48\xab\xb4\x90\x9e\x90\x1f\xaa\xcb\x28\x40\x36\xee\x3c\x6a\xdf\xea\xb3\xd5\x7a\xb7\x28\x8c\x6b\xc2\x37\xa7\xb6\xaf\xad\xe4\xe5\xd3\xda\xe9\x44\x3f\x3d\x5b\x42\xf7\xd6\xad\x71\x41\x1c\x36\xaf\x07\x1c\xfa\x37\x00\x00\xff\xff\xc2\x76\x60\xe3\xf4\x10\x00\x00")

func configChainstorageDogecoinMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageDogecoinMainnetBaseYml,
		"config/chainstorage/dogecoin/mainnet/base.yml",
	)
}

func configChainstorageDogecoinMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageDogecoinMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/dogecoin/mainnet/base.yml", size: 4340, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageDogecoinMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x6e\xc2\x30\x18\xc4\xf1\xdd\x4f\x71\xa2\x73\xac\xa8\x0c\x15\x9e\xe9\xd0\xa5\x2c\xd9\xd1\x17\xfb\x08\x16\xf1\xe7\xc8\x36\xa1\x7d\xfb\x8a\xa8\x42\xb7\xde\xff\xf7\x86\xe1\x1a\x2b\x2e\x71\x26\x62\xc5\x44\x65\x91\xc6\x80\xf1\x17\xbb\x24\x37\xc2\x67\xbd\xc4\x69\x67\x71\x3c\xe1\xfb\x34\xe0\xf3\xf8\x35\x58\x23\x8f\xea\x0c\x20\x8f\x7a\x16\xef\xf3\x5d\x9b\x43\xe0\xca\x39\x2f\x89\xda\x0c\x30\xde\xfd\x8d\xcd\x81\x3f\x92\x96\x99\x9d\xbf\x4a\xd4\xda\x72\x91\x89\x5d\xc8\x13\x7d\x8e\xda\x25\x89\xaa\x6c\x5d\xe0\x6a\xbc\x04\xaa\xe7\xe6\x86\x50\x58\xab\x43\x63\x5a\x72\x91\xf9\x79\xb0\xff\x94\xf5\x39\xb9\x8f\xf7\xfd\xde\x54\x96\x95\xe5\x19\x8c\x51\xc3\xf9\x55\xf5\x76\x9b\x3b\xf4\x87\xde\xfc\x05\x00\x00\xff\xff\x02\x04\x92\x7d\xe3\x00\x00\x00")

func configChainstorageDogecoinMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageDogecoinMainnetDevelopmentYml,
		"config/chainstorage/dogecoin/mainnet/development.yml",
	)
}

func configChainstorageDogecoinMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageDogecoinMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/dogecoin/mainnet/development.yml", size: 227, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageDogecoinMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageDogecoinMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageDogecoinMainnetLocalYml,
		"config/chainstorage/dogecoin/mainnet/local.yml",
	)
}

func configChainstorageDogecoinMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageDogecoinMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/dogecoin/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageDogecoinMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\x05\x91\x37\xdb\x08\x5e\x86\x22\x9a\xd3\xa1\x4b\xb3\x78\x37\x68\xe9\xda\x11\x2c\x89\x06\x25\xd7\xe9\xdf\x17\x76\x8a\x82\xcb\x1d\xce\x39\xe0\x3f\xea\x1e\xa1\xd0\x18\x22\x28\x14\x9a\x90\xa1\x5c\xe1\x69\xf8\xa6\x53\xe2\x19\xe4\x24\x8f\x61\x3a\xb5\x74\xbb\xd3\xe7\xbd\xa3\xf7\xdb\x47\xd7\x1a\xde\x8a\x35\x44\xbc\x95\x9e\x9d\x93\x35\x57\x4b\x8b\x8a\x5f\x5d\x0d\x92\x0d\xd1\xb0\xba\x19\xd5\x12\x9e\x9c\x96\x88\xc6\x3d\x38\xe4\x52\x45\x79\x42\xe3\x65\x82\x93\x90\x9b\xc4\x21\x67\xd4\x66\x57\x8d\x63\x8f\xec\x70\x74\xbd\x57\x94\x62\xa9\x22\x2d\xa2\x1c\xdb\xdf\x4e\xeb\x24\xd9\xb7\xff\x97\x8b\x29\xd0\x2f\xe8\x0e\x0f\x21\xfb\xfe\xcf\x38\xb7\xc7\xd9\xeb\xf9\x7a\x36\x25\xf2\x4e\xe0\xb9\xc0\x55\xf8\x7e\x13\x9d\xc7\x28\xaf\xe7\x1b\x4a\x92\x43\x15\x3d\xf6\x22\x31\xe2\x35\x4b\x55\x70\x82\x9a\x9f\x00\x00\x00\xff\xff\x24\x99\x42\xc7\x1e\x01\x00\x00")

func configChainstorageDogecoinMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageDogecoinMainnetProductionYml,
		"config/chainstorage/dogecoin/mainnet/production.yml",
	)
}

func configChainstorageDogecoinMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageDogecoinMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/dogecoin/mainnet/production.yml", size: 286, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumGoerliBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x41\x6f\x1b\x37\x13\xbd\xef\xaf\x18\xf8\x3b\xdb\x92\x1c\x3b\x5f\xb3\x40\x0f\x6d\x62\x24\x46\xd2\xb8\x08\x5c\x14\xe8\x85\x18\x91\xb3\x5a\x42\x5c\x72\x43\xce\x2a\x52\x7f\x7d\x41\x72\x57\x2b\xa9\xb2\x15\xa3\x49\x0c\x5f\xb4\xe4\xcc\xf0\xcd\xbc\xe1\x1b\xfa\x7f\x70\x5f\xeb\x00\x95\x36\x04\x3a\xc0\x82\x2c\x79\x64\x52\x30\xdf\xc0\x59\x83\x4b\x02\xe9\x6c\xa5\x17\x67\x17\xf0\xe6\x0e\x3e\xde\xdd\xc3\xcd\x9b\xdb\xfb\x8b\x02\x5b\x5d\x16\x00\x0d\xae\x85\xed\x1a\x31\x37\x4e\x2e\x45\x8c\x12\x4a\x98\x4d\xa7\xd3\xc3\xbd\x50\xc2\x75\x5c\x8c\x0b\x5f\x9c\x5f\x92\x4f\x86\x05\x40\x60\x4f\xd8\x68\xbb\x10\x73\x64\x59\x8b\xa0\xff\xa6\xde\x78\xdc\xd2\x96\xc9\xaf\xd0\x94\x30\x0b\x7b\x1b\xe9\x10\x27\x68\x45\x96\x05\xeb\x86\x62\xd4\xa6\xc0\x2f\x21\xc2\xc3\x2f\x41\xa0\x94\xae\xb3\x5c\x82\xa2\x15\x19\xd7\x36\x64\xb9\x00\x98\x77\x72\x49\x5c\xc2\xd9\x59\x01\xa0\xcc\xe7\x68\x0e\xa0\xc8\xe0\x46\x04\x92\xa1\x84\x57\x29\x0b\x00\x8b\x31\x2a\xad\xb1\x69\x0d\x09\x59\xa3\xb6\x81\x9d\xc7\x05\xf5\xa9\x09\xe2\x9a\x3c\x75\x8d\x58\x38\xf2\x46\x0b\x65\x3e\x27\xcf\x95\x0e\x7a\xae\x8d\xe6\x4d\x82\xe6\x3a\xee\x43\xbf\x4c\xa1\xd5\xc6\x62\xe3\xd4\x3c\x1f\x9d\x4b\xc8\x38\x37\x4f\x3b\x2d\x39\xf7\xf9\x9f\x72\xce\x75\x3a\x19\x42\xd4\xa4\x17\x35\x0b\x6d\x15\xad\xbf\x26\xde\x7c\x33\xb8\x1c\x8b\xbc\x22\x1f\xb4\xb3\xa4\xc4\x69\x98\xa3\xed\x49\xc0\x47\xc3\xf6\x6e\x8f\x21\x7f\xe0\x88\xf9\x66\xf0\x55\x47\x8e\x6b\x3d\x05\xbd\x88\x4e\x9d\x37\x82\xd6\xad\xf6\xc8\xda\xd9\x12\x5e\x4c\x9b\x02\xc0\xd3\x22\x7d\x75\xe1\x9c\x30\xf0\xf9\x2c\x75\x69\x3a\xb0\xef\x2c\x64\x14\xd2\x35\x31\x50\x48\xa6\x6f\xff\xba\xfd\xbd\x90\xa8\xc8\xca\x64\x83\x4a\xc5\xbd\xa1\x25\x5d\x83\xda\x96\xb0\x0b\xfd\x7c\xc0\x75\xbe\xc5\xe5\x89\xc9\x46\x20\xa2\x25\xaf\x9d\x2a\xe1\xff\x45\x72\x89\x11\x73\x3e\x81\xd1\x73\xcf\x4f\x09\xd3\x62\x6c\xb5\x45\x86\x66\x90\x29\x70\x09\xb3\xf4\x15\x7a\x7a\x66\xa3\x61\xbe\x56\x2f\xc2\xb0\x92\x0f\x80\x5f\x3f\xdc\xbd\x7e\xff\xfa\xdd\x2f\xb7\x1f\xc5\xcd\xfd\xbb\x9b\x4f\x37\x7f\xfc\x56\x00\x48\xa3\xc9\x72\x8e\xdc\x60\x60\xf2\xf9\x37\x00\x59\xd5\x3a\x6d\x59\x2c\xbc\xeb\xda\x3e\x4f\x80\x60\x70\x45\x27\x6c\x56\x68\xb4\x42\x76\x8f\xc7\x1a\xfa\xe0\x20\xaf\xe9\x5e\x5e\xf1\xab\x22\xe4\xce\xf7\x87\x7a\x17\x88\x19\x45\x8b\x3e\x90\x2f\x81\x7d\x47\x05\x80\xf6\x9e\x52\xab\xc4\xae\x52\x3a\x30\x46\x9e\x60\x76\x15\x55\x8c\x38\x8a\x58\x09\x1f\x6f\xee\xff\xbc\xfb\xf4\x7e\x9b\xbf\x78\x7b\x77\xf3\xe9\xc3\x6d\x91\x45\x53\xf4\xd2\x71\xd0\x4d\xd2\xbb\x1d\x7a\x3c\xda\x05\xf5\xaa\x77\x55\x54\x9d\x95\x91\x4e\x34\x22\x83\x3f\x3b\x2b\x82\x5a\xa6\xfe\xe8\xb8\x16\x35\xa1\x8a\x20\x53\xbe\x69\x85\xdd\x92\x6c\xbf\xb0\xd7\xe7\xdb\x7e\xaa\x99\xdb\x50\x4e\x26\xb6\xe2\x73\x6c\xf5\x85\x74\xda\xce\x31\xd0\x85\x74\xcd\x04\x5b\x3d\xa1\x75\x3b\xd9\x75\x9d\x0c\x88\x27\x19\xf1\x64\x35\x3b\x2a\xdd\x9e\x02\x57\x9d\xe9\x4b\x16\xc8\xaf\x32\xd9\x73\x6d\xd5\x78\xfc\xf4\x22\xfd\x95\xaf\xa6\xaf\xa6\x45\x30\x38\xa6\xde\x6b\x86\x22\xc3\x58\xc2\xd5\x74\xaf\xe3\x86\xe5\x59\xba\x5f\xb4\x6e\x49\x32\xa9\x84\xa0\x32\x2e\xeb\xfb\x39\x34\xce\x6a\x76\x3e\xfd\x6e\x9d\x31\x94\x7f\xe6\x01\xd1\x7f\xc4\xab\x67\x70\x49\x93\x6d\xdf\xff\x1c\xf3\x89\x72\xec\x2a\x11\x36\x56\x0a\xeb\xd4\x2e\xc9\x09\x0a\xeb\x58\xe8\x59\xfa\xd5\x44\x86\xac\x24\x61\x30\x70\xd6\x89\x12\x66\xd7\x4d\xb1\x07\x67\x8e\x72\x59\xe9\x08\x22\x77\x16\x4a\xd6\xab\xa8\xfe\x9e\xd8\x6f\xe2\xac\xd2\x4d\xd7\x08\x64\xa6\xa6\xe5\x50\xc2\x8b\x7d\xb3\x20\x6b\x52\x9d\x21\xc1\xae\xbf\xb5\xfd\xd8\x28\xe1\xba\x39\x30\xcd\xdb\x4e\x48\xe3\x02\x8d\x76\xb9\x5a\x11\xca\x38\x4b\x2f\xaf\xfb\x49\x26\x6b\x92\xcb\x7c\x6d\x86\x29\xdb\xef\xc4\x31\xea\xa9\xf5\x4e\x52\x08\xa4\xa2\x98\xe4\x71\x1c\xf5\x2d\x4f\xc1\xae\x11\xd2\x59\xd9\x79\x1f\x2f\x19\xad\xd9\xa3\x64\x17\x7b\xe1\xf2\x2a\x59\x30\x86\xa5\x30\x3a\xa4\x51\x5b\x61\x67\x38\x2d\x0f\x15\x12\x8a\xa4\x8e\xca\x37\x82\xbd\x6c\xf6\x2d\x68\x4d\xb2\xe3\x7d\x93\xab\x7a\xdf\x46\xab\xa8\x77\xbc\x29\xb7\x4b\x17\x63\xd9\x23\x07\x64\x65\xdd\x60\x6c\xd3\x67\x27\x41\xd6\xda\x8c\x1d\xbb\x93\xde\x43\x8e\x2f\x7b\xc7\xe7\x2b\xe5\x58\xbd\x28\x27\xde\x85\x20\x0e\xb4\xf7\x64\x3d\xaf\xbf\x63\x53\xcb\xa5\xab\xaa\xc3\xd7\xe0\x7e\xb7\xcf\x1e\x6a\xf6\xd9\xd0\xec\x2d\x7a\x34\x86\x8c\x0e\x4d\x94\xdc\x47\x0a\xde\xa7\xde\x8f\x57\x49\x96\xe3\x3c\xcf\xe2\xf7\x23\xe8\x38\x20\x20\x3e\xaa\xb3\xde\x7d\x25\x15\x3f\xfd\x48\x2a\xa6\xff\xe6\xe2\xfa\x61\xdd\x49\x1b\x15\x6a\xe3\x56\xe4\x05\xd9\x38\x9c\xd5\x76\xf8\x3e\x85\xa4\xef\x4f\xc3\x38\x64\xf2\x88\x39\xa8\x7e\x4d\xe8\x79\x4e\xf8\x48\x39\xff\x3b\x41\x97\xdf\x8c\xa0\x87\x2f\xc6\x23\x74\x54\x71\xee\xc5\x51\x59\x42\x85\x26\xd0\x76\x6a\xf4\xff\x94\x44\xc0\x71\x90\xc6\xc1\x21\x37\xd2\xec\x5c\xc4\x23\x4c\x86\xfc\x06\x16\xd2\x13\xf2\x31\xc6\x06\x83\x2d\x90\xf1\xd0\x67\xeb\x82\xed\xf3\x62\x78\x5c\x7c\x73\x3d\xfc\x5a\x8e\x2f\x9f\x76\x07\x4f\x5c\xc2\x67\x2b\xe8\xce\x23\x6d\x78\x57\xa6\xf7\xda\x11\x40\xff\x04\x00\x00\xff\xff\x9f\x64\x17\x84\xa7\x10\x00\x00")

func configChainstorageEthereumGoerliBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumGoerliBaseYml,
		"config/chainstorage/ethereum/goerli/base.yml",
	)
}

func configChainstorageEthereumGoerliBaseYml() (*asset, error) {
	bytes, err := configChainstorageEthereumGoerliBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/goerli/base.yml", size: 4263, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumGoerliDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xbd\x6e\x83\x30\x14\xc5\xf1\xdd\x4f\x71\x95\xce\x20\x94\x54\xaa\xe2\x39\x1d\xba\x34\x0b\x3b\xba\xd8\x27\xd8\xc2\x1f\xc8\xbe\x90\xf6\xed\x2b\x50\x95\x73\xd6\xbf\x7e\x6f\xd4\x3b\x5f\xe9\xe1\x03\xc8\x57\x9a\x90\x50\x58\x60\x69\xfc\xa5\x53\xe4\x19\x64\x72\x7a\xf8\xe9\xd4\xd2\xed\x4e\xdf\xf7\x9e\x3e\x6f\x5f\x7d\xab\xf8\x59\xb5\x22\xe2\x67\x1d\xd8\x98\xbc\x26\xd1\x64\xb1\x21\xe4\x25\x22\x89\x22\x1a\x57\x33\x43\x34\xe1\x87\xe3\x12\xd0\x18\xc7\x3e\x55\xc9\x85\x27\x34\x10\x87\x82\x35\x36\x53\x46\x09\xbe\xb1\xd8\x94\x61\x8b\x64\x70\xb0\xd6\x16\xd4\xaa\x49\x10\x97\x5c\x38\xec\x41\xfb\x2f\xb5\x26\x47\xfd\x71\xbe\x5c\xd4\x41\xee\xfd\x18\xb2\x99\x87\x2a\x5c\x64\x70\xf0\x93\x13\x4d\xef\xe7\x6e\x9f\xaa\x28\x1b\xca\x51\xf9\x64\x87\x17\xdd\xb5\xc7\xf5\xb5\xbb\x76\xea\x2f\x00\x00\xff\xff\x30\xbe\x0b\x83\x07\x01\x00\x00")

func configChainstorageEthereumGoerliDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumGoerliDevelopmentYml,
		"config/chainstorage/ethereum/goerli/development.yml",
	)
}

func configChainstorageEthereumGoerliDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageEthereumGoerliDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/goerli/development.yml", size: 263, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumGoerliLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageEthereumGoerliLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumGoerliLocalYml,
		"config/chainstorage/ethereum/goerli/local.yml",
	)
}

func configChainstorageEthereumGoerliLocalYml() (*asset, error) {
	bytes, err := configChainstorageEthereumGoerliLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/goerli/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumGoerliProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x4e\xc3\x30\x18\xc4\xf1\xdd\x4f\x71\x2a\x73\xac\x88\x0e\xa8\x9e\xcb\xc0\x42\x97\xec\xd5\x17\xfb\x9a\x58\x8d\xed\xe8\xb3\x43\xe1\xed\x51\x23\x84\x6e\xbd\xff\xef\x05\xc3\x1c\x2b\x6e\x71\x21\x62\xc5\xc4\x4c\x95\xc6\x80\xf1\x07\x87\x24\x77\xc2\x97\x7c\x8b\xd3\xc1\xe2\x7c\xc1\xe7\x65\xc0\xfb\xf9\x63\xb0\x46\x1e\xd5\x19\x40\x1e\xf5\x2a\xde\x97\x2d\x37\x87\x55\x4b\xd8\x7c\x8b\x25\x1b\x60\xdc\xfc\x9d\xcd\x81\xdf\x92\xd6\x85\x9d\x9f\x25\xe6\xda\x8a\xca\xc4\x8e\x6d\xa6\x72\x4b\xdd\x54\xa8\x4b\xec\x9e\xa5\xf1\x12\x98\x3d\x77\x36\x04\x65\xad\x0e\x8d\x69\x2d\x2a\x8b\xfd\x63\xac\x2f\xc9\xbd\xbd\x1e\x8f\xa6\x52\xbf\xa8\xcf\xf3\x18\x73\xb8\xfe\x17\xbd\xdd\xe7\x4e\xfd\xa9\x37\xbf\x01\x00\x00\xff\xff\xef\x4b\x61\x54\xde\x00\x00\x00")

func configChainstorageEthereumGoerliProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumGoerliProductionYml,
		"config/chainstorage/ethereum/goerli/production.yml",
	)
}

func configChainstorageEthereumGoerliProductionYml() (*asset, error) {
	bytes, err := configChainstorageEthereumGoerliProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/goerli/production.yml", size: 222, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x4d\x6f\x1b\x37\x10\xbd\xef\xaf\x18\xb8\x67\x5b\x1f\xb6\xd2\x66\x81\x1c\xd2\xc4\x68\x8c\x34\x76\x11\xb8\x28\xd0\x0b\x31\x22\x67\xb5\x84\xb8\xe4\x86\x9c\x55\xa4\xfe\xfa\x82\x5c\x4a\x2b\xf9\x4b\x0e\xd2\xd4\xf0\x65\x45\x0e\x67\x86\xf3\xde\xcc\xa3\x7f\x82\xdb\x5a\x07\xa8\xb4\x21\xd0\x01\x16\x64\xc9\x23\x93\x82\xf9\x06\x4e\x1a\x5c\x12\x48\x67\x2b\xbd\x38\x39\x83\xf7\x37\x70\x7d\x73\x0b\x97\xef\xaf\x6e\xcf\x0a\x6c\x75\x59\x00\x34\xb8\x16\xb6\x6b\xc4\xdc\x38\xb9\x14\xd1\x4b\x28\x61\x32\x1e\x8f\xef\xee\x85\x12\x66\x71\x31\x2e\x7c\x75\x7e\x49\x3e\x19\x16\x00\x81\x3d\x61\xa3\xed\x42\xcc\x91\x65\x2d\x82\xfe\x87\xb2\xf1\xb0\xa5\x2d\x93\x5f\xa1\x29\x61\x12\x0e\x36\x52\x10\x27\x68\x45\x96\x05\xeb\x86\xa2\xd7\xa6\xc0\xaf\x21\xa6\x87\x5f\x83\x40\x29\x5d\x67\xb9\x04\x45\x2b\x32\xae\x6d\xc8\x72\x01\x30\xef\xe4\x92\xb8\x84\x93\x93\x02\x40\x99\x2f\xd1\x1c\x40\x91\xc1\x8d\x08\x24\x43\x09\xaf\xd3\x2d\x00\x2c\x46\xaf\xb4\xc6\xa6\x35\x24\x64\x8d\xda\x06\x76\x1e\x17\x94\xaf\x26\x88\x6b\xf2\xd4\x35\xa2\x41\x6d\x2d\xb1\x50\xe6\x4b\x3a\xba\xd2\x41\xcf\xb5\xd1\xbc\x49\xb9\xb9\x8e\xb3\xef\x57\xc9\xb7\xda\x58\x6c\x9c\x9a\xf7\xb1\xfb\x1a\x32\xce\xcd\x37\x86\x4b\xa7\x73\x05\x8e\x9d\xee\x2b\x75\xdc\x87\xa8\x49\x2f\x6a\x16\xda\x2a\x5a\x3f\xc7\xe1\x7c\xb3\x3d\xf2\xa0\xeb\x15\xf9\xa0\x9d\x25\x25\x8e\x27\x3a\xd8\x1e\x4f\xf9\x41\xbf\xf9\xdc\x53\xb9\x3f\x12\x63\xbe\xd9\x9e\x55\x0f\xc5\x6b\x3d\x05\xbd\x88\xa7\x3a\x6f\x04\xad\x5b\xed\x91\xb5\xb3\x25\x9c\x8f\x9b\x02\xc0\xd3\x22\xfd\xea\xc2\x29\x61\xe0\xd3\x49\xe2\x6a\x8a\x98\xf9\x85\x8c\x42\xba\x26\x3a\x0a\xc9\xf4\xb7\xbf\xaf\xfe\x28\x24\x2a\xb2\x32\xd9\xa0\x52\x71\x6f\x4b\x4c\x17\x83\x97\xb0\x9f\xfb\xe9\x36\xb1\xd3\x21\x31\x4f\x4c\x36\x66\x22\x5a\xf2\xda\xa9\x12\x7e\x2e\xd2\x99\xe8\xb2\xbf\x51\x60\xf4\x9c\x31\x2a\x61\x5c\x0c\x84\x5b\xf4\xb9\x19\x64\x0a\x5c\xc2\x34\xfd\x0a\x19\xa1\xe9\x60\xd8\x77\xd7\x79\xd8\xae\xf4\x01\xe0\xd7\xdf\x6f\xde\x7d\x7c\xf7\xe1\xed\xd5\xb5\xb8\xbc\xfd\x70\xf9\xf9\xf2\xcf\x4f\x05\x80\x34\x9a\x2c\xf7\x9e\x1b\x0c\x4c\xbe\xff\x06\x20\xab\x5a\xa7\x2d\x8b\x85\x77\x5d\x9b\x2f\x0a\x10\x0c\xae\xe8\x88\xcd\x0a\x8d\x56\xc8\xee\x69\x5f\x5b\x26\xdc\xb9\xd7\xe4\xe0\x5e\xb1\x00\x15\x21\x77\x3e\x07\xf5\x2e\x10\x33\x8a\x16\x7d\x20\x5f\x02\xfb\x8e\x0a\x00\xed\x3d\x25\xb2\x44\x5e\x29\x1d\x18\x23\x50\x30\xb9\x88\xc3\x8c\x38\xce\xb2\x12\xae\x2f\x6f\xff\xba\xf9\xfc\x71\x77\x7f\xf1\xe9\xed\xd5\xf5\xf5\xe5\x6d\xd1\x0f\x4f\x91\x47\xc8\x5d\x42\x49\xef\xf6\x00\xf2\x68\x17\x94\xc7\xdf\x45\x51\x75\x56\x46\x40\xd1\x88\x3e\xfd\x93\x93\x22\xa8\x65\xa2\x48\xc7\xb5\xa8\x09\x55\x4c\x33\xdd\x38\xad\xb0\x5b\x92\xcd\x0b\x07\x5c\xdf\x51\xaa\x66\x6e\x43\x39\x1a\xd9\x8a\x4f\xb1\xd5\x67\xd2\x69\x3b\xc7\x40\x67\xd2\x35\x23\x6c\xf5\x88\xd6\xed\x68\xff\xe8\x68\x9b\xf2\x28\xa7\x3c\x5a\x4d\x1e\x1c\xe2\x9e\x02\x57\x9d\xc9\x55\x0b\xe4\x57\x3d\xde\x73\x6d\xd5\x10\x7f\x7c\x96\xfe\xca\xd7\xe3\xd7\xe3\x22\x18\x1c\xee\x9e\x47\x87\x22\xc3\x98\x5d\x0e\xa4\xdb\x2e\x4f\x63\x8b\xd1\xba\x25\xc9\xa4\x52\x02\x95\x71\xfd\xa0\x3f\x85\xc6\x59\xcd\xce\xa7\xef\xd6\x19\x43\xfd\x67\xaf\x14\x77\x7e\x8c\x76\x0c\x79\x33\x49\x1b\xb1\x2d\x0d\x2e\x69\xb4\x6b\x89\x37\xd3\xb4\x21\xbd\x0b\x41\xec\x68\x57\x00\xc4\x19\xee\x2a\x11\x36\x56\x0a\xeb\xd4\x01\x27\x62\xda\xac\x23\x2a\x93\xf4\xd5\x44\x38\xad\x24\x61\x30\x70\x3f\x58\x4a\x38\x6f\x8a\x83\xd4\xe7\x28\x97\x95\x8e\x09\xf7\x3c\x44\xc9\x7a\x15\x15\xc3\x13\xfb\x4d\x14\x38\xdd\x74\x8d\x40\x66\x6a\x5a\x0e\x25\x9c\x1f\x9a\x05\x59\x93\xea\x0c\x09\x76\xb9\xc7\xb3\xd4\x94\x30\x6b\xee\x98\xf6\xdb\x4e\x48\xe3\x02\x0d\x76\x93\x71\x6f\xb8\x2f\xc0\xd3\x59\x96\x3f\x59\x93\x5c\xf6\x4d\xb6\x95\xe6\xbc\x13\xb5\xd7\x53\xeb\x9d\xa4\x10\x48\xc5\xd1\xd3\x6b\x78\x1c\x87\xbd\x74\x76\x8d\x90\xce\xca\xce\xfb\x58\x70\x5a\xb3\x47\xc9\x2e\xd2\x66\x7a\x91\x2c\x18\xc3\x52\x18\x1d\x92\x3e\x57\xd8\x99\x7e\xac\x6f\x2b\x24\x14\x49\x1d\x07\xe5\x90\xec\xb4\x39\xb4\xa0\x35\xc9\x8e\x0f\x4d\x2e\xea\x43\x1b\xad\xe2\x74\xe4\x4d\xb9\x5b\x3a\x1b\xca\x1e\x31\x20\x2b\xeb\x06\x23\xa3\x5f\x1c\x04\x59\x6b\x33\xb0\x7b\xef\x7a\x8f\x1d\x7c\x95\x0f\xbe\x5c\x29\x87\xea\xc5\xd1\x73\xd8\x32\xcf\xac\xe7\xec\x07\x92\x5a\x2e\x5d\x55\xed\x3d\x21\x67\xe3\x71\x13\xee\x11\x7e\x32\x7e\x8c\xf0\xbb\x9d\x16\x3d\x1a\x43\x46\x87\x26\x8e\xe8\x27\x8a\x9e\xaf\x9f\x05\x59\x92\xe5\xf8\x04\xc8\x12\xb4\xb7\x79\x28\xca\x93\x59\xec\xad\x1c\xec\xc7\xe3\x76\x7f\xb8\xe5\x21\xfa\x4c\xcc\x7e\xf9\x1f\x31\x9b\x8c\xef\x23\x36\x7b\x7c\x40\xa5\x8d\x0a\xb5\x71\x2b\xf2\x82\x6c\xd4\x7c\xb5\xd3\xf4\x6f\x41\xf2\xc7\xc3\x30\x28\x57\xaf\x5b\x77\xaa\x5f\x13\x7a\x9e\x13\x3e\x51\xce\xef\x07\x68\xfa\xdd\x00\x9d\x87\x23\xcd\xf3\x04\x1a\x55\x94\xc7\xa8\xa8\x25\x54\x68\x02\xed\xd4\x25\xff\xc3\x13\xf3\x8d\x7a\x1b\x05\x46\x6e\xa4\xe9\xdd\xde\x07\x72\xd2\xaf\x85\xfe\x6d\x2d\xa4\x27\xe4\x87\x10\xdb\x1a\xec\x32\x19\xa2\xbe\x18\x0b\x76\x6f\x96\xed\x23\xe5\x3f\x1f\x9c\xcf\xc5\x78\x7a\x04\xe2\xc3\x16\x3c\xd2\x83\x2f\x56\xcf\xbd\x87\xdf\xf6\xa9\x9a\x5e\x74\x0f\x24\xf4\x6f\x00\x00\x00\xff\xff\x22\xd8\x6d\x64\x04\x11\x00\x00")

func configChainstorageEthereumMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumMainnetBaseYml,
		"config/chainstorage/ethereum/mainnet/base.yml",
	)
}

func configChainstorageEthereumMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageEthereumMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/mainnet/base.yml", size: 4356, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x6e\x83\x30\x10\xc6\xf1\xdd\x4f\x71\x4a\x67\x10\x4a\x86\x2a\x9e\xd3\xa1\x4b\xb3\xb0\xa3\xc3\xfe\x02\x56\xec\x33\xb2\x0f\xd2\xbe\x7d\x05\xaa\xaa\x9b\xee\xd3\x5f\xbf\x37\xea\xe7\x50\xe9\x11\x22\x28\x54\x9a\x20\x28\xac\xf0\x34\xfe\xd0\x29\xf1\x13\xe4\xb2\x3c\xc2\x74\x6a\xe9\x76\xa7\xaf\x7b\x4f\x1f\xb7\xcf\xbe\x35\xfc\xaa\xd6\x10\xf1\xab\x0e\xec\x5c\x5e\x45\x2d\x79\x6c\x88\x79\x49\x10\x35\x44\xe3\xea\x9e\x50\x4b\xf8\xe6\xb4\x44\x34\x6e\xe6\x20\x55\x73\xe1\x09\x0d\x74\x46\xc1\x9a\x9a\xc4\x41\x04\xda\x78\x6c\xc6\xb1\x87\x38\x1c\xae\xf7\x05\xb5\x5a\x52\xa4\x25\x17\x8e\x7b\xd0\xfe\x51\xad\xcb\xc9\xbe\x9f\x2f\x17\x73\x98\x7b\x8f\x0d\xa2\x83\xf2\xb4\x3f\x44\x91\x15\x55\x2d\x9d\x4d\x45\xd9\x50\xf6\x75\x0c\xe2\x87\x7f\xb7\x6b\x8f\xb3\xd7\xee\xda\x99\xdf\x00\x00\x00\xff\xff\x09\xce\xe9\x04\x05\x01\x00\x00")

func configChainstorageEthereumMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumMainnetDevelopmentYml,
		"config/chainstorage/ethereum/mainnet/development.yml",
	)
}

func configChainstorageEthereumMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageEthereumMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/mainnet/development.yml", size: 261, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageEthereumMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumMainnetLocalYml,
		"config/chainstorage/ethereum/mainnet/local.yml",
	)
}

func configChainstorageEthereumMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageEthereumMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x4e\xc3\x30\x18\xc4\xf1\xdd\x4f\x71\x2a\x73\xac\x88\x0e\xa8\x9e\xcb\xc0\x42\x97\xec\xd5\x17\xfb\x9a\x58\x8d\x3f\x47\xb6\x43\xe1\xed\x51\x23\x84\x6e\xbd\xff\xef\x05\xc3\x1c\x2b\x6e\x71\x21\x62\xc5\x44\x65\x91\xc6\x80\xf1\x07\x87\x24\x77\xc2\x67\xbd\xc5\xe9\x60\x71\xbe\xe0\xf3\x32\xe0\xfd\xfc\x31\x58\x23\x8f\xea\x0c\x20\x8f\x7a\x15\xef\xf3\xa6\xcd\x61\x2d\x39\x6c\xbe\xc5\xac\x06\x18\x37\x7f\x67\x73\xe0\xb7\xa4\x75\x61\xe7\x67\x89\x5a\x5b\x2e\x32\xb1\x63\x9b\x59\xb8\xa5\x2e\x49\x54\x65\xeb\x9e\xa9\xf1\x12\xa8\x9e\xbb\x1b\x42\x61\xad\x0e\x8d\x69\xcd\x45\x16\xfb\xe7\x58\x9f\x93\x7b\x7b\x3d\x1e\x4d\x65\xf9\x62\x79\x9e\xc7\xa8\xe1\xfa\x5f\xf4\x76\x9f\x3b\xf5\xa7\xde\xfc\x06\x00\x00\xff\xff\xae\x16\x62\xef\xdf\x00\x00\x00")

func configChainstorageEthereumMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumMainnetProductionYml,
		"config/chainstorage/ethereum/mainnet/production.yml",
	)
}

func configChainstorageEthereumMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageEthereumMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/mainnet/production.yml", size: 223, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageOptimismMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x4d\x6f\x1b\x37\x13\xbe\xef\xaf\x20\xfc\x9e\x6d\x49\x4e\x9c\xb7\xd9\x5b\x9a\x04\xad\x91\xc6\x0e\x5a\x03\x05\x7a\x21\x66\xc9\x59\x2d\x21\x7e\x6c\x38\xb3\xb2\xd5\x5f\x5f\x70\xc9\xb5\x24\x47\x8e\x1c\x04\x89\xa1\x8b\x44\x0e\xe7\xeb\x79\xf8\x0c\xf5\x3f\x71\xd3\x19\x12\xad\xb1\x28\x0c\x89\x25\x7a\x8c\xc0\xa8\x45\xb3\x11\x27\x0e\x56\x28\x54\xf0\xad\x59\x9e\x9c\x89\x77\xd7\xe2\xea\xfa\x46\xbc\x7f\x77\x79\x73\x56\x41\x6f\xea\x4a\x08\x07\x77\xd2\x0f\x4e\x36\x36\xa8\x95\x4c\x5e\xa8\x16\x8b\xf9\x7c\xfe\x70\x8f\x6a\x71\x91\x16\xd3\xc2\x6d\x88\x2b\x8c\xa3\x61\x25\x04\x71\x44\x70\xc6\x2f\x65\x03\xac\x3a\x49\xe6\x5f\x2c\xc6\xdb\x2d\xe3\x19\xe3\x1a\x6c\x2d\x16\xb4\xb7\x31\x06\x09\x12\xd7\xe8\x59\xb2\x71\x98\xbc\xba\x0a\x6e\x29\xa5\x07\xb7\x24\x41\xa9\x30\x78\xae\x85\xc6\x35\xda\xd0\x3b\xf4\x5c\x09\xd1\x0c\x6a\x85\x5c\x8b\x93\x93\x4a\x08\x6d\x3f\x27\x73\x21\x34\x5a\xd8\x48\x42\x45\xb5\x78\x3d\x56\x21\x84\x87\xe4\x15\xef\xc0\xf5\x16\xa5\xea\xc0\x78\xe2\x10\x61\x89\xa5\x34\x19\x7a\x36\xce\x90\x93\x0e\x8c\xf7\xc8\x52\xdb\xcf\xe3\xd1\xb5\x21\xd3\x18\x6b\x78\x33\xe6\x16\x06\x2e\xbe\x5f\x8d\xbe\xf5\xc6\x83\x0b\xba\xc9\xb1\x73\x0f\x19\x1a\xfb\x8d\xe1\xc6\xd3\xa5\x03\xc7\x4e\xe7\x4e\x1d\xf7\x21\x3b\x34\xcb\x8e\xa5\xf1\x1a\xef\x9e\xe2\xb0\xd9\x4c\x47\x0e\xba\x5e\x63\x24\x13\x3c\x6a\x79\x3c\xd1\xad\xed\xf1\x94\x0f\xfa\x2d\xe7\xbe\x96\xfb\x23\x31\x9a\xcd\x74\x56\x1f\x8a\xd7\x47\x24\xb3\x4c\xa7\x86\x68\x25\xde\xf5\x26\x02\x9b\xe0\x6b\xf1\x62\xee\x2a\x21\x22\x2e\xc7\x5f\x03\x9d\x22\x10\x9f\x2e\x46\xae\x8e\x11\x0b\xbf\x80\x41\xaa\xe0\x92\x23\x1a\x4d\x7f\xfb\xe7\xf2\x53\xa5\x40\xa3\x57\xa3\x0d\x68\x9d\xf6\x26\x62\x86\x14\xbc\x16\xbb\xb9\x9f\x4e\x89\x9d\x6e\x13\x8b\xc8\xe8\x53\x26\xb2\xc7\x68\x82\xae\xc5\xff\xab\xf1\x4c\x72\x99\x2b\x22\x86\xc8\x05\xa3\x5a\xcc\xab\x2d\xe1\x96\x39\x37\x0b\x8c\xc4\xb5\x58\x8c\xbf\xa8\x20\xb4\xd8\x1a\x8e\xb7\xeb\xdc\x4d\x0b\xd9\xbf\xf8\xf5\x8f\xeb\xb7\x1f\xde\xfe\xfe\xe6\xf2\x4a\x5e\x7f\xba\xb9\xfc\x78\xf9\xd7\xc7\x4a\x08\x65\x0d\x7a\xce\x8e\x1d\x10\x63\xcc\xdf\x85\x40\xaf\xfb\x60\x3c\xcb\x65\x0c\x43\x5f\xea\x14\x82\x2c\xac\xf1\x88\xcd\x1a\xac\xd1\xc0\xe1\xeb\xbe\x26\x22\x1c\x2d\xab\x45\xe0\x21\x96\xa0\x31\x10\x32\x83\xec\x21\x12\xc6\x5a\xb4\x60\x09\x2b\x21\x4c\x8c\x38\x92\x25\xf1\x4a\x1b\x62\x48\x40\x25\x8d\x4b\x6a\x86\x9c\xc4\xac\x16\x57\xef\x6f\xfe\xbe\xfe\xf3\xc3\x7d\x07\xe4\xc7\x37\x97\x57\x57\xef\x6f\xaa\xac\x9e\x32\x6b\xc8\x17\x8c\x52\x31\xec\x20\x14\xc1\x2f\xb1\xe8\xdf\xcb\x04\xbe\xa1\x91\xcd\x29\x44\x6b\xc3\x6d\x82\x90\x07\xaa\x05\xc7\x01\xab\x76\xf0\x2a\x21\x0e\x56\xe6\x02\x4f\x4e\x2a\xd2\xab\x91\x43\x03\x77\xb2\x43\xd0\xa9\x90\xb1\x27\xe3\x0a\x87\x15\xfa\xb2\xb0\x77\x19\xee\x39\xd7\x31\xf7\x54\xcf\x66\xbe\xe5\x53\xe8\xcd\x99\x0a\xc6\x37\x40\x78\xa6\x82\x9b\x41\x6f\x66\x78\xd7\xcf\x76\x8f\xce\xa6\x92\x66\xa5\xa4\xd9\x7a\x71\x50\xe5\x23\x12\xb7\x83\x2d\xb9\x13\xc6\x75\x66\x44\x63\xbc\xde\xc6\x9f\x9f\x8d\x9f\xfa\xf5\xfc\xf5\xbc\x22\x0b\xdb\xde\x14\x6d\xd1\x68\x19\xa6\xee\x6f\x69\x39\xad\x5f\x24\x72\x26\x95\x0d\xad\xa4\x8d\x57\xd2\x07\xfd\x25\x6a\x6c\x52\x5f\x5e\x8c\xdf\x5c\x6a\xb8\x57\x28\x2d\x10\xe7\xbb\x9f\x27\xc8\xd4\xf4\x71\x8e\x34\xa0\x56\xad\xb1\x76\x62\x31\x28\x36\xeb\xa4\xea\x11\x39\x6e\xd2\x10\x32\x6e\x70\x12\x98\xd1\xf5\x4c\xd9\xf9\x8e\x19\xa9\x0e\xf5\x60\x51\x72\x28\xf7\xb0\x8c\x83\x92\xf2\xae\x69\xde\x0e\x52\xd9\x40\xb8\xb5\x3b\x9f\x67\xc3\xdd\x21\x79\x7e\x51\x46\x94\xea\x50\xad\xf2\x4d\x98\xc6\x67\xd9\x49\xf3\x31\x62\x1f\x83\x42\x22\xd4\x49\x1e\xf2\x9c\x4d\x92\x95\xc7\xdb\xe0\xa4\x0a\x5e\x0d\x31\xa6\x7b\x83\x77\x1c\x41\x71\xc8\xc8\x65\x13\x06\x5a\x49\x6b\x68\x1c\xa2\x2d\x0c\x36\x6b\xef\x3d\x2f\x35\x2a\x93\xd4\x6c\x27\x5b\xb7\x6f\x81\x77\xa8\x06\xde\x37\x79\xd9\xed\xdb\x18\x9d\x24\x8c\x37\xf5\xfd\xd2\xd9\xb6\xef\x09\x04\xf4\xaa\x73\x90\x58\xf5\x6c\x28\x2c\x0a\x0a\xaa\x33\x56\xcb\x03\xe5\x3d\x76\xf0\x55\x39\xf8\x7c\xad\xdc\x76\x2f\x5d\xff\x18\x88\xe4\x03\x3d\x3d\xda\xcf\x8b\x1f\xd6\xcf\x04\x74\x68\xdb\x87\xef\xbc\x7d\xba\x2f\x1e\x63\xfb\x62\x62\x7b\x0f\x11\xac\x45\x6b\xc8\x65\x09\x7d\xb4\xe1\xa5\xf4\x32\x31\x15\x7a\x4e\x33\x3a\x6b\xd5\xcf\x80\xe3\x01\x00\xe9\xb9\x1c\xbc\x79\x3a\x14\xbf\xfc\x4c\x28\xe6\x5f\x62\x71\xf1\xb8\xf0\x7c\x23\x12\x3f\xbe\xd7\xa5\xb3\xe9\xfd\x16\x0e\x68\x78\x87\x10\xb9\x41\xf8\x4a\xcf\xbe\x1f\x85\xf3\xef\x46\xe1\x05\x1d\x21\x7f\x9b\x26\x58\x9a\x7a\xdb\xc7\x4b\xd6\xff\xf2\xb7\x21\x25\x95\x66\x62\x1a\x01\x6a\xa3\xec\xce\x8d\x3a\x80\x16\xe5\x07\xaa\x54\x11\x81\x0f\xa1\x32\x19\xa0\x4f\x8f\x14\xbd\x1b\xf4\xd9\x90\xce\xf8\xde\xff\x41\x7c\xf2\xa0\x78\xba\xb0\x3d\x15\xc7\xf3\x23\x30\xee\xdf\xa5\x23\x97\xe9\xd9\xfa\x39\xb5\xb1\xca\x66\xe9\x39\x57\x09\x71\x7a\x28\xa1\xff\x02\x00\x00\xff\xff\x6f\x7e\xcf\x46\x49\x10\x00\x00")

func configChainstorageOptimismMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageOptimismMainnetBaseYml,
		"config/chainstorage/optimism/mainnet/base.yml",
	)
}

func configChainstorageOptimismMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageOptimismMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/optimism/mainnet/base.yml", size: 4169, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageOptimismMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x6f\x83\x30\x10\xc5\xf1\xdd\x9f\xe2\x94\xce\x20\x54\x86\x28\x9e\xd3\xa1\x4b\xb3\xb0\xa3\xc3\x7e\x01\x0b\x6c\x23\xdf\x85\xb4\xdf\xbe\x8a\x55\xf5\xbd\xf5\xaf\xdf\x1b\x0d\x4b\x10\xba\x87\x0d\x14\x84\x66\x24\x14\x56\x78\x9a\x7e\xe8\x14\x79\x05\xb9\x9c\xee\x61\x3e\xb5\x74\xbd\xd1\xd7\x6d\xa0\x8f\xeb\xe7\xd0\x1a\x7e\x8a\x35\x44\xfc\x94\x91\x9d\xcb\x8f\xa4\x96\x3c\x0e\x6c\x79\x8f\x48\x6a\x88\xa6\x87\x5b\xa1\x96\xf0\xcd\x71\xdf\xd0\xb8\x85\x43\x12\xcd\x85\x67\x34\x79\xd7\x10\x83\xc4\x26\x72\x48\x09\xda\x78\x1c\xc6\xb1\x47\x72\xa8\xae\xf7\x05\x22\x96\x14\x71\xcf\x85\xb7\x57\xd0\xfe\x51\xad\xcb\xd1\x9e\xdf\xfb\xde\x54\xf3\xd5\x4f\x5b\x76\xeb\x28\xca\x45\xc7\x05\x61\x5e\xd4\x52\x7f\xee\xea\x8c\xa0\x1c\x28\x35\x0b\xc9\x8f\xff\x76\xd7\xd6\xdb\x4b\x77\xe9\xcc\x6f\x00\x00\x00\xff\xff\x4b\x76\x14\xbe\x09\x01\x00\x00")

func configChainstorageOptimismMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageOptimismMainnetDevelopmentYml,
		"config/chainstorage/optimism/mainnet/development.yml",
	)
}

func configChainstorageOptimismMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageOptimismMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/optimism/mainnet/development.yml", size: 265, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageOptimismMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageOptimismMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageOptimismMainnetLocalYml,
		"config/chainstorage/optimism/mainnet/local.yml",
	)
}

func configChainstorageOptimismMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageOptimismMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/optimism/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageOptimismMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x6e\xc3\x30\x0c\x84\xe1\x5d\x4f\x71\x48\x67\x1b\x46\x33\x14\xd1\x9c\x0e\x5d\x9a\xc5\x7b\x40\x53\x8c\x43\xc4\xa2\x0c\x51\x6e\xda\xb7\x2f\x12\x14\xc5\xad\xf7\x7f\x2f\x18\xaf\xea\xb8\xe8\x22\x50\xc7\x2c\x26\x95\x9a\x24\x4c\x3f\xd8\x65\xba\x09\xb8\xd8\x45\xe7\x5d\x8f\xe3\x09\x9f\xa7\x11\xef\xc7\x8f\xb1\x0f\x74\xf7\x18\x00\xba\xfb\x99\x98\xcb\x66\x2d\x62\xad\x25\x6d\xdc\xb4\x58\x00\xa6\x8d\x6f\xd2\x22\xe4\x9b\xf2\xba\x48\xc7\x57\x52\xf3\x56\x2a\xcd\xd2\x95\xb5\x69\x56\xcf\x5d\x26\x35\x93\xd6\x3d\xd2\xc0\x94\xc4\x58\x9e\x6e\x4a\x55\xdc\x23\x9a\xe4\xb5\x54\x5a\xfa\x3f\xa7\xe7\x92\xe3\xdb\xeb\x7e\x1f\x5c\xea\x97\xd4\xc7\x79\x52\x4b\xe7\xff\x62\xe8\x9f\x8b\x87\xe1\x30\x84\xdf\x00\x00\x00\xff\xff\x4c\x97\x1c\x66\xdf\x00\x00\x00")

func configChainstorageOptimismMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageOptimismMainnetProductionYml,
		"config/chainstorage/optimism/mainnet/production.yml",
	)
}

func configChainstorageOptimismMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageOptimismMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/optimism/mainnet/production.yml", size: 223, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstoragePolygonMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5b\x6f\x1b\x37\x13\x7d\xdf\x5f\x41\xf8\x7b\xb6\x75\x71\xf4\xb5\x59\x20\x0f\x69\x12\xa4\x46\x52\x3b\x28\x0c\x14\xed\x0b\x31\x4b\xce\x6a\x09\x71\xc9\x0d\x39\xab\x48\xfd\xf5\x05\x2f\xab\x95\xe4\x8b\x1c\x34\xae\xe1\x17\x2d\x39\x1c\x9e\x99\x33\x73\x86\xfe\x1f\xbb\x6d\x94\x67\xb5\xd2\xc8\x94\x67\x4b\x34\xe8\x80\x50\xb2\x6a\xcb\xce\x5a\x58\x21\x13\xd6\xd4\x6a\x79\x76\xc1\xde\xdf\xb0\xeb\x9b\x5b\xf6\xe1\xfd\xd5\xed\x45\x01\x9d\x2a\x0b\xc6\x5a\xd8\x70\xd3\xb7\xbc\xd2\x56\xac\x78\xf0\xe2\x4b\x36\x9b\x4e\xa7\xc7\x7b\xbe\x64\x8b\xb0\x18\x16\xbe\x59\xb7\x42\x17\x0d\x0b\xc6\x3c\x39\x84\x56\x99\x25\xaf\x80\x44\xc3\xbd\xfa\x1b\xb3\xf1\xb8\xa5\x0c\xa1\x5b\x83\x2e\xd9\xcc\x1f\x6c\xc4\x4b\x2c\xc7\x35\x1a\xe2\xa4\x5a\x2c\xd9\x6c\xd1\x16\xf0\xcd\x07\x78\xf0\xcd\x73\x10\xc2\xf6\x86\x4a\x26\x71\x8d\xda\x76\x2d\x1a\x2a\x18\xab\x7a\xb1\x42\x2a\xd9\xd9\x59\xc1\x98\xd4\x5f\x83\x39\x63\x12\x35\x6c\xb9\x47\xe1\x4b\xf6\x3a\x46\xc1\x98\x81\xe0\x15\x37\xd0\x76\x1a\xb9\x68\x40\x19\x4f\xd6\xc1\x12\x73\x68\xbc\xb3\x7a\xbb\xb4\x86\xb7\xa0\x8c\x41\xe2\x52\x7f\x8d\x27\xd7\xca\xab\x4a\x69\x45\xdb\x08\xcd\xf6\x94\x5d\xff\x3f\xba\x96\x5b\x03\xad\x95\x55\xba\x3a\xa5\x90\xa0\xd2\xdf\x77\x5b\x3c\x9c\xe3\x3f\x75\x38\xe5\xe9\xa4\x0b\xde\xa0\x5a\x36\xc4\x95\x91\xb8\x79\x8a\xbf\x6a\x3b\x1c\xb9\xcf\xf3\x1a\x9d\x57\xd6\xa0\xe4\xa7\x61\x8e\xb6\x27\x01\xdf\xeb\x36\x1f\x7b\x0c\xf9\x03\x57\x54\xdb\xe1\xac\xbc\xe7\xba\xce\xa1\x57\xcb\x70\xa8\x77\x9a\xe3\xa6\x53\x0e\x48\x59\x53\xb2\xcb\x69\x5b\x30\xe6\x70\x19\xbf\x7a\x7f\x8e\xe0\xe9\x7c\x16\xab\x34\x5e\x98\x2b\x0b\x08\xb8\xb0\x6d\x70\xe4\xa3\xe9\xc7\xbf\xae\xbe\x14\x02\x24\x1a\x11\x6d\x40\xca\xb0\x37\x94\xa4\x0d\x97\x97\x6c\x1f\xfa\x79\xc6\x75\x3e\xe2\x72\x48\x68\x02\x10\xde\xa1\x53\x56\x96\xec\xa7\x22\x1e\x09\x1e\x53\x3c\x9e\xc0\x51\xe6\xa7\x64\xd3\x62\x2c\xb5\x65\x82\xa6\x81\xd0\x53\xc9\xe6\xf1\xcb\x67\x7a\x66\xa3\x61\x6c\xab\xb9\x1f\x16\x92\x7f\xf6\xcb\xe7\x9b\x77\x9f\xde\xfd\xfa\xf6\xea\x9a\x7f\xb9\xf9\xfc\xe7\xc7\x9b\xeb\x82\x31\xa1\x15\x1a\x4a\x7e\x5b\xf0\x84\x2e\xfd\x66\x0c\x8d\xec\xac\x32\xc4\x97\xce\xf6\x5d\x8e\x32\x06\xe0\xb6\x83\x4d\xe8\x66\x20\xc2\xb6\xa3\x20\x18\x09\x8f\x86\x35\x9e\x70\xb2\x06\xad\x24\x90\x7d\xfc\xb2\xa1\x4c\x8e\xc2\x9e\x1e\x84\x1d\xbe\x6a\x04\xea\x5d\xbe\xd4\x59\x8f\x44\xc0\x3b\x70\x1e\x5d\xc9\xc8\xf5\x58\x30\xa6\x9c\xc3\x58\x49\xa1\xe8\xa4\xf2\x04\x81\x46\x76\x19\x3b\xdb\x20\x05\x91\x2b\xd9\xf5\x87\xdb\x3f\x6e\x7e\xff\x34\x24\x88\xff\xf6\xf6\xea\xfa\xfa\xc3\x6d\x91\x44\x95\x27\x69\x39\xae\x36\xe1\xec\x1e\x7d\x0e\xcc\x12\xb3\x2a\xbe\x2a\xea\xde\x88\x40\x37\x68\x9e\xd0\x9f\x9d\x15\x5e\xae\x62\xfd\xf4\xd4\xf0\x06\x41\x06\x94\x31\xe0\xb8\x42\x76\x85\x26\x2f\x1c\xf4\xc1\xae\xde\x1a\xa2\xce\x97\x93\x89\xa9\xe9\x1c\x3a\x75\x21\xac\x32\x15\x78\xbc\x10\xb6\x9d\x40\xa7\x26\xb8\xe9\x26\xfb\x47\x27\x19\xf1\x24\x23\x9e\xac\x67\xf7\x4a\xbb\x43\x4f\x75\xaf\x73\xce\x3c\xba\x75\x2a\x87\x4a\x19\x39\x5e\x3f\xbd\x88\x7f\xe5\xeb\xe9\xeb\x69\xe1\x35\x8c\xa1\x67\x4d\x91\xa8\x09\xe2\x58\x39\x28\xc9\x61\x7d\x11\xfa\x0f\x37\x1d\x0a\x42\x19\x11\xd4\xda\x26\xfd\x3f\x67\xad\x35\x8a\xac\x8b\xbf\x3b\xab\x35\xa6\x9f\x69\x80\x1c\x7d\x4c\x76\x05\xf2\x66\x16\x37\x42\xcf\x6a\x58\xe1\x64\xd7\x30\x6f\x42\x8f\x04\x1d\xb7\x35\xf7\x5b\x23\xb8\xb1\x72\x9f\xfe\x84\x91\x54\xa0\x60\x1e\x7f\xb5\x81\x3b\x23\x90\x6b\xf0\x94\x14\x26\x98\xb5\xc5\x01\xd0\x0a\xc4\xaa\x56\x01\x5e\x2a\x3a\x10\xa4\xd6\x61\x6e\xc4\xf6\x08\x53\x4e\xb5\x7d\xbb\xd7\x1b\x97\x87\x66\x5e\x34\x28\x7b\x8d\x9c\x6c\xee\xf7\x3c\x70\x72\x7a\xf6\x4d\xd3\xb6\xe5\x42\x5b\x8f\xa3\xdd\x6c\x9a\x0c\xf7\xa7\xf0\x7c\x91\x67\xa0\x68\x50\xac\x52\x47\x0d\xf3\x39\xef\xd4\xa0\xb4\x5d\xa3\xe3\x68\x42\x03\xc9\x5d\x83\xa4\x6e\x76\xd8\x39\x2b\xd0\x7b\x94\x41\xa1\xd2\x8c\x1f\xf2\x94\x6a\x46\x58\x23\x7a\xe7\x42\xea\x71\x43\x0e\x04\xd9\x58\x41\xf3\x64\x42\xe0\x57\x5c\x2b\x1f\x27\x78\x0d\xbd\x4e\xea\x3f\xa4\x8f\x4b\x14\x2a\x08\xea\x18\xc9\xbc\x3d\xb4\xc0\x0d\x8a\x9e\x0e\x4d\x5e\x35\x87\x36\x4a\x06\x19\xa5\x6d\xb9\x5b\xba\x18\x39\x09\x04\xa1\x11\x4d\x0b\xa1\xba\x5f\x9c\x21\xd1\x28\x3d\x16\xfa\x5e\x78\x0f\x1d\x9c\x37\x2f\x9c\xc9\x31\x79\x41\x84\x9c\xf5\x9e\x1f\x49\xf6\xc9\x74\x2e\x9e\xb1\xe0\xc5\xca\xd6\xf5\xde\x1b\x73\x31\x9d\xb6\xfe\x4e\x33\xcc\xa6\x0f\x35\xc3\x6e\xa7\x03\x07\x5a\xa3\x56\xbe\x0d\x62\xfd\x48\xd2\x73\xf8\x79\x70\x0b\x34\x14\x5e\x0a\x71\xe8\x1e\x6c\x1e\x0e\xef\xcb\xd0\x76\xf9\xae\xe7\xa7\xed\x88\xa8\xf0\xa4\x4f\x6a\xfa\x44\xca\x7e\xfe\x0f\x29\xbb\xbc\xcb\xd7\xe2\x61\xe9\x3a\xa5\x5c\x4f\xe7\xf1\xf9\x59\x18\x27\x58\x9a\x5f\x47\xc9\x6f\x10\x1c\x55\x08\x8f\x64\xf3\xdf\xf3\x33\xff\x81\x2d\x75\x87\x8f\xf9\xe2\x24\x1f\x75\x98\x9d\x61\xde\x96\xac\x06\xed\xc7\xf1\x92\xff\x25\x0a\x88\xc3\x34\x0e\x13\x46\x6c\x85\xde\x3d\xc4\x8e\xa8\x9c\x27\x2e\x7d\x7a\x82\x73\xe1\x10\xe8\x3e\xce\x06\x83\xbb\x48\x5e\xac\x0c\x76\x8f\x97\xe1\xb5\xf2\xc3\x75\xf3\xa9\x24\xcf\xbf\x4f\x36\x1f\x7b\x42\xbc\x6c\x4a\xf7\x1e\x81\xc3\xbb\x35\x3e\xfb\xee\x01\xf4\x4f\x00\x00\x00\xff\xff\x97\xa6\xa6\xdb\x27\x11\x00\x00")

func configChainstoragePolygonMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstoragePolygonMainnetBaseYml,
		"config/chainstorage/polygon/mainnet/base.yml",
	)
}

func configChainstoragePolygonMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstoragePolygonMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/polygon/mainnet/base.yml", size: 4391, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstoragePolygonMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8d\xb1\x6e\xc3\x30\x0c\x05\x77\x7d\x05\x91\xce\x36\x8c\x64\x28\xa2\x39\x1d\xba\x34\x8b\x77\x83\x96\x5e\x1c\xc1\x12\x65\x48\x8c\xd3\xfc\x7d\x61\xa3\x68\xc1\x89\xb8\xe3\xf1\x8d\xfa\x7b\xa8\x74\x0b\x11\x14\x2a\x4d\x10\x14\x56\x78\x1a\x5f\x74\x48\x3c\x83\x5c\x96\x5b\x98\x0e\x2d\x5d\xae\xf4\x75\xed\xe9\xe3\xf2\xd9\xb7\x86\x9f\xd5\x1a\x22\x7e\xd6\x81\x9d\xcb\x0f\x51\x4b\x1e\x2b\x62\x5e\x12\x44\x0d\xd1\xf8\x70\x33\xd4\x12\xbe\x39\x2d\x11\x8d\xbb\x73\x90\xaa\xb9\xf0\x84\x66\xc9\xf1\x35\x65\x69\x12\x07\x11\x68\xe3\xb1\x1a\xc7\x1e\xe2\xb0\x67\xbd\x2f\xa8\xd5\x92\x22\x2d\xb9\x70\xdc\x84\xf6\xb7\xd4\xba\x9c\xec\xfb\xf1\x74\x32\x7b\x72\xf3\xc7\x98\xdd\x3c\x28\x4f\xdb\x42\x54\x95\xc7\x08\x4b\x47\x43\x84\x15\xa2\xff\x28\xb2\xa2\xea\x86\x2a\xca\x8a\xb2\x5f\x07\xf1\xc3\xdf\xcb\xae\xdd\xc7\x9e\xbb\x73\x67\x7e\x02\x00\x00\xff\xff\x7d\xc2\x36\xaf\x1f\x01\x00\x00")

func configChainstoragePolygonMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstoragePolygonMainnetDevelopmentYml,
		"config/chainstorage/polygon/mainnet/development.yml",
	)
}

func configChainstoragePolygonMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstoragePolygonMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/polygon/mainnet/development.yml", size: 287, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstoragePolygonMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstoragePolygonMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstoragePolygonMainnetLocalYml,
		"config/chainstorage/polygon/mainnet/local.yml",
	)
}

func configChainstoragePolygonMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstoragePolygonMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/polygon/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstoragePolygonMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\x31\x6f\x83\x30\x10\x46\x77\xff\x8a\x53\x3a\x83\x50\x33\x54\xf1\x9c\x0e\x5d\x9a\x85\x1d\x1d\xf6\x07\xb1\xb0\x7d\x96\x6d\x4a\xf2\xef\x2b\x48\x55\xdd\xf2\x0d\xef\x3d\xdd\x1b\xf5\x77\x57\x68\x72\x1e\xe4\x0a\xcd\x88\xc8\x5c\x61\x69\x7c\xd2\x29\xf0\x02\x32\x12\x27\x37\x9f\x5a\xba\xde\xe8\xfb\xd6\xd3\xe7\xf5\xab\x6f\x15\x6f\x45\x2b\x22\xde\xca\xc0\xc6\xc8\x1a\xab\xa6\x94\xc5\xae\xa6\x3a\x89\x8a\x68\x5c\xcd\x82\xaa\x09\x0f\x0e\xc9\xa3\x31\x77\x76\xb1\x54\xc9\x3c\xa3\x49\xe2\x9f\xb3\xc4\x26\xb0\x8b\x11\xb5\xd9\x4d\x65\xd8\x22\x1a\x1c\x59\x6b\x33\x4a\xd1\x54\x11\x92\x64\xf6\xed\x5f\xa6\x35\x12\xf4\xc7\xfb\xf9\xac\x0a\xf2\x0f\xf2\x0e\x8f\x2e\xda\xe1\xdf\xe8\xda\xe3\xf4\xa5\xbb\x74\xaa\x78\xde\x09\x3c\x12\x4c\x85\x1d\x36\xc9\xcb\xe4\xe5\xf5\x7b\x43\x41\xa2\xab\x92\x8f\x9d\xc4\x7b\xbc\x66\xa9\x19\x1c\x90\xd5\x6f\x00\x00\x00\xff\xff\x07\x1f\xc3\xfd\x1d\x01\x00\x00")

func configChainstoragePolygonMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstoragePolygonMainnetProductionYml,
		"config/chainstorage/polygon/mainnet/production.yml",
	)
}

func configChainstoragePolygonMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstoragePolygonMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/polygon/mainnet/production.yml", size: 285, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageSolanaMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5b\x6f\xdb\x36\x14\x7e\xd7\xaf\x20\xb2\xe7\xc4\xb2\x13\x77\xab\xde\xb2\xb6\xd8\x82\x76\xc9\xb0\x05\x18\xb0\x17\xe2\x98\x3c\xb2\x08\xf3\xa2\x92\x47\xae\xbd\x5f\x3f\xf0\xe2\xc8\x76\x93\x38\x43\xb7\x05\x7e\x91\xa8\xc3\x73\xfb\x3e\x7e\x87\xfe\x8e\xdd\x77\x2a\xb0\x56\x69\x64\x2a\xb0\x25\x5a\xf4\x40\x28\xd9\x62\xcb\xce\x0c\xac\x90\x09\x67\x5b\xb5\x3c\xbb\x60\xef\xef\xd8\xed\xdd\x3d\xfb\xf0\xfe\xe6\xfe\xa2\x82\x5e\x35\x15\x63\x06\x36\xdc\x0e\x86\x2f\xb4\x13\x2b\x1e\xbd\x84\x86\x4d\xeb\xba\x3e\xfe\x16\x1a\x36\x8f\x8b\x71\xe1\x8b\xf3\x2b\xf4\xc9\xb0\x62\x2c\x90\x47\x30\xca\x2e\xf9\x02\x48\x74\x3c\xa8\xbf\xb0\x18\x8f\x9f\x94\x25\xf4\x6b\xd0\x0d\x9b\xcd\x6b\x13\x0e\xbe\xa5\x38\x8e\xe3\x1a\x2d\x71\x52\x06\xa3\x63\x53\xc1\x97\x10\x33\x84\x2f\x81\x83\x10\x6e\xb0\xd4\x30\x89\x6b\xd4\xae\x37\x68\xa9\x62\x6c\x31\x88\x15\x52\xc3\xce\xce\x2a\xc6\xa4\xfe\x1c\xcd\x19\x93\xa8\x61\xcb\x03\x8a\xd0\xb0\xb7\xa9\x10\xc6\x2c\x44\xaf\xb8\x01\xd3\x6b\xe4\xa2\x03\x65\x03\x39\x0f\x4b\x2c\xd5\xf1\xe0\x34\x58\xe0\x06\x94\xb5\x48\x5c\xea\xcf\x69\xe3\x5a\x05\xb5\x50\x5a\xd1\x36\x65\xe6\x06\x2a\x9e\xdf\x24\xcf\x72\x6b\xc1\x38\xb9\xc8\x91\x73\x13\x09\x16\xfa\x1f\x05\x4b\x7b\x4b\xf5\xa7\xf6\xe6\x2e\x9d\xf2\xc0\x3b\x54\xcb\x8e\xb8\xb2\x12\x37\x2f\x71\xb7\xd8\xee\xb6\x3c\xe2\x78\x8d\x3e\x28\x67\x51\xf2\xd3\x49\x8e\xb6\xa7\xd2\x7d\xd4\x6b\xd9\xf5\x5c\xde\x4f\x44\x58\x6c\x77\x7b\xe5\xd7\xd1\x7a\x8f\x41\x2d\xe3\x9e\xc1\x6b\x8e\x9b\x5e\x79\x20\xe5\x6c\xc3\x2e\x6b\x53\x31\xe6\x71\x99\xde\x86\x70\x8e\x10\xe8\x7c\x9a\xf8\x99\xe2\x15\x4e\x01\x01\x17\xce\x44\x47\x21\x99\xfe\xf4\xe7\xcd\xaf\x95\x00\x89\x56\x24\x1b\x90\x32\x7e\xdb\x91\xd1\xc5\xe0\x0d\xdb\xcf\xfc\x3c\xa7\x75\x3e\xa6\xe5\x91\xd0\xc6\x3c\x78\x8f\x5e\x39\xd9\xb0\xef\xab\xb4\x23\x3a\xcc\xd5\x04\x02\x4f\x05\x9b\x86\xd5\xd5\x48\xb2\x65\xce\x4c\x03\x61\xa0\x86\x4d\xd3\x5b\x28\xd8\x4c\x47\xc3\x74\x9e\xae\xea\x7c\xe8\xd2\x5a\x0e\xc1\x7e\xfc\x74\xf7\xee\xe3\xbb\x9f\xaf\x6f\x6e\xf9\xef\x77\x9f\xae\x6f\xaf\x2b\xc6\x84\x56\x68\x29\x7b\x36\x10\x08\x7d\x7e\x66\x0c\xad\xec\x9d\xb2\xc4\x97\xde\x0d\x7d\x29\x93\xb1\xa0\x61\x8d\x27\x6c\xd6\xa0\x95\x04\x72\xcf\xfb\xda\xb1\xe0\xa8\xae\xfa\xa0\xae\xf8\xd6\x22\xd0\xe0\x4b\x50\xef\x02\x12\x01\xef\xc1\x07\xf4\x0d\x6b\x41\x07\xac\x18\x53\xde\x63\x62\x4a\x24\x95\x54\x81\x20\xe2\x14\x95\x2d\x6a\x18\x52\x94\xb0\x86\xdd\x7e\xb8\xff\xe3\xee\xb7\x8f\xa5\x7e\xfe\xcb\xf5\xcd\xed\xed\x87\xfb\x2a\x2b\x26\xcf\xa2\x71\x44\x26\xe1\xdd\x1e\x3c\x1e\xec\x12\x8b\xe2\x5d\x45\xdc\x55\x48\x34\x96\xfa\x33\xef\xbd\x13\x18\x82\xf3\x0d\x23\x3f\x60\xd5\x0e\x56\x44\xb0\x41\xf3\x5c\xda\xd9\x59\x15\xe4\x2a\x91\x67\xa0\x8e\x77\x08\x32\x96\x90\xba\x91\x56\xc8\xad\xd0\x96\x85\x83\x33\xf0\x40\xb6\x8e\xa8\x0f\xcd\x64\x62\x5b\x3a\x87\x5e\x5d\x08\xa7\xec\x02\x02\x5e\x08\x67\x26\xd0\xab\x09\x6e\xfa\xc9\xfe\xd6\x49\x2e\x67\x52\xca\x99\xac\xa7\x8f\x6a\xba\xc7\x40\xed\xa0\x4b\xe6\x01\xfd\x3a\x33\x61\xa1\xac\x1c\xa3\xd7\x17\xe9\xd7\xbc\xad\xdf\xd6\x55\xd0\x30\xf6\xa5\x88\x89\x44\x4d\xd0\xb0\xe9\xbc\x3e\xe0\xe3\xc3\xba\xb9\xac\x23\x2b\x71\xd3\xa3\x20\x94\x29\x89\x56\xbb\x2c\xfc\xe7\xcc\x38\xab\xc8\xf9\xf4\xdc\x3b\xad\x31\x3f\xe6\xc9\x91\x5e\xa2\x1e\xbb\x96\x87\xad\x15\xdc\x3a\x79\x00\x75\x0a\x4a\x2a\xb6\x74\x96\x9e\x4c\x44\xca\x0a\xe4\x1a\x02\x65\xb5\x68\xd8\xa5\xa9\x0e\xa2\x2e\x40\xac\x5a\x15\x63\x65\x82\x81\x20\xb5\x8e\xf2\xef\x91\xfc\x36\xce\x2a\x65\x06\xc3\x81\x08\x4d\x4f\xa1\x61\x97\x87\x66\x41\x74\x28\x07\x8d\x9c\x5c\x39\xbc\x65\x6e\x34\x6c\x6e\x8e\x4c\xf3\x67\xc7\x85\x76\x01\x47\xbb\x69\x9d\x0d\xf7\xc7\xe9\x6c\x5e\x26\x99\xe8\x50\xac\xf2\xe9\xd9\x0d\xda\xf2\x25\x8e\x51\x8f\x85\x75\x28\xa3\xa6\xe4\x89\x1c\x55\x2e\x4f\xc1\xc1\x70\xe1\xac\x18\xbc\x8f\x67\x0d\x37\xe4\x41\x90\x8b\xa8\xbf\xb9\x4a\x16\x04\x61\xc5\xb5\x0a\x69\xd4\xb6\x30\xe8\xac\xd5\xbb\x0e\x71\x89\x42\x45\xfd\x1b\x93\x9d\x99\x43\x0b\xdc\xa0\x18\xe8\xd0\xe4\xaa\x3b\xb4\x51\x32\xca\x1e\x6d\x9b\x87\xa5\x8b\xb1\xed\x11\x03\xb4\xa2\x33\x10\x09\xf9\xea\x20\x88\x4e\xe9\x91\x98\x7b\xe5\x3d\xb5\xf1\x4d\xd9\xf8\x7a\xad\x1c\xbb\x17\x75\xc3\xbb\x10\xf8\x91\x04\x9f\xec\xe7\xfc\x3f\x24\xb5\x58\xb9\xb6\xdd\xbb\x10\x4e\xc3\x57\x6c\x9f\x3e\x45\xf6\xe9\x8e\xec\x3d\x78\xd0\x1a\xb5\x0a\x26\x2b\xef\x93\x0d\x2f\xa5\x97\x29\x2b\xd0\x52\x9c\xea\x59\xe6\xfe\x0f\x38\x8e\x00\x88\xf7\xea\x2c\x6b\x2f\x84\xe2\x87\xd7\x85\x62\x36\x7f\x52\x76\xbe\x06\xa2\x34\xf5\xd5\xa8\x3f\x0e\x8c\x3c\x2e\x8e\x5a\xdc\x21\x78\x5a\x20\x3c\xd3\xb3\x6f\x47\x61\xf6\xcd\x28\xcc\xcb\x65\xed\x39\xfe\xb7\x71\x84\xc5\xb1\x57\x46\xf4\x6e\x00\x94\x3f\x18\x31\xad\x38\x13\xe3\x0c\x10\x5b\x11\xaf\x4e\x97\x8f\x01\x36\xcb\x47\x27\xe4\x5b\x2d\x17\x1e\x81\x1e\x03\x66\x67\x80\x36\x5e\x6f\xe4\x5e\xd0\x57\xc3\xfa\xe1\x42\xb0\xbb\x0e\xfc\xeb\xd2\xf6\x52\x24\x67\xa7\x81\x3c\xfc\x67\xfc\xf4\x24\x7f\xdd\x96\xee\x5d\xac\x76\xd7\xc1\x74\xe1\x7a\x24\xa1\xbf\x03\x00\x00\xff\xff\x6b\xed\xea\x70\x77\x10\x00\x00")

func configChainstorageSolanaMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageSolanaMainnetBaseYml,
		"config/chainstorage/solana/mainnet/base.yml",
	)
}

func configChainstorageSolanaMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageSolanaMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/solana/mainnet/base.yml", size: 4215, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageSolanaMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xd0\xbf\x8e\xdc\x20\x10\x06\xf0\x9e\xa7\x18\x5d\x6a\x5b\xbe\xbb\x44\xb9\xa5\xde\x14\x69\xb2\xcd\xf6\x68\x0c\x63\x1b\x19\x86\x15\x33\xde\x3f\x6f\x1f\xd9\xce\x66\xa1\x41\xfa\x3e\x7e\x82\xf9\x06\xe7\x29\x0a\x0c\x31\x11\x44\x81\x91\x98\x2a\x2a\x05\xe8\x1f\xf0\x96\x71\x26\xf0\x85\x87\x38\xbe\xb5\x70\x3c\xc1\x9f\xd3\x19\x7e\x1d\x7f\x9f\x5b\x83\x37\xb1\x06\x00\x6f\xe2\xd0\xfb\xb2\xb0\x5a\x08\x74\xa5\x54\x2e\x99\x58\x0d\x40\xbf\xf8\x99\xd4\x02\xdd\x31\x5f\x12\x35\x7e\xc2\xc8\xa2\xa5\xe2\x48\x8d\x94\x84\x8c\x4d\xc6\xc8\x4c\xda\x04\xba\x1a\x8f\x81\xd8\xd3\xa6\x86\x50\x49\xc4\x82\x52\xbe\x94\x8a\x69\x2d\xb4\xff\xa0\xd6\x97\x6c\x7f\x7e\x7c\x7e\x9a\x4d\x5c\xfb\x7d\x2a\x7e\x76\xa2\x58\xd5\x4d\x14\xc7\x49\x2d\x7c\x75\xfb\x32\x42\xf5\x4a\x75\xab\x45\x0e\xee\xbf\xdd\xb5\xdb\xb6\x87\xee\xd0\x19\x49\xf8\x82\x76\xc2\x05\x4a\x8a\x16\xde\x57\xe4\x19\x69\xcc\xf4\x0a\xb2\x01\x28\x8b\xba\x32\x38\x79\xb0\x77\x5c\x02\xb9\x10\x45\x71\xfd\xc8\xf3\xa6\x46\xaa\x16\x3e\xb6\x53\x26\x27\x91\x3d\xb9\x84\xa2\x6e\x33\x2d\xbc\xff\xc8\xe6\x56\xea\x3c\xa4\xb2\x4f\xb5\x47\x3f\x0f\x31\xa5\xfd\xd9\x00\xbc\x64\xe7\x0b\xfb\xa5\x56\x62\x75\x74\xd7\x8a\x5e\x4b\x15\x0b\xdf\xbf\xcc\xdf\x00\x00\x00\xff\xff\x76\xe7\x46\xe6\xc3\x01\x00\x00")

func configChainstorageSolanaMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageSolanaMainnetDevelopmentYml,
		"config/chainstorage/solana/mainnet/development.yml",
	)
}

func configChainstorageSolanaMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageSolanaMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/solana/mainnet/development.yml", size: 451, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageSolanaMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageSolanaMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageSolanaMainnetLocalYml,
		"config/chainstorage/solana/mainnet/local.yml",
	)
}

func configChainstorageSolanaMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageSolanaMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/solana/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageSolanaMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x4f\xc3\x30\x10\xc5\xf1\xdd\x9f\xe2\xa9\xcc\xb1\x22\x3a\xa0\x7a\x2e\x03\x0b\x5d\xb2\x57\x97\xf3\x35\xb5\x6a\x9f\x23\x9f\x43\xe1\xdb\xa3\x56\x08\xbd\xf5\xfd\x7f\x2f\x98\xae\xc9\x70\x49\x59\x90\x0c\x8b\xa8\x34\xea\x12\x31\xff\x60\x57\xe8\x26\xe0\xaa\x97\xb4\xec\x3c\x8e\x27\x7c\x9e\x26\xbc\x1f\x3f\x26\xef\xe8\x6e\xc1\x01\x74\xb7\x33\x31\xd7\x4d\x7b\xc0\xda\x6a\xdc\xb8\xa7\xaa\x0e\x98\x37\xbe\x49\x0f\x90\x6f\x2a\x6b\x96\x81\xaf\x94\xd4\x7a\x6d\xb4\xc8\x60\x35\x93\xd2\x50\x28\xa9\x4a\x1f\x1e\xa1\x63\x8a\xa2\x2c\x4f\x35\xc6\x26\x66\x01\x5d\xca\x5a\x1b\x65\xff\xa7\x78\xae\x25\xbc\xbd\xee\xf7\xce\xa4\x7d\x49\x7b\x9c\xe7\xa4\xf1\xfc\x5f\x8c\xfe\xb9\x70\x18\x0f\xa3\xfb\x0d\x00\x00\xff\xff\x65\xd1\xb9\x68\xdd\x00\x00\x00")

func configChainstorageSolanaMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageSolanaMainnetProductionYml,
		"config/chainstorage/solana/mainnet/production.yml",
	)
}

func configChainstorageSolanaMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageSolanaMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/solana/mainnet/production.yml", size: 221, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"config/chainstorage/arbitrum/mainnet/base.yml":         configChainstorageArbitrumMainnetBaseYml,
	"config/chainstorage/arbitrum/mainnet/development.yml":  configChainstorageArbitrumMainnetDevelopmentYml,
	"config/chainstorage/arbitrum/mainnet/local.yml":        configChainstorageArbitrumMainnetLocalYml,
	"config/chainstorage/arbitrum/mainnet/production.yml":   configChainstorageArbitrumMainnetProductionYml,
	"config/chainstorage/avacchain/mainnet/base.yml":        configChainstorageAvacchainMainnetBaseYml,
	"config/chainstorage/avacchain/mainnet/development.yml": configChainstorageAvacchainMainnetDevelopmentYml,
	"config/chainstorage/avacchain/mainnet/production.yml":  configChainstorageAvacchainMainnetProductionYml,
	"config/chainstorage/bitcoin/mainnet/base.yml":          configChainstorageBitcoinMainnetBaseYml,
	"config/chainstorage/bitcoin/mainnet/development.yml":   configChainstorageBitcoinMainnetDevelopmentYml,
	"config/chainstorage/bitcoin/mainnet/local.yml":         configChainstorageBitcoinMainnetLocalYml,
	"config/chainstorage/bitcoin/mainnet/production.yml":    configChainstorageBitcoinMainnetProductionYml,
	"config/chainstorage/bsc/mainnet/base.yml":              configChainstorageBscMainnetBaseYml,
	"config/chainstorage/bsc/mainnet/development.yml":       configChainstorageBscMainnetDevelopmentYml,
	"config/chainstorage/bsc/mainnet/local.yml":             configChainstorageBscMainnetLocalYml,
	"config/chainstorage/bsc/mainnet/production.yml":        configChainstorageBscMainnetProductionYml,
	"config/chainstorage/dogecoin/mainnet/base.yml":         configChainstorageDogecoinMainnetBaseYml,
	"config/chainstorage/dogecoin/mainnet/development.yml":  configChainstorageDogecoinMainnetDevelopmentYml,
	"config/chainstorage/dogecoin/mainnet/local.yml":        configChainstorageDogecoinMainnetLocalYml,
	"config/chainstorage/dogecoin/mainnet/production.yml":   configChainstorageDogecoinMainnetProductionYml,
	"config/chainstorage/ethereum/goerli/base.yml":          configChainstorageEthereumGoerliBaseYml,
	"config/chainstorage/ethereum/goerli/development.yml":   configChainstorageEthereumGoerliDevelopmentYml,
	"config/chainstorage/ethereum/goerli/local.yml":         configChainstorageEthereumGoerliLocalYml,
	"config/chainstorage/ethereum/goerli/production.yml":    configChainstorageEthereumGoerliProductionYml,
	"config/chainstorage/ethereum/mainnet/base.yml":         configChainstorageEthereumMainnetBaseYml,
	"config/chainstorage/ethereum/mainnet/development.yml":  configChainstorageEthereumMainnetDevelopmentYml,
	"config/chainstorage/ethereum/mainnet/local.yml":        configChainstorageEthereumMainnetLocalYml,
	"config/chainstorage/ethereum/mainnet/production.yml":   configChainstorageEthereumMainnetProductionYml,
	"config/chainstorage/optimism/mainnet/base.yml":         configChainstorageOptimismMainnetBaseYml,
	"config/chainstorage/optimism/mainnet/development.yml":  configChainstorageOptimismMainnetDevelopmentYml,
	"config/chainstorage/optimism/mainnet/local.yml":        configChainstorageOptimismMainnetLocalYml,
	"config/chainstorage/optimism/mainnet/production.yml":   configChainstorageOptimismMainnetProductionYml,
	"config/chainstorage/polygon/mainnet/base.yml":          configChainstoragePolygonMainnetBaseYml,
	"config/chainstorage/polygon/mainnet/development.yml":   configChainstoragePolygonMainnetDevelopmentYml,
	"config/chainstorage/polygon/mainnet/local.yml":         configChainstoragePolygonMainnetLocalYml,
	"config/chainstorage/polygon/mainnet/production.yml":    configChainstoragePolygonMainnetProductionYml,
	"config/chainstorage/solana/mainnet/base.yml":           configChainstorageSolanaMainnetBaseYml,
	"config/chainstorage/solana/mainnet/development.yml":    configChainstorageSolanaMainnetDevelopmentYml,
	"config/chainstorage/solana/mainnet/local.yml":          configChainstorageSolanaMainnetLocalYml,
	"config/chainstorage/solana/mainnet/production.yml":     configChainstorageSolanaMainnetProductionYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"config": &bintree{nil, map[string]*bintree{
		"chainstorage": &bintree{nil, map[string]*bintree{
			"arbitrum": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageArbitrumMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageArbitrumMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageArbitrumMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageArbitrumMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"avacchain": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageAvacchainMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageAvacchainMainnetDevelopmentYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageAvacchainMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"bitcoin": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageBitcoinMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageBitcoinMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageBitcoinMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageBitcoinMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"bsc": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageBscMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageBscMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageBscMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageBscMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"dogecoin": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageDogecoinMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageDogecoinMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageDogecoinMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageDogecoinMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"ethereum": &bintree{nil, map[string]*bintree{
				"goerli": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageEthereumGoerliBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageEthereumGoerliDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageEthereumGoerliLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageEthereumGoerliProductionYml, map[string]*bintree{}},
				}},
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageEthereumMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageEthereumMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageEthereumMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageEthereumMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"optimism": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageOptimismMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageOptimismMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageOptimismMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageOptimismMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"polygon": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstoragePolygonMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstoragePolygonMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstoragePolygonMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstoragePolygonMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"solana": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageSolanaMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageSolanaMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageSolanaMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageSolanaMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
