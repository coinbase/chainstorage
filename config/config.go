// Code generated for package config by go-bindata DO NOT EDIT. (@generated)
// sources:
// config/chainstorage/arbitrum/mainnet/base.yml
// config/chainstorage/arbitrum/mainnet/development.yml
// config/chainstorage/arbitrum/mainnet/local.yml
// config/chainstorage/arbitrum/mainnet/production.yml
// config/chainstorage/avacchain/mainnet/base.yml
// config/chainstorage/avacchain/mainnet/development.yml
// config/chainstorage/avacchain/mainnet/production.yml
// config/chainstorage/bitcoin/mainnet/base.yml
// config/chainstorage/bitcoin/mainnet/development.yml
// config/chainstorage/bitcoin/mainnet/local.yml
// config/chainstorage/bitcoin/mainnet/production.yml
// config/chainstorage/bsc/mainnet/base.yml
// config/chainstorage/bsc/mainnet/development.yml
// config/chainstorage/bsc/mainnet/local.yml
// config/chainstorage/bsc/mainnet/production.yml
// config/chainstorage/dogecoin/mainnet/base.yml
// config/chainstorage/dogecoin/mainnet/development.yml
// config/chainstorage/dogecoin/mainnet/local.yml
// config/chainstorage/dogecoin/mainnet/production.yml
// config/chainstorage/ethereum/goerli/base.yml
// config/chainstorage/ethereum/goerli/development.yml
// config/chainstorage/ethereum/goerli/local.yml
// config/chainstorage/ethereum/goerli/production.yml
// config/chainstorage/ethereum/mainnet/base.yml
// config/chainstorage/ethereum/mainnet/development.yml
// config/chainstorage/ethereum/mainnet/local.yml
// config/chainstorage/ethereum/mainnet/production.yml
// config/chainstorage/optimism/mainnet/base.yml
// config/chainstorage/optimism/mainnet/development.yml
// config/chainstorage/optimism/mainnet/local.yml
// config/chainstorage/optimism/mainnet/production.yml
// config/chainstorage/polygon/mainnet/base.yml
// config/chainstorage/polygon/mainnet/development.yml
// config/chainstorage/polygon/mainnet/local.yml
// config/chainstorage/polygon/mainnet/production.yml
// config/chainstorage/solana/mainnet/base.yml
// config/chainstorage/solana/mainnet/development.yml
// config/chainstorage/solana/mainnet/local.yml
// config/chainstorage/solana/mainnet/production.yml
package config

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _configChainstorageArbitrumMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5b\x6f\x1b\xb7\x12\x7e\xdf\x5f\x41\xf8\x3c\xdb\xba\x38\xce\x39\x59\xe0\x3c\xe4\x86\xd6\x48\x63\x17\x81\x8b\x02\x7d\x21\x66\xc9\x59\x2d\x21\x5e\x36\xe4\xac\x22\xf5\xd7\x17\xb3\xdc\xf5\x4a\xae\x6c\x25\x48\x53\xbf\xad\xc8\xe1\xdc\xbe\x8f\xdf\x50\xff\x11\x77\x8d\x49\xa2\x36\x16\x85\x49\x62\x85\x1e\x23\x10\x6a\x51\xed\xc4\x99\x83\x35\x0a\x15\x7c\x6d\x56\x67\x17\xe2\xdd\xad\xb8\xb9\xbd\x13\xef\xdf\x5d\xdf\x5d\x14\xd0\x9a\xb2\x10\xc2\xc1\x56\xfa\xce\xc9\xca\x06\xb5\x96\xec\x25\x95\x62\x31\x9f\xcf\x1f\xee\xa5\x52\x5c\xf1\x22\x2f\x7c\x09\x71\x8d\xb1\x37\x2c\x84\x48\x14\x11\x9c\xf1\x2b\x59\x01\xa9\x46\x26\xf3\x27\x0e\xc6\xd3\x96\xf1\x84\x71\x03\xb6\x14\x8b\x74\xb0\xd1\x07\x09\x12\x37\xe8\x49\x92\x71\xc8\x5e\x5d\x01\x5f\x12\xa7\x07\x5f\x92\x04\xa5\x42\xe7\xa9\x14\x1a\x37\x68\x43\xeb\xd0\x53\x21\x44\xd5\xa9\x35\x52\x29\xce\xce\x0a\x21\xb4\xfd\xcc\xe6\x42\x68\xb4\xb0\x93\x09\x55\x2a\xc5\xab\xbe\x0a\x21\x3c\xb0\x57\xdc\x82\x6b\x2d\x4a\xd5\x80\xf1\x89\x42\x84\x15\x0e\xa5\x49\x88\x95\xa1\xd8\x39\xe9\xc0\x78\x8f\x24\xb5\xfd\xdc\x1f\xdd\x98\x64\x2a\x63\x0d\xed\xfa\xdc\x42\x47\x83\xef\x97\xbd\x6f\xbd\xf3\xe0\x82\xae\x72\xec\xdc\x43\x82\xca\x7e\x63\xb8\xfe\xf4\xd0\x81\x53\xa7\x73\xa7\x4e\xfb\x90\x0d\x9a\x55\x43\xd2\x78\x8d\xdb\xaf\x71\x58\xed\xc6\x23\x47\x5d\x6f\x30\x26\x13\x3c\x6a\x79\x3a\xd1\xc9\xf6\x74\xca\x47\xfd\x0e\xe7\x9e\xca\xfd\x91\x18\xd5\x6e\x3c\xab\x8f\xc5\x6b\x23\x26\xb3\xe2\x53\x5d\xb4\x12\xb7\xad\x89\x40\x26\xf8\x52\x5c\xce\x5d\x21\x44\xc4\x55\xff\xab\x4b\xe7\x08\x89\xce\x17\x3d\x57\xfb\x88\x03\xbf\x80\x40\xaa\xe0\xd8\x51\xea\x4d\x7f\xfa\xe3\xfa\xd7\x42\x81\x46\xaf\x7a\x1b\xd0\x9a\xf7\x46\x62\x06\x0e\x5e\x8a\xfd\xdc\xcf\xc7\xc4\xce\xa7\xc4\x22\x12\x7a\xce\x44\xb6\x18\x4d\xd0\xa5\xf8\x6f\x21\x04\xd9\x94\xc3\xa2\xe7\xb6\xe8\x52\x50\xec\x30\xf7\x0d\xac\xd1\x40\x28\x9b\x90\x28\x33\xbc\xdf\xeb\x03\xf1\xa1\xdc\x86\x44\x10\x69\x00\xb6\x14\xf3\x62\x62\xe9\x2a\x7b\xb6\x40\x98\xa8\x14\x8b\xfe\x57\x1a\x60\x5d\x4c\x86\xfd\x95\xbc\x9a\xcf\x5d\x1a\xd7\x72\x08\xf1\xe6\x97\xdb\xb7\x1f\xde\xfe\xfc\xfa\xfa\x46\xbe\xfe\xf4\xe6\xfa\xee\xd3\x6f\x1f\x0b\x21\x94\x35\xe8\x29\xfb\x76\x90\x08\x63\xfe\xe6\x1a\x74\x1b\x8c\x27\xb9\x8a\xa1\x6b\x87\xfe\x08\x91\x2c\x6c\xf0\x84\xcd\x50\x6c\x78\xda\xd7\x48\xa0\x93\x95\xd5\x08\xd4\xc5\x21\x68\x0c\x09\x89\x40\xb6\x10\x13\xc6\x52\xd4\x60\x13\xb7\xd8\xc4\x88\x3d\xc9\x98\x8f\xda\x24\x02\x06\x98\xb5\x91\x55\x10\x89\x45\xb0\x14\x37\xef\xef\x7e\xbf\xfd\xf4\xe1\xbe\x03\xf2\xe3\xeb\xeb\x9b\x9b\xf7\x77\x45\x56\x5d\x99\x91\xf9\x1b\x13\x55\x0c\x7b\x20\x45\xf0\x2b\x1c\x74\xf3\x45\x51\x77\x5e\x31\x13\xc0\xca\x5c\xc0\xd9\x59\x91\xf4\xba\xe7\x56\x47\x8d\x6c\x10\x34\x27\xda\xd7\xdc\xaf\x50\x58\xa3\x1f\x16\x0e\x2e\xc9\x3d\x17\x1b\xa2\x36\x95\xb3\x99\xaf\xe9\x1c\x5a\x73\xa1\x82\xf1\x15\x24\xbc\x50\xc1\xcd\xa0\x35\x33\xdc\xb6\xb3\xfd\xa3\xb3\x31\xe5\xd9\x90\xf2\x6c\xb3\x38\xaa\xfe\x11\x13\xd5\x9d\x1d\xd8\x97\x30\x6e\x32\xe2\x95\xf1\x7a\x8a\x6f\x83\x02\xcb\x4c\x2d\x5f\xcd\x5f\xcd\x8b\x64\x61\xaa\x7e\x50\x1d\x8d\x96\xa0\x14\xcb\xf9\xfc\x80\x7b\xe3\xfa\xc2\x5d\xce\x99\x81\xb8\x6d\x51\x11\xea\x3e\x8d\xda\x86\x3c\x27\xce\x85\x0b\xde\x50\x88\xfd\x77\x1b\xac\xc5\xfc\x99\x07\x0d\xc6\xd9\x3d\x39\xfe\xcf\x75\xb0\x90\x87\x5a\xa6\x9d\x57\xd2\x07\xbd\x0f\x70\x4e\x80\x0c\xb7\x78\xd9\x7f\x39\xc6\xc6\x2b\x94\x16\x12\x65\x79\x29\xc5\xd2\x15\x07\x19\x54\xa0\xd6\xb5\xe1\xb8\x99\x56\xa0\xc8\x6c\x78\x6e\x44\xa4\xb8\xe3\x31\x67\x5c\xe7\x24\x10\xa1\x6b\x29\x95\xe2\xf2\xd0\x2c\xa9\x06\x75\x67\x51\x52\x18\x2e\xed\x30\x70\x4a\x71\xe5\x1e\x98\xe6\xed\x20\x95\x0d\x09\x27\xbb\xc5\x3c\x1b\xee\x8f\xe1\xe5\xd5\x30\x04\x55\x83\x6a\x9d\xef\xcc\x38\xa0\x87\x1d\x9e\xc0\x11\xdb\x18\x14\xa6\x84\x9a\x05\x28\x4f\x72\x16\xc5\x3c\x40\x3b\x27\x55\xf0\xaa\x8b\x91\x9b\x88\x5b\x8a\xa0\x28\x30\x07\x2e\x07\x27\x04\x69\x2d\xad\x49\xfd\x98\xae\xa1\xb3\x59\xdd\xc7\x16\x49\x8d\xca\xb0\x5e\x4e\xd9\x2e\xdd\xa1\x05\x6e\x51\x75\x74\x68\xf2\xa2\x39\xb4\x31\x9a\x45\x92\x76\xe5\xfd\xd2\xc5\xd4\x77\x06\x01\xbd\x6a\x1c\x30\x3f\x9f\x1d\x05\xd5\x18\x3b\xb1\x74\xaf\xbc\xc7\x0e\xbe\x1c\x0e\x3e\x5f\x2b\xa7\xee\xb1\x90\xc4\x90\x92\x7c\xa0\xbc\x27\xfb\x79\xf5\x03\x59\xad\xd6\xa1\xae\x1f\xbe\x24\x0f\xe9\xbe\x78\x8c\xed\x8b\x91\xed\x2d\x44\xb0\x16\xad\x49\x8e\xc5\xf6\x89\x86\x0f\xa5\x0f\x33\x59\xa1\x27\x7e\x05\x64\xd5\xfb\x37\xe0\x78\x00\x00\x3f\xc8\xb3\xc6\x7d\x25\x14\xff\x7b\x5e\x28\xae\x1e\xd7\x9d\x6f\x04\xe2\xc7\xb7\x7a\x1a\x1e\x79\x74\x3c\xe8\x70\x83\x10\xa9\x42\x78\xa2\x65\xdf\x0f\xc2\xf2\xbb\x41\xb8\x4c\x27\xb8\x5f\xf3\xfc\xe2\x99\x37\xbd\x72\xb2\xfc\x0f\xff\x4b\x38\x29\x9e\x88\x3c\x01\xd4\x4e\xd9\xbd\x0b\x75\x04\xad\x94\x5f\xc0\x52\x45\x04\x3a\x86\xca\x68\x70\xff\x78\x9d\x82\x3e\x1b\xd2\xf7\x4f\x83\xf1\x61\xf0\x8f\xeb\xda\xd7\xe2\xb8\x3c\x01\xe3\xe1\x5d\x3a\x71\x99\x9e\xad\x9f\x63\x1b\x8b\x6c\xc6\xef\xc2\xfe\xdd\x75\x24\xa1\xbf\x02\x00\x00\xff\xff\x27\x44\xb7\xe5\xaa\x10\x00\x00")

func configChainstorageArbitrumMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageArbitrumMainnetBaseYml,
		"config/chainstorage/arbitrum/mainnet/base.yml",
	)
}

func configChainstorageArbitrumMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageArbitrumMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/arbitrum/mainnet/base.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageArbitrumMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xbb\x6e\xeb\x30\x10\x84\xe1\x9e\x4f\xb1\xf0\xa9\x45\xe8\xc4\x08\x02\xb3\x76\x8a\x34\x71\xa3\x5e\x58\x91\x63\x89\x10\x2f\x02\xb9\x92\x93\xb7\x0f\x4c\x04\x99\x69\x7f\x7c\xff\x68\x58\x7c\xa5\xbb\x0f\x20\x5f\x69\x46\x42\x61\x81\xa3\xe9\x9b\x4e\x91\x57\x90\xcd\xe9\xee\xe7\x93\xa6\xeb\x8d\x3e\x6f\x03\xbd\x5f\x3f\x06\xad\xf8\x51\x8d\x22\xe2\x47\x1d\xd9\xda\xbc\x27\x31\xe4\x70\x20\xe4\x2d\x22\x89\x22\x9a\x76\xbb\x42\x0c\xe1\x8b\xe3\x16\xd0\xd9\x85\x7d\xaa\x92\x0b\xcf\xe8\xb8\x4c\x5e\xca\x1e\xbb\xc8\x3e\x25\x48\xe7\x70\x28\xcb\x0e\xc9\xa2\xb9\xce\x15\xd4\x6a\x48\x10\xb7\x5c\x38\x3c\x03\xfd\x4b\x69\x9b\xa3\x79\x7b\x39\x9f\x55\x33\x9f\xfd\x14\xb2\x5d\xc7\x2a\x5c\x64\x5c\xe0\xe7\x45\x0c\xfd\x7f\xed\xdb\x54\x45\x39\x50\x5a\xe6\x93\x1b\xff\xec\x5e\xb7\x9b\x4b\x7f\xe9\xd5\x4f\x00\x00\x00\xff\xff\xb0\x89\x54\x72\x09\x01\x00\x00")

func configChainstorageArbitrumMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageArbitrumMainnetDevelopmentYml,
		"config/chainstorage/arbitrum/mainnet/development.yml",
	)
}

func configChainstorageArbitrumMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageArbitrumMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/arbitrum/mainnet/development.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageArbitrumMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x31\x0e\x82\x30\x14\x06\xe0\xbd\xa7\xf8\x83\x3b\x21\x71\xa2\x9b\xa6\x0e\x0e\x42\x0c\x2c\x4e\xe6\x41\x5f\xa1\xa1\x50\xed\xab\x03\xb7\x37\x0e\x1e\xe0\xfb\x0e\xe8\x67\x2f\x70\x3e\x30\xbc\x60\xe2\x8d\x13\x65\xb6\x18\x76\x14\x2b\x2d\x8c\x31\x6e\xce\x4f\x45\x09\xd3\xa2\x69\x7b\x5c\xcc\xb5\x2f\x95\xd8\x45\x2b\x60\x9c\xc9\x6f\x92\x63\xa2\x89\x9f\x64\x6d\x62\x11\x8d\x10\x47\x0a\x73\x94\xac\xeb\xaa\xae\x14\x90\x58\xb2\xfb\x04\x0d\x47\x41\x58\xfd\x41\xde\x5f\xfc\x5b\x86\x10\x07\x8d\xee\xa8\x00\x1b\xde\x1a\xdd\xbd\x53\xc0\xca\x99\x34\xcc\xa3\x39\xdd\x5a\x73\x56\xdf\x00\x00\x00\xff\xff\xa9\xb5\x4b\x15\xaa\x00\x00\x00")

func configChainstorageArbitrumMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageArbitrumMainnetLocalYml,
		"config/chainstorage/arbitrum/mainnet/local.yml",
	)
}

func configChainstorageArbitrumMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageArbitrumMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/arbitrum/mainnet/local.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageArbitrumMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x6e\xc3\x30\x0c\x84\xe1\x5d\x4f\x71\x48\x67\x1b\x46\x33\x14\xd1\x9c\x0e\x5d\x9a\xc5\x7b\x40\x53\x8c\x43\xc4\xa2\x0c\x4a\x6e\xda\xb7\x2f\x12\x14\xc5\xad\xf7\x7f\x2f\x18\xaf\x5a\x71\xd1\x45\xa0\x15\xb3\x98\x38\x35\x49\x98\x7e\xb0\xcb\x74\x13\x70\xb1\x8b\xce\xbb\x1e\xc7\x13\x3e\x4f\x23\xde\x8f\x1f\x63\x1f\xe8\x5e\x63\x00\xe8\x5e\xcf\xc4\x5c\x36\x6b\x11\xab\x97\xb4\x71\xd3\x62\x01\x98\x36\xbe\x49\x8b\x90\x6f\xca\xeb\x22\x1d\x5f\x49\xad\xb6\xe2\x34\x4b\x47\x3e\x69\xf3\x2d\x77\x99\xd4\x4c\x5a\xf7\x48\x03\x53\x12\x63\x79\xba\x29\xb9\xd4\x1a\xd1\x24\xaf\xc5\x69\xe9\xff\x9c\x9e\x4b\x8e\x6f\xaf\xfb\x7d\xa8\xe2\x5f\xe2\x8f\xf3\xa4\x96\xce\xff\xc5\xd0\x3f\x17\x0f\xc3\x61\x08\xbf\x01\x00\x00\xff\xff\x86\xa4\x5c\x69\xdf\x00\x00\x00")

func configChainstorageArbitrumMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageArbitrumMainnetProductionYml,
		"config/chainstorage/arbitrum/mainnet/production.yml",
	)
}

func configChainstorageArbitrumMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageArbitrumMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/arbitrum/mainnet/production.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageAvacchainMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x4d\x6f\x1b\x37\x10\xbd\xef\xaf\x20\xdc\xb3\xad\x95\x12\xa5\xcd\x02\x3d\xb8\x49\xd0\x1a\x69\xed\xa2\x30\x5a\xa0\x17\x62\x96\x9c\xd5\x12\xe2\x92\x1b\x72\x56\x91\xfa\xeb\x0b\x7e\x48\x2b\xc5\xb2\xa5\x20\x75\x7d\x5b\x91\xc3\xe1\xf0\xbd\xc7\x79\xd4\x77\xec\xbe\x55\x9e\x35\x4a\x23\x53\x9e\x2d\xd0\xa0\x03\x42\xc9\xea\x0d\xbb\xe8\x60\x89\x4c\x58\xd3\xa8\xc5\xc5\x15\x7b\x7f\xc7\x6e\xef\xee\xd9\x87\xf7\x37\xf7\x57\x05\xf4\xaa\x2a\x18\xeb\x60\xcd\xcd\xd0\xf1\x5a\x5b\xb1\xe4\x21\x8b\xaf\xd8\xb4\x2c\xcb\x2f\xe7\x7c\xc5\xe6\x61\x30\x0c\x7c\xb6\x6e\x89\x2e\x06\x16\x8c\x79\x72\x08\x9d\x32\x0b\x5e\x03\x89\x96\x7b\xf5\x0f\xe6\xe0\x71\x4a\x19\x42\xb7\x02\x5d\xb1\xa9\x3f\x98\x88\x9b\x58\x8e\x2b\x34\xc4\x49\x75\x18\xb2\x76\x05\x7c\xf6\xa1\x3c\xf8\xec\x39\x08\x61\x07\x43\x15\x93\xb8\x42\x6d\xfb\x0e\x0d\x15\x8c\xd5\x83\x58\x22\x55\xec\xe2\xa2\x60\x4c\xea\x4f\x21\x9c\x31\x89\x1a\x36\xdc\xa3\xf0\x15\x7b\x1b\x4f\xc1\x98\x81\x90\x15\xd7\xd0\xf5\x1a\xb9\x68\x41\x19\x4f\xd6\xc1\x02\xf3\xd1\x38\xac\x40\xc4\x71\xde\x81\x32\x06\x89\x4b\xfd\x29\xae\x5d\x29\xaf\x6a\xa5\x15\x6d\x62\x71\x76\xa0\x9c\xfc\x4d\x4c\x2e\x37\x06\x3a\x2b\xeb\xb4\x79\x02\x91\xa0\xd6\x5f\xbb\x5f\x5c\x9e\x31\x38\xb5\x3c\x61\x75\x46\x12\xde\xa2\x5a\xb4\xc4\x95\x91\xb8\x3e\x27\x63\xbd\xd9\x2e\x39\x9e\x7b\x85\xce\x2b\x6b\x50\xf2\xd3\xa5\x8e\xb1\x67\x14\x7d\x34\x71\x5e\xf8\x54\xf5\x8f\x6c\x52\x6f\xb6\x6b\xe5\xd1\x0d\x7b\x87\x5e\x2d\xc2\xb2\xc1\x69\x8e\xeb\x5e\x39\x20\x65\x4d\xc5\x5e\x95\x5d\xc1\x98\xc3\x45\xfc\x35\xf8\x4b\x04\x4f\x97\xd3\xa8\xd8\xb8\x65\x56\x19\x10\x70\x61\xbb\x90\xc8\xc7\xd0\x9f\xff\xbe\xf9\xbd\x10\x20\xd1\x88\x18\x03\x52\x86\xb9\xad\x3c\x6d\xd8\xbc\x62\xfb\xc5\x5f\xee\x2a\xbb\x1c\x2b\x73\x48\x68\x42\x29\xbc\x47\xa7\xac\xac\xd8\xf7\x05\x63\xa4\x7d\xda\x17\x4d\x00\x46\x56\x8c\xdc\x80\x09\x39\xd0\x4a\x02\x21\x6f\xad\xa7\x24\xf4\x38\x17\x13\x87\x45\x09\x08\x4f\xe0\x28\x93\x5b\xb1\xb2\x18\xb5\xba\x48\x99\x35\x10\x7a\xaa\xd8\x34\xfe\xf2\x99\xd9\xe9\x18\x18\x6f\xe6\xcc\x6f\x07\x52\x7e\xf6\xd3\xaf\x77\xef\x3e\xbe\xfb\xe5\xfa\xe6\x96\x5f\xff\x79\xfd\x2e\x7e\x15\x8c\x09\xad\xd0\x50\xca\xdc\x81\x27\x74\xe9\x3b\x9c\x40\xf6\x56\x19\xe2\x0b\x67\x87\x3e\xc3\xc3\x98\xd7\xb0\xc2\x13\x31\xf9\xa8\xf6\xe9\x5c\x5b\x01\x9d\x3c\x57\x83\x40\x83\xcb\x9b\x3a\xeb\x91\x08\x78\x0f\xce\xa3\xab\x58\x03\xda\x07\x80\x95\x73\x18\x45\x16\xf4\x28\x95\x27\x08\xfc\x86\x06\x19\x5a\x21\x52\xe8\x84\x15\xbb\xfd\x70\xff\xd7\xdd\x1f\x1f\x47\x08\xf8\x6f\xd7\x37\xb7\xb7\x1f\xee\x8b\xd4\x7b\x79\x22\xe6\xa1\x14\x85\xb3\x7b\x24\x39\x30\x0b\xcc\xed\xf3\x75\xd1\x0c\x46\x04\x25\x80\xe6\xe9\x08\x17\x17\x85\x97\xcb\x28\xae\x81\x5a\xde\x22\xc8\x50\x6a\x3c\x75\x1c\x21\xbb\x44\x93\x07\x0e\xae\xc9\x4e\x8c\x2d\x51\xef\xab\xc9\xc4\x34\x74\x09\xbd\xba\x12\x56\x99\x1a\x3c\x5e\x09\xdb\x4d\xa0\x57\x13\x5c\xf7\x93\xfd\xa5\x93\x5d\xcd\x93\x5c\xf3\x64\x35\x3d\xea\x02\x0e\x3d\x35\x83\xce\xf2\xf3\xe8\x56\x89\xf4\x5a\x19\x39\x16\xa0\xad\x00\x1d\xa4\x5a\xbd\x2d\xdf\x96\x85\xd7\x30\x1e\x3f\xb7\x1e\x89\x9a\xa0\x62\xb3\xf2\x40\x7b\xdb\xe1\x79\xb8\x9f\xb8\xee\x51\x10\xca\x58\x42\xa3\x6d\xf2\x8a\x4b\xd6\x59\xa3\xc8\xba\xf8\xdd\x5b\xad\x31\x7d\x26\xb3\x41\x37\xd9\x69\xe3\xc7\x69\x9c\x08\xd7\x58\xc3\x12\x27\xbb\xcb\x90\x27\x84\xb3\xde\xf3\x9d\xe0\x0a\xc6\x42\xe3\xb7\x0d\xf7\x1b\x23\xb8\xb1\x72\x5f\x0c\xd1\xe9\x48\x05\x2e\x66\xf1\xab\x0b\x24\x1a\x81\x5c\x83\xa7\xd4\x89\x92\xa9\x1d\x94\x5b\x83\x58\x36\x2a\x14\x99\x24\x08\x82\xd4\x2a\xf8\x8c\x43\x72\x9b\xe0\x8b\xaa\x1b\x3a\x0e\x44\xd8\xf5\xe4\x2b\xf6\xea\x30\xcc\x8b\x16\xe5\xa0\x91\x93\xcd\xd7\x3b\x1b\x54\x06\x69\x3f\x34\x4d\x5b\x2e\xb4\xf5\x38\xc6\x4d\xcb\x14\xb8\xef\xdb\xb3\x79\x76\x4d\xd1\xa2\x58\xa6\xfb\xb5\x75\xf4\x3c\x13\x2c\xdb\x61\xef\xac\x40\xef\x51\x86\x56\x95\xac\x3f\xf4\xcf\xe4\xb8\x43\xc7\x85\x35\x62\x70\x2e\x20\x8e\x6b\x72\x20\xc8\x26\xb1\xa4\x10\x02\xbf\xe4\x5a\xf9\xe8\xeb\x0d\x0c\x3a\x39\xc1\x16\x22\x2e\x51\xa8\xd0\x5a\xc7\x6a\x67\xdd\x61\x04\xae\x51\x0c\x74\x18\xf2\xba\x3d\x8c\x51\x32\xb4\x53\xda\x54\xbb\xa1\xab\x11\xf7\x40\x02\x1a\xd1\x76\x10\x84\xfc\xe2\x2c\x88\x56\xe9\x51\xd2\x7b\xc7\x7b\x6c\xe1\x9b\xbc\xf0\xe5\xa0\x1c\xd1\x0b\x2d\xe7\xf0\xd2\x9c\x89\xe7\xfc\x19\x55\x2d\x96\xb6\x69\xf6\x9e\x9e\xf3\xb2\xec\xfc\x03\xc5\x4f\xcb\xc7\x14\xbf\x9b\xe9\xc1\x81\xd6\xa8\x95\xef\x42\x6b\x7e\x02\xf4\x7c\xfc\xec\xe0\x02\x0d\x85\x47\x43\xb6\x9f\xe7\x67\xe4\x61\xe3\xca\x3d\xf1\x4c\x36\x7e\xf8\x1f\xd9\x98\x96\x0f\xb9\x98\x3f\xde\x7b\xbe\x92\x88\xe7\xc7\x7a\x74\x9b\xe4\x35\x5f\x40\xdc\x22\x38\xaa\x11\x9e\xc0\xec\xdb\x59\x98\x7d\x33\x0b\xaf\xfc\x09\xed\x37\xc1\xc4\x82\xef\x8d\xaf\xa2\x64\x01\xf9\xbf\x4c\x28\x2a\xb8\x62\x70\x01\xb1\x11\x1a\xc7\x1e\x7f\x84\x2d\x9f\x1e\xcc\x5c\x38\x04\x3a\xc6\xca\x36\x60\xf7\xd4\x1d\x37\x7d\x31\xa6\x77\x6f\x89\xed\x4b\xe2\x3f\xef\x6d\xe7\xf2\x38\x3b\x41\xe3\xe1\x5d\x3a\x71\x99\x5e\x0c\xcf\x2d\x8c\x45\x0a\x0b\x8f\xc8\xf8\xec\x3a\x52\xd0\xbf\x01\x00\x00\xff\xff\xaf\xf2\x6b\xd1\xdf\x10\x00\x00")

func configChainstorageAvacchainMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageAvacchainMainnetBaseYml,
		"config/chainstorage/avacchain/mainnet/base.yml",
	)
}

func configChainstorageAvacchainMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageAvacchainMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/avacchain/mainnet/base.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageAvacchainMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xb1\x4e\xc4\x30\x0c\x86\xf7\x3c\x85\x75\xcc\xad\x0a\x27\x81\x2e\xf3\x31\xb0\x70\xcb\xed\x95\x9b\xb8\x6d\xd4\x24\xae\x62\x5f\x0b\x6f\x8f\x2e\x9c\xd8\xb0\x27\x5b\x9f\x3f\xeb\x7f\x82\xeb\x1c\x04\xc6\x10\x09\x82\xc0\x44\x99\x0a\x2a\x79\x18\xbe\xe1\x90\x70\x21\x70\x9c\xc7\x30\x1d\x5a\x38\x5f\xe0\xf3\x72\x85\xf7\xf3\xc7\xb5\x35\xb8\x8b\x35\x00\xb8\x4b\x8f\xce\xf1\x2d\xab\x05\x4f\x1b\x45\x5e\x13\x65\x35\x00\xc3\xcd\x2d\xa4\x16\xe8\x0b\xd3\x1a\xa9\x71\x33\x86\x2c\xca\x05\x27\x6a\x70\x43\x57\x17\x4d\xc2\x90\x33\x69\xe3\x69\x33\x0e\x3d\x65\x47\x55\xec\x7d\x21\x11\x0b\x4a\x69\xe5\x82\xf1\x0e\xb4\x0f\x57\xeb\x38\xd9\xb7\x97\xe3\xd1\x54\xc7\x9d\x1f\x22\xbb\xa5\x17\xc5\xa2\xfd\x4c\x61\x9a\xd5\xc2\xf3\x6b\x57\xcb\x08\x95\x8d\x4a\xc5\x42\xf6\xfd\x9f\xbb\x6b\x6b\xdb\x53\x77\xea\xcc\xce\x65\x19\x23\xff\xe6\x72\x85\x45\xfa\x0d\x63\xf0\xa8\x5c\x4f\x01\x1e\x63\xe0\xfc\xdf\xa3\x9f\x00\x00\x00\xff\xff\x23\xb5\x99\xb5\x4e\x01\x00\x00")

func configChainstorageAvacchainMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageAvacchainMainnetDevelopmentYml,
		"config/chainstorage/avacchain/mainnet/development.yml",
	)
}

func configChainstorageAvacchainMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageAvacchainMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/avacchain/mainnet/development.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageAvacchainMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8c\x31\x6f\xc2\x30\x10\x85\x77\xff\x8a\x27\x3a\xc7\x8a\xca\x50\xe1\x99\x0e\x5d\xca\x92\x1d\x5d\xce\x47\xb0\x88\xcf\x91\xcf\x81\xf6\xdf\x57\x44\x15\x7a\xdb\xd3\xf7\x7d\x6f\x18\xae\xc9\x70\x49\xb3\x20\x19\x26\x51\xa9\xd4\x24\x62\xfc\xc5\x2e\xd3\x4d\xc0\x45\x2f\x69\xda\x79\x1c\x4f\xf8\x3e\x0d\xf8\x3c\x7e\x0d\xde\xd1\xc3\x82\x03\xe8\x61\x67\x62\x2e\xab\xb6\x80\xa5\x96\xb8\x72\x4b\x45\x1d\x30\xae\x7c\x93\x16\x20\x3f\x94\x97\x59\x3a\xbe\x52\x52\x6b\xa5\xd2\x24\x1d\xdd\x89\xb7\xa3\xcb\x94\x54\xa5\x75\x4f\xd7\x31\x45\x51\x96\x2d\x1c\x63\x15\xb3\x80\x26\x79\x29\x95\x66\xff\x1f\xf2\x5c\x72\xf8\x78\xdf\xef\x9d\x49\xbd\x4b\x7d\xc2\x63\xd2\x78\x7e\x19\xbd\xdf\x16\x0e\xfd\xa1\x77\x7f\x01\x00\x00\xff\xff\xd2\xcf\x66\x71\xe0\x00\x00\x00")

func configChainstorageAvacchainMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageAvacchainMainnetProductionYml,
		"config/chainstorage/avacchain/mainnet/production.yml",
	)
}

func configChainstorageAvacchainMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageAvacchainMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/avacchain/mainnet/production.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBitcoinMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5b\x6f\x1b\x37\x13\x7d\xdf\x5f\x31\xf0\xf7\x6c\xeb\x92\x28\x5f\xb3\x6f\xb9\xa1\x35\xd2\xda\x45\x61\xa0\x40\x5f\x88\x11\x39\xab\x25\xc4\x25\x37\xe4\xac\x22\xf5\xd7\x17\xbc\xc8\x2b\x29\x76\xe4\xa0\x4d\xfc\xa6\xdd\x1d\xce\xed\x1c\xce\x19\xfd\x0f\xee\x5a\x1d\xa0\xd1\x86\x40\x07\x58\x91\x25\x8f\x4c\x0a\x96\x3b\xb8\xe8\x70\x4d\x20\x9d\x6d\xf4\xea\xe2\x0a\xde\xdf\xc2\xcd\xed\x1d\x7c\x78\x7f\x7d\x77\x55\x61\xaf\xeb\x0a\xa0\xc3\xad\xb0\x43\x27\x96\xc6\xc9\xb5\x88\x5e\x42\x0d\xb3\xe9\x74\x7a\xfa\x2d\xd4\xb0\xa8\x00\xe2\xf3\x67\xe7\xd7\xe4\x93\x5d\x05\x10\xd8\x13\x76\xda\xae\xc4\x12\x59\xb6\x22\xe8\xbf\xa9\x86\xc5\xf1\x27\x6d\x99\xfc\x06\x4d\x0d\xb3\x70\xf4\x21\xc5\x70\x82\x36\x64\x59\xb0\xee\xa8\x86\x17\xd3\xae\xc2\xcf\x21\x66\x87\x9f\x83\x40\x29\xdd\x60\xb9\x06\x45\x1b\x32\xae\xef\xc8\x72\x05\xb0\x1c\xe4\x9a\xb8\x86\x8b\x8b\x0a\x40\x99\x4f\xd1\x1c\x40\x91\xc1\x9d\x08\x24\x43\x0d\xaf\x53\x11\x00\x16\xa3\x57\xda\x62\xd7\x1b\x12\xb2\x45\x6d\x03\x3b\x8f\x2b\x2a\x95\x89\xa5\x66\xe9\xb4\x15\x1d\x6a\x6b\x89\x85\x32\x9f\xd2\xc9\x8d\x0e\x7a\xa9\x8d\xe6\x5d\x4a\xcd\x0d\x5c\x5c\xbf\x4a\xae\xd5\xce\x62\xe7\xd4\x32\x87\xce\x1d\x64\x5c\x9a\x6f\x8b\x96\x0e\x97\xfa\xcf\x1d\xce\x7d\x3a\xeb\x42\xb4\xa4\x57\x2d\x0b\x6d\x15\x6d\x9f\xe4\x6f\xb7\x3f\xf2\x90\xe7\x0d\xf9\xa0\x9d\x25\x25\xce\xa7\x39\xda\x9e\x4d\xf8\x41\xb7\xe5\xd8\xd7\x32\x7f\x2c\xc4\x6e\x7f\x56\x3d\x10\xae\xf7\x14\xf4\x2a\x1e\x1a\xbc\x11\xb4\xed\xb5\x47\xd6\xce\x66\xba\x01\x78\x5a\xa5\xa7\x21\x5c\x12\x06\xbe\x9c\x25\x96\xa6\x80\x85\x59\xc8\x28\xa4\xeb\xa2\xa3\x90\x4c\x7f\xfe\xeb\xfa\xf7\x4a\xa2\x22\x2b\x93\x0d\x2a\x15\xbf\xed\x29\xe9\x62\xf0\x1a\x0e\x53\xbf\x2c\x79\x5d\x8e\x79\x79\x62\xb2\x31\x11\xd1\x93\xd7\x4e\xd5\xf0\xff\x0a\x80\x4d\xc8\x51\xc9\xc6\xa6\xa8\x1a\xd8\x0f\x94\xbb\x86\x46\x2b\x64\x12\xad\x0b\x9c\xa9\x9d\xbe\xa5\x38\xf1\x50\x6e\x42\x60\xf4\x5c\x40\xad\x61\x5a\x8d\xfc\x5c\x65\xcf\x06\x99\x02\xd7\x30\x4f\x4f\xa1\x60\x3a\x1f\x0d\xd3\x5d\x9c\xa5\xe6\xa4\x37\x39\x00\xbc\xfd\xf5\xf6\xdd\xc7\x77\xbf\xbc\xb9\xbe\x11\x6f\xaf\xef\xde\xdd\x5e\xdf\x54\x00\xd2\x68\xb2\x9c\x1d\x77\x18\x98\x7c\xfe\x1d\x0b\x50\xbd\xd3\x96\xc5\xca\xbb\xa1\x2f\xbd\x01\x08\x06\x37\x74\xc6\xa6\x54\xea\xbe\xee\x6b\xcf\x9d\x93\xb2\xa6\x47\x65\xc5\xa7\x86\x90\x07\x5f\x82\x7a\x17\x88\x19\x45\x8f\x3e\x90\xaf\xa1\x41\x13\x62\x7f\xb5\xf7\x94\xf8\x15\xa9\xa8\x74\x60\x8c\xe0\xc2\x8b\x38\xf9\x88\xe3\xe0\xab\xe1\xe6\xc3\xdd\x9f\xb7\x7f\x7c\xdc\x97\x2f\x7e\x7b\x73\x7d\x73\xf3\xe1\xae\xca\x73\x56\x64\x4c\x4e\x19\x28\xbd\x3b\x40\xc7\xa3\x5d\x51\x99\x94\xb1\xe5\x4a\x87\x44\x7e\x65\x3e\x89\xde\x3b\x49\x21\x38\x5f\x80\x6d\x06\x2b\x23\x41\xd0\x88\x5c\xda\xc5\x45\x15\xd4\x3a\x31\x6e\xe0\x56\xb4\x84\x2a\x96\x90\xba\x91\xde\xb0\x5b\x93\x2d\x2f\x8e\x6e\xce\x3d\x43\x5b\xe6\x3e\xd4\x93\x89\x6d\xf8\x12\x7b\x7d\x15\x53\x5d\x62\xa0\x2b\xe9\xba\x09\xf6\x7a\x42\xdb\x7e\x72\x78\x74\x52\xea\x99\x94\x7a\x26\x9b\xd9\x83\x62\xe0\x29\x70\x33\x98\x92\x7a\x20\xbf\xc9\x54\x58\x6a\xab\xc6\xf0\xc6\x49\x34\x91\xbf\xf5\xeb\xe9\xeb\x69\x15\x0c\x8e\xad\x29\x73\x48\x91\x61\xcc\x92\x33\xf2\x71\xff\x76\xd6\xe6\x4b\x4b\xdb\x9e\x24\x93\x4a\x49\x34\xc6\x65\xd1\xb8\x84\xce\x59\xcd\xce\xa7\xdf\xbd\x33\x86\xf2\xcf\xac\x3a\xe9\x21\x8e\x72\xd7\x88\xb0\xb3\x52\x58\xa7\x0e\xb1\x4e\x75\xb0\x8e\x2d\x9d\xa7\x5f\x5d\x44\xca\x4a\x12\x06\x03\xe7\x19\xb3\x4f\xe1\x28\xee\x12\xe5\xba\xd1\x31\x5a\xe6\x18\x4a\xd6\x9b\xa8\x1d\x9e\xd8\xef\xa2\xd2\xe9\x6e\xe8\x04\x32\x53\xd7\x73\xc8\xac\x3a\x30\x0b\xb2\x25\x35\x18\x12\xec\xca\xf5\x2d\xa2\x53\xc3\xa2\x3b\x31\xcd\x9f\x9d\x90\xc6\x05\x1a\xed\xf2\x75\x8d\xa9\x8c\x4a\x3c\x5f\x14\x1d\x94\x2d\xc9\x75\xbe\x40\x7b\x8d\x2e\x5f\xa2\x08\x7b\x2a\xc4\x23\x15\x47\x51\x16\xf3\x38\x1d\xb3\x86\x0e\x9d\x90\xce\xca\xc1\xfb\x78\xdd\x68\xcb\x1e\x25\xbb\x88\xfb\x7c\x96\x2c\x18\xc3\x5a\x18\x1d\x92\x50\x37\x38\x98\x3c\xe4\xf7\x1d\x12\x8a\xa4\x8e\x73\x73\x4c\x76\xde\x1d\x5b\xd0\x96\xe4\xc0\xc7\x26\x2f\xdb\x63\x1b\xad\xe2\xb4\xe4\x5d\x7d\xff\xea\x6a\x6c\x7b\xc4\x80\xac\x6c\x3b\x8c\x94\x7c\x76\x10\x64\xab\xcd\x48\xcd\x83\xf2\x1e\x3b\xf8\xaa\x1c\x7c\xbe\x56\x8e\xdd\x8b\xa3\xc3\xbb\x10\xc4\xc9\x14\x3e\xdb\xcf\xc5\x77\x24\xb5\x5c\xbb\xa6\x39\xdd\x25\x8f\xd9\x3e\x7b\x8c\xec\xb3\x3d\xd9\x7b\xf4\x68\x0c\x19\x1d\xba\x1a\x5e\x7e\xad\xe1\xa5\xf4\x22\xce\x92\x2c\xc7\x6d\x20\x0f\x88\x1f\x01\xc7\x09\x00\x71\x23\xcf\x83\xed\x89\x50\xfc\xf4\x23\xa1\x98\x7e\x89\xc5\xe2\x11\x28\xe6\x8b\x6f\x45\xe2\xfb\xf7\x7a\x94\x8c\x2c\x18\x27\x2d\x6e\x09\x3d\x2f\x09\x0f\x7a\x36\x3b\x6d\xda\xbf\x87\x61\xfe\x44\x18\x5e\x9c\x85\xe1\x71\xfa\x37\x51\xc4\xa2\xee\x8d\x4b\x4f\x16\x80\xf2\xef\x24\x66\x15\x55\x31\x6a\x80\xdc\xc9\xb8\x3d\x2d\xbe\x44\xab\xdc\x81\x90\x77\x61\x21\x3d\x21\x3f\x04\xcb\xde\xe0\x7e\x8f\x1d\x63\x3e\x1b\xd4\xf7\x1b\xc1\x7e\x1f\xf8\xcf\x27\xdb\x53\x71\x9c\x7f\xdb\x6d\x7a\x5c\xc6\x9f\xb7\xa1\x07\x7b\xd5\x7e\x1b\x4c\xfb\xd6\x03\x09\xfd\x13\x00\x00\xff\xff\xa3\x65\xda\x10\xae\x10\x00\x00")

func configChainstorageBitcoinMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBitcoinMainnetBaseYml,
		"config/chainstorage/bitcoin/mainnet/base.yml",
	)
}

func configChainstorageBitcoinMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageBitcoinMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bitcoin/mainnet/base.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBitcoinMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\xbd\x6e\xc3\x30\x0c\x06\x77\x3d\x05\x91\xce\x36\xdc\x66\x28\xa2\x39\x1d\xba\x34\x4b\x76\x83\x96\xbe\xc4\x84\xf5\x63\x48\x8c\xd3\xf4\xe9\x0b\x3b\x45\xc1\x91\x77\x87\xef\x85\xce\xa3\x54\xba\x48\x00\x49\xa5\x2b\x12\x0a\x2b\x3c\x0d\x0f\xda\x45\x9e\x40\x2e\xa7\x8b\x5c\x77\x2d\x1d\x4f\xf4\x75\x3a\xd3\xc7\xf1\xf3\xdc\x1a\xbe\x57\x6b\x88\xf8\x5e\x7b\x76\x2e\xdf\x92\x5a\xf2\x58\x10\xf2\x1c\x91\xd4\x10\x0d\x37\x37\x41\x2d\xe1\x9b\xe3\x1c\xd0\xb8\x91\x25\x55\xcd\x85\xaf\x68\x06\x51\x97\x25\x35\x91\x25\x25\x68\xe3\xb1\x18\xc7\x1e\xc9\x61\xcb\x7a\x5f\x50\xab\x25\x45\x9c\x73\xe1\xb0\x02\xed\x5f\xa9\x75\x39\xda\xf7\xb7\xfd\xde\x54\x94\x05\x65\x15\x06\x49\xbe\xff\xb7\xba\x76\x3b\x7b\xe8\x0e\x9d\xb9\xe7\x32\x5d\x42\x7e\xee\x9d\x73\x08\x4f\x83\x88\x9d\xca\x22\xfa\xe8\x47\x70\xd1\x01\xac\xbd\x4a\x44\xbe\xa9\xa5\xd7\x2e\x6e\x8c\x1b\xe1\xa6\x39\x4b\xd2\xbe\xca\x0f\xd6\x47\x67\x7e\x03\x00\x00\xff\xff\xdc\x01\x01\x89\x34\x01\x00\x00")

func configChainstorageBitcoinMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBitcoinMainnetDevelopmentYml,
		"config/chainstorage/bitcoin/mainnet/development.yml",
	)
}

func configChainstorageBitcoinMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageBitcoinMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bitcoin/mainnet/development.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBitcoinMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x31\x0e\x82\x30\x14\x06\xe0\xbd\xa7\xf8\x83\x3b\x21\x71\xa2\x9b\xa6\x0e\x0e\x42\x0c\x2c\x4e\xe6\x41\x5f\xa1\xa1\x50\xed\xab\x03\xb7\x37\x0e\x1e\xe0\xfb\x0e\xe8\x67\x2f\x70\x3e\x30\xbc\x60\xe2\x8d\x13\x65\xb6\x18\x76\x14\x2b\x2d\x8c\x31\x6e\xce\x4f\x45\x09\xd3\xa2\x69\x7b\x5c\xcc\xb5\x2f\x95\xd8\x45\x2b\x60\x9c\xc9\x6f\x92\x63\xa2\x89\x9f\x64\x6d\x62\x11\x8d\x10\x47\x0a\x73\x94\xac\xeb\xaa\xae\x14\x90\x58\xb2\xfb\x04\x0d\x47\x41\x58\xfd\x41\xde\x5f\xfc\x5b\x86\x10\x07\x8d\xee\xa8\x00\x1b\xde\x1a\xdd\xbd\x53\xc0\xca\x99\x34\xcc\xa3\x39\xdd\x5a\x73\x56\xdf\x00\x00\x00\xff\xff\xa9\xb5\x4b\x15\xaa\x00\x00\x00")

func configChainstorageBitcoinMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBitcoinMainnetLocalYml,
		"config/chainstorage/bitcoin/mainnet/local.yml",
	)
}

func configChainstorageBitcoinMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageBitcoinMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bitcoin/mainnet/local.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBitcoinMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x4f\xc3\x30\x10\xc5\xf1\xdd\x9f\xe2\xa9\xcc\xb1\x22\x3a\xa0\x7a\x2e\x03\x0b\x5d\xb2\x57\xe7\xf3\x35\x3d\x35\x3e\x47\xb6\x43\xe1\xdb\xa3\x56\x08\xbd\xf5\xfd\x7f\x2f\x98\xae\xda\x70\xd1\x45\xa0\x0d\xb3\x98\x54\xea\x92\x10\x7f\xb0\xcb\x74\x13\x70\xb1\x8b\xce\x3b\x8f\xe3\x09\x9f\xa7\x09\xef\xc7\x8f\xc9\x3b\xba\xb7\xe0\x00\xba\xb7\x33\x31\x97\xcd\x7a\xc0\x5a\x4b\xda\xb8\x6b\x31\x07\xc4\x8d\x6f\xd2\x03\xe4\x9b\xf2\xba\xc8\xc0\x57\x52\x6b\xbd\x54\x9a\x65\x88\xda\xb9\xa8\x0d\x99\xd4\x4c\xfa\xf0\x28\x1d\x53\x12\x63\x79\xb2\x29\x55\x69\x2d\xa0\x4b\x5e\x4b\xa5\xc5\xff\x31\x9e\x4b\x0e\x6f\xaf\xfb\xbd\x6b\x52\xbf\xa4\x3e\xce\x51\x2d\x9d\xff\x8b\xd1\x3f\x17\x0e\xe3\x61\x74\xbf\x01\x00\x00\xff\xff\x62\xf1\xd6\xf7\xde\x00\x00\x00")

func configChainstorageBitcoinMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBitcoinMainnetProductionYml,
		"config/chainstorage/bitcoin/mainnet/production.yml",
	)
}

func configChainstorageBitcoinMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageBitcoinMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bitcoin/mainnet/production.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBscMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5b\x6f\xe3\xb6\x12\x7e\xd7\xaf\x20\x72\x9e\x13\x5f\xb2\xd9\x73\x56\xc0\x79\xd8\x1b\xce\x09\xb6\x4d\x8a\x36\x40\x81\xbe\x10\x23\x72\x64\x11\xa6\x48\x2d\x39\xf2\xda\xfd\xf5\xc5\x90\x52\x64\xbb\x71\x92\x45\x77\x37\x6f\x32\x39\x9c\xcb\x37\x1f\xbf\xa1\xff\x25\xee\x1a\x13\x45\x6d\x2c\x0a\x13\xc5\x0a\x1d\x06\x20\xd4\xa2\xda\x89\xb3\x16\xd6\x28\x94\x77\xb5\x59\x9d\x5d\x88\x0f\xb7\xe2\xe6\xf6\x4e\x7c\xfc\x70\x7d\x77\x51\x40\x67\xca\x42\x88\x16\xb6\xd2\xf5\xad\xac\xac\x57\x6b\xc9\x5e\x62\x29\x16\xf3\xf9\xfc\x78\x2f\x96\xe2\x8a\x17\x79\xe1\x8b\x0f\x6b\x0c\xc9\xb0\x10\x22\x52\x40\x68\x8d\x5b\xc9\x0a\x48\x35\x32\x9a\x3f\x71\x30\x9e\xb6\x8c\x23\x0c\x1b\xb0\xa5\x58\xc4\x83\x8d\x14\xc4\x4b\xdc\xa0\x23\x49\xa6\x45\xf6\xda\x16\xf0\x25\x72\x7a\xf0\x25\x4a\x50\xca\xf7\x8e\x4a\xa1\x71\x83\xd6\x77\x2d\x3a\x2a\x84\xa8\x7a\xb5\x46\x2a\xc5\xd9\x59\x21\x84\xb6\x9f\xd9\x5c\x08\x8d\x16\x76\x32\xa2\x8a\xa5\x78\x93\xaa\x10\xc2\x01\x7b\xc5\x2d\xb4\x9d\x45\xa9\x1a\x30\x2e\x92\x0f\xb0\xc2\xa1\x34\x59\x45\x25\x5b\x30\xce\x21\x49\x6d\x3f\xa7\x53\x1b\x13\x4d\x65\xac\xa1\x5d\x4a\xcb\xf7\x34\xb8\x7d\x9d\xdc\xea\x9d\x83\xd6\xeb\x2a\x87\xcd\xf0\x11\x54\xf6\xf9\x91\xd2\xc1\xa1\xee\xa7\x0e\x66\x7c\x1e\x3d\x2e\x1b\x34\xab\x86\xa4\x71\x1a\xb7\xcf\xf2\xb5\x1b\x8f\x1c\x7b\xdd\x60\x88\xc6\x3b\xd4\xf2\xe9\xf4\x26\xdb\x47\x13\x7d\xd0\xe5\x70\xe4\xb1\x8c\x4f\xb9\xdf\x8d\x67\xf5\x51\xa8\x2e\x60\x34\x2b\x3e\xd0\x07\x2b\x71\xdb\x99\x00\x64\xbc\x2b\xc5\xe5\xbc\x2d\x84\x08\xb8\x4a\xbf\xfa\x78\x8e\x10\xe9\x7c\x91\xd8\x98\x82\x0d\x0c\x02\x02\xa9\x7c\xcb\x8e\x62\x32\xfd\xdf\x1f\xd7\xbf\x14\x0a\x34\x3a\x95\x6c\x40\x6b\xde\x1b\xa9\xe7\x39\x78\x29\xf6\xd3\x3e\xaf\xa2\x3a\x9f\x72\x0a\x48\xe8\x38\x09\xd9\x61\x30\x5e\x97\xe2\xdf\x85\x10\x64\x63\x8e\x88\x8e\xc1\xd0\xa5\xa0\xd0\x63\x46\x0b\xac\xd1\x40\x28\x1b\x1f\x29\xd3\x37\xed\xa5\x18\x7c\x28\x17\x1f\x09\x02\x0d\x4d\x2c\xc5\xbc\x98\x78\xb8\xca\x9e\x2d\x10\x46\x2a\xc5\x32\xfd\x8a\x43\x1f\x97\x93\x61\xba\x6f\x97\x71\x5c\xc8\xfe\xc5\xbb\x9f\x6e\xdf\x7f\x7a\xff\xff\xb7\xd7\x37\xf2\xdd\x6f\xef\x0b\x21\x94\x35\xe8\x28\xfb\x6c\x21\x12\x86\xfc\xcd\xb9\xeb\xce\x1b\x47\x72\x15\x7c\xdf\x0d\x90\x08\x11\x2d\x6c\xf0\x09\x9b\xa1\x48\xff\xb8\xaf\x91\x2e\x47\x15\x2d\x0e\x2a\xe2\x5f\x35\x02\xf5\x61\x08\x1a\x7c\x44\x22\x90\x1d\x84\x88\xa1\x14\x35\xd8\xc8\xd0\x9a\x10\x30\x51\x8a\xd9\xa7\x4d\x24\xe0\x9e\xb2\xe0\xb1\xb4\x21\xb1\xb2\x95\xe2\xe6\xe3\xdd\xef\xb7\xbf\x7e\xe2\xe2\xe5\xcf\x6f\xaf\x6f\x6e\x3e\xde\x15\x59\x45\x65\x6e\xc6\x3e\xe5\x54\xf0\x7b\x2d\x09\xe0\x56\x38\x48\xe0\x2b\x66\x87\x89\x89\xe9\xce\x6b\x94\x0a\x1c\x84\xdd\x94\xcd\xb8\xd9\x79\x6b\x59\x0b\x4f\xed\x4f\x6a\x79\x68\x51\xf7\x4e\x31\xad\xc0\xca\x8c\xca\xd9\x59\x11\xf5\x3a\x71\xb4\xa7\x46\x36\x08\x9a\xab\x4f\x40\xa6\x15\xf2\x6b\x74\xc3\xc2\xc1\x3d\xbb\xe7\x74\x43\xd4\xc5\x72\x36\x73\x35\x9d\x43\x67\x2e\x94\x37\xae\x82\x88\x17\xca\xb7\x33\xe8\xcc\x0c\xb7\xdd\x6c\xff\xe8\xac\x8a\x6a\x36\x80\x31\xdb\x2c\x1e\x1c\x11\x01\x23\xd5\xbd\x1d\x58\x1c\x31\x6c\x32\x83\x2a\xe3\xf4\x14\xda\x7a\x05\x96\x19\x5f\xbe\x99\xbf\x99\x17\xd1\xc2\x84\xeb\xa0\x54\x1a\x2d\xc1\x30\x5c\x26\x0a\x8f\xcb\x4b\xbe\xe0\xb8\xed\x50\x11\xea\x94\x42\x6d\x7d\x1e\x24\xe7\xa2\xf5\xce\x90\x0f\xe9\x9b\x01\xc7\xfc\x99\xb1\xc5\x30\xbb\x27\xda\x7f\xb9\x06\x96\x7b\x5f\xcb\xb8\x73\x2a\xf7\x6e\x22\x4b\x0a\x4e\x86\x81\x5d\xa6\xaf\x96\x1b\xee\x14\x4a\x0b\x91\xb2\x2e\x95\xe2\xb2\x2d\x0e\x12\xa8\x40\xad\x6b\xc3\x61\x33\x43\x41\x91\xd9\xf0\x70\x09\x48\x61\xc7\x63\xd0\xb4\x7d\x2b\x81\x08\xdb\x8e\x62\x29\x2e\x0f\xcd\xa2\x6a\x50\xf7\x16\x25\xf9\xe1\xde\x0f\x53\xa9\x14\x57\xed\x91\x69\xde\xf6\x52\x59\x1f\x71\xb2\x5b\xcc\xb3\xe1\xfe\x98\x5e\x5e\x0d\x43\x52\x35\xa8\xd6\xf9\xfa\x8d\x03\x7c\xd8\xe1\x09\x1d\xb0\x0b\x5e\x61\x8c\xa8\x59\xc3\xf2\xa4\x67\x49\xcd\x03\xb6\x6f\xa5\xf2\x4e\xf5\x21\x30\x86\xb8\xa5\x00\x8a\x7c\x6a\xff\xeb\x64\x41\x10\xd7\xd2\x9a\x98\xa6\x78\x0d\xbd\xcd\x53\x61\x44\x48\x6a\x54\x86\xc5\x76\x4a\x76\xd9\x1e\x5a\xe0\x16\x55\x4f\x87\x26\xaf\x9a\x43\x1b\xa3\x59\x66\x69\x57\xde\x2f\x5d\x4c\xb0\x73\x0f\xd0\xa9\xa6\x05\x66\xe6\x8b\x37\x41\x35\xc6\x4e\x1c\xdd\x2b\xef\xd4\xc1\xd7\xc3\xc1\x97\x83\x72\x42\x8f\xd5\x23\xf8\x18\xe5\x91\x86\x3f\x89\xe7\xd5\x77\x24\xb5\x5a\xfb\xba\x3e\x7e\x68\x1e\xb2\x7d\x71\x8a\xec\x8b\x91\xec\x1d\x04\xb0\x16\xad\x89\x6d\x16\xf0\x93\x80\x0f\xa5\x0f\x53\x5d\xa1\x23\x7e\x42\x64\xbd\xfb\x11\xed\x38\x6a\x00\xbf\xd7\xb3\xc2\x3d\xb3\x15\xff\xf9\x81\xad\xb8\xfc\x7b\x2b\xae\x4e\xcb\xce\x57\x36\xe2\xfb\x43\x3d\x8d\x8e\x3c\x38\x8e\x10\x6e\x10\x02\x55\x08\x8f\x40\xf6\xcf\x9b\xb0\xfc\x56\x4d\x38\xcd\xfd\x9a\xc7\x17\x4f\xbc\xe9\x05\x92\xd5\x7f\xf8\xef\xc2\x49\xf1\x3c\xe4\x01\xa0\x76\xca\xee\x5d\xa8\x07\xba\x15\xf3\xf3\x59\xaa\x80\x40\x0f\x75\x65\x34\xb8\x7f\xfe\x4e\x41\x5f\xac\xd3\xf7\x0f\x83\xf1\x59\xf0\xcd\x75\xed\xb9\x7d\x5c\x7e\xd5\x5d\x7a\xe2\x32\xbd\x18\x9e\x23\x8c\x45\x36\xe3\x17\x61\x7a\x75\x3d\x90\xd0\x5f\x01\x00\x00\xff\xff\x7b\xaf\x20\x04\xc9\x10\x00\x00")

func configChainstorageBscMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBscMainnetBaseYml,
		"config/chainstorage/bsc/mainnet/base.yml",
	)
}

func configChainstorageBscMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageBscMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bsc/mainnet/base.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBscMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x6f\xc2\x30\x10\xc5\xf1\xdd\x9f\xe2\x44\xe7\x58\x51\x19\x2a\x3c\xd3\xa1\x4b\x59\xb2\xa3\xcb\xf9\x11\x2c\xe2\x73\xe4\x33\xa1\xfd\xf6\x15\x51\x85\xde\xfa\xfe\xbf\x37\x1a\xae\xc9\xe8\x92\x66\x50\x32\x9a\xa0\xa8\xdc\x10\x69\xfc\xa5\x5d\xe6\x1b\x48\x8a\x5e\xd2\xb4\xf3\x74\x3c\xd1\xf7\x69\xa0\xcf\xe3\xd7\xe0\x1d\x3f\x2c\x38\x22\x7e\xd8\x99\x45\xca\x5d\x5b\xa0\x88\x15\x73\x59\x32\xb4\x39\xa2\xf1\x2e\x37\xb4\x40\xf8\xe1\xbc\xcc\xe8\xe4\xca\x49\xad\x95\xca\x13\xba\xd1\xa4\xcb\x9c\x54\xd1\xba\x88\xd5\x09\x47\xa8\x60\x23\x63\xac\x30\x0b\xd4\x90\x97\x52\x79\x7e\x1e\xfc\xbf\xe2\xa5\xe4\xf0\xf1\xbe\xdf\x3b\x43\x5d\x51\x9f\xc1\x98\x34\x9e\x5f\x55\xef\xb7\x85\x43\x7f\xe8\xdd\x5f\x00\x00\x00\xff\xff\x5d\x3b\x11\x73\xde\x00\x00\x00")

func configChainstorageBscMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBscMainnetDevelopmentYml,
		"config/chainstorage/bsc/mainnet/development.yml",
	)
}

func configChainstorageBscMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageBscMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bsc/mainnet/development.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBscMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x31\x0e\x82\x30\x14\x06\xe0\xbd\xa7\xf8\x83\x3b\x21\x71\xa2\x9b\xa6\x0e\x0e\x42\x0c\x2c\x4e\xe6\x41\x5f\xa1\xa1\x50\xed\xab\x03\xb7\x37\x0e\x1e\xe0\xfb\x0e\xe8\x67\x2f\x70\x3e\x30\xbc\x60\xe2\x8d\x13\x65\xb6\x18\x76\x14\x2b\x2d\x8c\x31\x6e\xce\x4f\x45\x09\xd3\xa2\x69\x7b\x5c\xcc\xb5\x2f\x95\xd8\x45\x2b\x60\x9c\xc9\x6f\x92\x63\xa2\x89\x9f\x64\x6d\x62\x11\x8d\x10\x47\x0a\x73\x94\xac\xeb\xaa\xae\x14\x90\x58\xb2\xfb\x04\x0d\x47\x41\x58\xfd\x41\xde\x5f\xfc\x5b\x86\x10\x07\x8d\xee\xa8\x00\x1b\xde\x1a\xdd\xbd\x53\xc0\xca\x99\x34\xcc\xa3\x39\xdd\x5a\x73\x56\xdf\x00\x00\x00\xff\xff\xa9\xb5\x4b\x15\xaa\x00\x00\x00")

func configChainstorageBscMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBscMainnetLocalYml,
		"config/chainstorage/bsc/mainnet/local.yml",
	)
}

func configChainstorageBscMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageBscMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bsc/mainnet/local.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBscMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x4f\xc3\x30\x10\xc5\xf1\xdd\x9f\xe2\xa9\xcc\xb1\x22\x3a\xa0\x7a\x2e\x03\x0b\x5d\xb2\x57\xe7\xf3\x35\xb5\x1a\x9f\x23\x9f\x43\xe1\xdb\xa3\x56\x08\xbd\xf5\xfd\x7f\x2f\x98\xae\xd9\x70\xc9\x8b\x20\x1b\x66\x51\x69\xd4\x25\x21\xfe\x60\x57\xe8\x26\xe0\xaa\x97\x3c\xef\x3c\x8e\x27\x7c\x9e\x26\xbc\x1f\x3f\x26\xef\xe8\x6e\xc1\x01\x74\xb7\x33\x31\xd7\x4d\x7b\xc0\xda\x6a\xda\xb8\xe7\xaa\x0e\x88\x1b\xdf\xa4\x07\xc8\x37\x95\x75\x91\x81\xaf\x94\xd5\x7a\x6d\x34\xcb\x10\x8d\x87\x42\x59\x55\xfa\xf0\xa8\x1c\x53\x12\x65\x79\x92\x29\x35\x31\x0b\xe8\x52\xd6\xda\x68\xf1\x7f\x84\xe7\x5a\xc2\xdb\xeb\x7e\xef\x4c\xda\x97\xb4\xc7\x39\x66\x4d\xe7\xff\x62\xf4\xcf\x85\xc3\x78\x18\xdd\x6f\x00\x00\x00\xff\xff\x23\xe5\xbe\x3c\xda\x00\x00\x00")

func configChainstorageBscMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBscMainnetProductionYml,
		"config/chainstorage/bsc/mainnet/production.yml",
	)
}

func configChainstorageBscMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageBscMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bsc/mainnet/production.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageDogecoinMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x4d\x6f\x1b\x37\x13\xbe\xef\xaf\x20\xfc\x9e\x6d\x49\x4e\x9c\xb7\x59\xa0\x87\x34\x31\x52\x23\xad\x5d\x14\x06\x0a\xf4\x42\xcc\x92\xb3\x5a\x42\x5c\x72\x43\xce\x2a\x52\x7f\x7d\x31\x4b\xae\x56\x52\xec\x28\x46\x93\xf8\xa6\x25\x87\xf3\xf1\xcc\x33\x1f\xfa\x9f\xb8\x6f\x4c\x14\xb5\xb1\x28\x4c\x14\x4b\x74\x18\x80\x50\x8b\x6a\x2b\xce\x5a\x58\xa1\x50\xde\xd5\x66\x79\x76\x21\xde\xdd\x89\xdb\xbb\x7b\x71\xfd\xee\xe6\xfe\xa2\x80\xce\x94\x85\x10\x2d\x6c\xa4\xeb\x5b\x59\x59\xaf\x56\x92\xb5\xc4\x52\x2c\xe6\xf3\xf9\xf1\x5d\x2c\xc5\x15\x1f\xf2\xc1\x27\x1f\x56\x18\x06\xc1\x42\x88\x48\x01\xa1\x35\x6e\x29\x2b\x20\xd5\xc8\x68\xfe\xc1\x2c\x3c\x5d\x19\x47\x18\xd6\x60\x4b\xb1\x88\x07\x17\x83\x11\x2f\x71\x8d\x8e\x24\x99\x16\x59\x6b\x5b\xc0\xa7\xc8\xee\xc1\xa7\x28\x41\x29\xdf\x3b\x2a\x85\xc6\x35\x5a\xdf\xb5\xe8\xa8\x10\xa2\xea\xd5\x0a\xa9\x14\x67\x67\x85\x10\xda\x7e\x64\x71\x21\x34\x5a\xd8\xca\x88\x2a\x96\xe2\xf5\x10\x85\x10\x0e\x58\x2b\x6e\xa0\xed\x2c\x4a\xd5\x80\x71\x91\x7c\x80\x25\xe6\xd0\xa4\xf6\x4b\x54\xde\x38\xd9\x82\x71\x0e\x49\x6a\xfb\x71\x78\xba\x36\xd1\x54\xc6\x1a\xda\x0e\xbe\xf9\x9e\xb2\xee\x57\x83\x6e\xbd\x75\xd0\x7a\x5d\x25\xdb\x09\x43\x82\xca\x3e\xd1\xdc\xf0\x3a\x23\x70\xea\x75\x42\xea\xb4\x0e\xd9\xa0\x59\x36\x24\x8d\xd3\xb8\xf9\x1a\x85\xd5\x76\x7c\xf2\xa0\xea\x35\x86\x68\xbc\x43\x2d\x4f\x3b\x3a\xc9\x9e\x76\xf9\x41\xbd\xf9\xdd\x97\x7c\x7f\xc4\x46\xb5\x1d\xdf\xea\x87\xec\x75\x01\xa3\x59\xf2\xab\x3e\x58\x89\x9b\xce\x04\x20\xe3\x5d\x29\x5e\xcc\xdb\x42\x88\x80\xcb\xe1\xab\x8f\xe7\x08\x91\xce\x17\x03\x57\x07\x8b\x99\x5f\x40\x20\x95\x6f\x59\x51\x1c\x44\xdf\xff\x7d\xf3\x47\xa1\x40\xa3\x53\x83\x0c\x68\xcd\x77\x23\x31\x3d\x1b\x2f\xc5\xbe\xef\xe7\xa3\x63\xe7\x93\x63\x01\x09\x1d\x7b\x22\x3b\x0c\xc6\xeb\x52\xfc\xbf\x10\x82\x6c\x4c\x66\xd1\x31\x2c\xba\x14\x14\x7a\x4c\xb8\x81\x35\x1a\x08\x65\xe3\x23\x25\x86\x0f\x77\x83\x21\x7e\x94\x60\x88\x04\x81\x72\x62\x4b\x31\x2f\x26\x96\x2e\x93\x66\x0b\x84\x91\x4a\xb1\x18\xbe\x62\x4e\xeb\x62\x12\x4c\x25\xd9\x8e\x07\x49\xbf\xf8\xe5\xb7\xbb\xb7\x1f\xde\xfe\xfa\xe6\xe6\x56\xbe\xbb\x7b\x7f\xfd\xf6\xee\xe6\xb6\x10\x42\x59\x83\x8e\x92\xe2\x16\x22\x61\x48\xbf\x39\x00\xdd\x79\xe3\x48\x2e\x83\xef\xbb\x0c\x8e\x10\xd1\xc2\x1a\x4f\xc8\xe4\x48\xfd\x97\x75\x8d\xec\x39\x0a\x6b\x7e\x10\x16\x7f\xd5\x08\xd4\x87\x6c\x34\xf8\x88\x44\x20\x3b\x08\x11\xc3\x0e\x5e\x13\x02\x0e\x04\x63\x2e\x6a\x13\x09\x38\xb9\xdc\x17\xb9\x03\x22\x71\x03\x2c\xc5\xed\xf5\xfd\x5f\x77\x7f\x7e\xd8\x01\x20\x7f\x7f\x73\x73\x7b\x7b\x7d\x5f\xec\xf4\xee\xf7\x05\xe7\x49\xd6\xbe\x77\x5a\x62\x08\x3e\x48\xe5\x35\xf7\xda\x97\x93\x48\x86\x76\x64\x47\xea\x5d\xa3\xb1\x91\x2a\xa9\x9b\xcb\x94\xf1\xcf\x18\xae\x82\xdf\x4b\x7e\x00\xb7\xc4\xdc\x8f\xd9\x8e\x36\x71\xa8\x2e\x6d\x3f\xca\x2e\x78\x85\x31\xfa\x31\xe8\xba\x77\x8a\xf9\x07\x56\x26\xe4\xce\xce\x8a\xa8\x57\x03\xa3\x7b\x6a\x64\x83\xa0\x19\xa1\x01\xec\xe1\x84\xfc\x0a\x5d\x3e\x38\x28\xcd\x5d\x05\x34\x44\x5d\x2c\x67\x33\x57\xd3\x39\x74\xe6\x82\x5d\xad\x20\xe2\x85\xf2\xed\x0c\x3a\x33\xc3\x4d\x37\xdb\x7f\x3a\x1b\x03\x9a\xe5\x80\x66\xeb\xc5\x83\x33\x27\x60\xa4\xba\xb7\xd9\xf7\x88\x61\x9d\xa8\x56\x19\xa7\x27\xfb\xd6\x2b\xb0\x5c\x1f\xe5\xeb\xf9\xeb\x79\x11\x2d\x4c\xd8\x8c\xbd\x0e\x2d\x41\x29\xae\x0e\xf8\x3e\x9e\xa6\x9e\x80\x9b\x0e\x15\xa1\x1e\x5c\xa8\xad\x4f\x93\xe9\x5c\xb4\xde\x19\xf2\x61\xf8\xdd\x79\x6b\x31\xfd\x4c\xa3\x2d\x7f\x70\xbb\xb0\xb0\xc2\xd9\xae\xea\x7e\xe6\x80\x78\x8e\xf8\x5a\xc6\xad\x53\xd2\x79\x7d\xc8\x31\xae\x7b\xc3\x50\x5f\x0e\xbf\x5a\xce\xa0\x53\x28\x2d\x44\x4a\xcd\xad\x14\x8b\xa6\x38\xf0\xa6\x02\xb5\xaa\x0d\xfb\x90\x28\x07\x8a\xcc\x9a\xa7\x56\x40\x0a\x5b\x1e\xb2\xa6\xed\x5b\x09\x44\xd8\x76\x14\x4b\xf1\xe2\x50\x2c\xaa\x06\x75\x6f\x51\x92\xcf\x2d\x23\x8f\xbb\x52\x5c\xb5\x47\xa2\xe9\xda\x4b\x65\x7d\xc4\x49\x6e\x31\x4f\x82\xfb\x4b\xc0\xe5\x55\x1e\xc1\xaa\x41\xb5\x4a\x45\x3b\xae\x07\xf9\x86\xe7\x7f\xc0\xcc\x46\xd4\xdc\xfe\xd2\x1e\xc1\xf0\xa7\x12\xe8\x5b\xa9\xbc\x53\x7d\x08\x5c\xe2\xb8\xa1\x00\x8a\x3c\x73\xe1\x32\x55\x0f\x41\x5c\x49\x6b\xe2\xb0\x23\xd4\xd0\xdb\x34\x5a\x46\x84\xa4\x46\x65\xb8\x59\x4f\xce\x5e\xb6\x87\x12\xb8\x41\xd5\xd3\xa1\xc8\xcb\xe6\x50\xc6\x68\xee\xd0\xb4\x2d\x77\x47\x17\x13\xec\x9c\x03\x74\xaa\x69\x81\x69\xfa\xec\x49\x50\x8d\xb1\x13\x61\xf7\xc2\x7b\xec\xe1\xab\xfc\xf0\xf9\xa0\x9c\xd0\xe3\x7e\x12\x7c\x8c\xf2\xa8\xf3\x9f\xc4\xf3\xea\x3b\x92\x5a\xad\x7c\x5d\x1f\xaf\xb1\x87\x6c\x5f\x3c\x46\xf6\xc5\x48\xf6\x0e\x02\x58\x8b\xd6\xc4\x76\xec\xfc\x8f\x00\x9e\x43\xcf\x0b\x81\x42\x47\xbc\x82\xa4\xee\xf0\x23\xd2\x71\x94\x00\xfe\x37\x90\xda\xdd\x57\xa6\xe2\xa7\x1f\x99\x8a\xf9\xe7\xb9\xb8\x7a\xbc\xef\x3c\x31\x13\xdf\x1f\xeb\x69\x90\xa4\x31\x72\x04\x71\x83\x10\xa8\x42\xf8\x02\x66\xff\x3d\x0b\x97\xdf\x2c\x0b\x8f\xb3\xbf\xe6\x01\xc6\x33\xaf\x14\x35\xd8\x88\xbb\xfe\x9f\xff\x16\xb1\x57\x3c\x11\x79\x04\xa8\xad\xb2\x7b\x25\x75\x90\xae\x5c\x04\x31\x6d\xe0\x52\x05\x04\x7a\x28\x2f\xa3\xc0\x6e\x79\x9e\xac\x3e\x5b\xae\x77\x8b\xc2\xb8\x26\x7c\xf3\xd6\xf6\xb5\x99\xbc\x7c\x5a\x39\x9d\xa8\xa7\x67\x03\x74\x6f\xdd\x1a\x57\xc4\x61\xf3\x7a\xc0\xa1\x7f\x03\x00\x00\xff\xff\x54\x49\x45\xfc\x2b\x11\x00\x00")

func configChainstorageDogecoinMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageDogecoinMainnetBaseYml,
		"config/chainstorage/dogecoin/mainnet/base.yml",
	)
}

func configChainstorageDogecoinMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageDogecoinMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/dogecoin/mainnet/base.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageDogecoinMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x6e\xc2\x30\x18\xc4\xf1\xdd\x4f\x71\xa2\x73\xac\xa8\x0c\x15\x9e\xe9\xd0\xa5\x2c\xd9\xd1\x17\xfb\x08\x16\xf1\xe7\xc8\x36\xa1\x7d\xfb\x8a\xa8\x42\xb7\xde\xff\xf7\x86\xe1\x1a\x2b\x2e\x71\x26\x62\xc5\x44\x65\x91\xc6\x80\xf1\x17\xbb\x24\x37\xc2\x67\xbd\xc4\x69\x67\x71\x3c\xe1\xfb\x34\xe0\xf3\xf8\x35\x58\x23\x8f\xea\x0c\x20\x8f\x7a\x16\xef\xf3\x5d\x9b\x43\xe0\xca\x39\x2f\x89\xda\x0c\x30\xde\xfd\x8d\xcd\x81\x3f\x92\x96\x99\x9d\xbf\x4a\xd4\xda\x72\x91\x89\x5d\xc8\x13\x7d\x8e\xda\x25\x89\xaa\x6c\x5d\xe0\x6a\xbc\x04\xaa\xe7\xe6\x86\x50\x58\xab\x43\x63\x5a\x72\x91\xf9\x79\xb0\xff\x94\xf5\x39\xb9\x8f\xf7\xfd\xde\x54\x96\x95\xe5\x19\x8c\x51\xc3\xf9\x55\xf5\x76\x9b\x3b\xf4\x87\xde\xfc\x05\x00\x00\xff\xff\x02\x04\x92\x7d\xe3\x00\x00\x00")

func configChainstorageDogecoinMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageDogecoinMainnetDevelopmentYml,
		"config/chainstorage/dogecoin/mainnet/development.yml",
	)
}

func configChainstorageDogecoinMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageDogecoinMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/dogecoin/mainnet/development.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageDogecoinMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x31\x0e\x82\x30\x14\x06\xe0\xbd\xa7\xf8\x83\x3b\x21\x71\xa2\x9b\xa6\x0e\x0e\x42\x0c\x2c\x4e\xe6\x41\x5f\xa1\xa1\x50\xed\xab\x03\xb7\x37\x0e\x1e\xe0\xfb\x0e\xe8\x67\x2f\x70\x3e\x30\xbc\x60\xe2\x8d\x13\x65\xb6\x18\x76\x14\x2b\x2d\x8c\x31\x6e\xce\x4f\x45\x09\xd3\xa2\x69\x7b\x5c\xcc\xb5\x2f\x95\xd8\x45\x2b\x60\x9c\xc9\x6f\x92\x63\xa2\x89\x9f\x64\x6d\x62\x11\x8d\x10\x47\x0a\x73\x94\xac\xeb\xaa\xae\x14\x90\x58\xb2\xfb\x04\x0d\x47\x41\x58\xfd\x41\xde\x5f\xfc\x5b\x86\x10\x07\x8d\xee\xa8\x00\x1b\xde\x1a\xdd\xbd\x53\xc0\xca\x99\x34\xcc\xa3\x39\xdd\x5a\x73\x56\xdf\x00\x00\x00\xff\xff\xa9\xb5\x4b\x15\xaa\x00\x00\x00")

func configChainstorageDogecoinMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageDogecoinMainnetLocalYml,
		"config/chainstorage/dogecoin/mainnet/local.yml",
	)
}

func configChainstorageDogecoinMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageDogecoinMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/dogecoin/mainnet/local.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageDogecoinMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\x05\x91\x37\xdb\x08\x5e\x86\x22\x9a\xd3\xa1\x4b\xb3\x78\x37\x68\xe9\xda\x11\x2c\x89\x06\x25\xd7\xe9\xdf\x17\x76\x8a\x82\xcb\x1d\xce\x39\xe0\x3f\xea\x1e\xa1\xd0\x18\x22\x28\x14\x9a\x90\xa1\x5c\xe1\x69\xf8\xa6\x53\xe2\x19\xe4\x24\x8f\x61\x3a\xb5\x74\xbb\xd3\xe7\xbd\xa3\xf7\xdb\x47\xd7\x1a\xde\x8a\x35\x44\xbc\x95\x9e\x9d\x93\x35\x57\x4b\x8b\x8a\x5f\x5d\x0d\x92\x0d\xd1\xb0\xba\x19\xd5\x12\x9e\x9c\x96\x88\xc6\x3d\x38\xe4\x52\x45\x79\x42\xe3\x65\x82\x93\x90\x9b\xc4\x21\x67\xd4\x66\x57\x8d\x63\x8f\xec\x70\x74\xbd\x57\x94\x62\xa9\x22\x2d\xa2\x1c\xdb\xdf\x4e\xeb\x24\xd9\xb7\xff\x97\x8b\x29\xd0\x2f\xe8\x0e\x0f\x21\xfb\xfe\xcf\x38\xb7\xc7\xd9\xeb\xf9\x7a\x36\x25\xf2\x4e\xe0\xb9\xc0\x55\xf8\x7e\x13\x9d\xc7\x28\xaf\xe7\x1b\x4a\x92\x43\x15\x3d\xf6\x22\x31\xe2\x35\x4b\x55\x70\x82\x9a\x9f\x00\x00\x00\xff\xff\x24\x99\x42\xc7\x1e\x01\x00\x00")

func configChainstorageDogecoinMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageDogecoinMainnetProductionYml,
		"config/chainstorage/dogecoin/mainnet/production.yml",
	)
}

func configChainstorageDogecoinMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageDogecoinMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/dogecoin/mainnet/production.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumGoerliBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\xdf\x6f\xdb\x36\x10\x7e\xd7\x5f\x41\x64\xcf\x89\xed\x34\xe9\x56\x01\x7b\xd8\x5a\xa3\x0d\xda\x35\x43\x91\x61\xc0\x5e\x88\x13\x79\xb2\x08\xf3\x87\x4a\x9e\x1c\x7b\x7f\xfd\x40\x52\xb2\x6c\xd7\x89\x53\xac\x6d\xde\x2c\xf2\x78\xf7\xdd\x7d\x1f\xef\xe8\x9f\xd8\x5d\xa3\x02\xab\x95\x46\xa6\x02\x5b\xa0\x45\x0f\x84\x92\x55\x1b\x76\x66\x60\x89\x4c\x38\x5b\xab\xc5\xd9\x05\x7b\x73\xcb\x3e\xde\xde\xb1\xf9\x9b\x9b\xbb\x8b\x02\x5a\x55\x16\x8c\x19\x58\x73\xdb\x19\x5e\x69\x27\x96\x3c\x7a\x09\x25\x9b\x4d\xa7\xd3\xc3\xbd\x50\xb2\xeb\xb8\x18\x17\xee\x9d\x5f\xa2\x4f\x86\x05\x63\x81\x3c\x82\x51\x76\xc1\x2b\x20\xd1\xf0\xa0\xfe\xc5\xde\x78\xdc\x52\x96\xd0\xaf\x40\x97\x6c\x16\xf6\x36\x52\x10\xc7\x71\x85\x96\x38\x29\x83\xd1\xab\x29\xe0\x3e\x44\x78\x70\x1f\x38\x08\xe1\x3a\x4b\x25\x93\xb8\x42\xed\x5a\x83\x96\x0a\xc6\xaa\x4e\x2c\x91\x4a\x76\x76\x56\x30\x26\xf5\xe7\x68\xce\x98\x44\x0d\x1b\x1e\x50\x84\x92\xbd\x4a\x59\x30\x66\x21\x7a\xc5\x35\x98\x56\x23\x17\x0d\x28\x1b\xc8\x79\x58\x60\x9f\x1a\x47\x6a\xd0\x63\x67\xf8\xc2\xa1\xd7\x8a\x4b\xfd\x39\x9d\x5c\xa9\xa0\x2a\xa5\x15\x6d\x12\x34\xd7\x51\xef\xfa\x65\x72\x2d\x37\x16\x8c\x93\x55\x0e\x9d\x4b\x48\x50\xe9\xaf\x8b\x96\x0e\xf7\xf9\x9f\x3a\x9c\xeb\x74\xd2\x05\x6f\x50\x2d\x1a\xe2\xca\x4a\x5c\x3f\xc5\x5f\xb5\x19\x8e\x1c\xf3\xbc\x42\x1f\x94\xb3\x28\xf9\x69\x98\xa3\xed\x49\xc0\x47\xdd\xf6\xc7\x1e\x43\xfe\x40\x88\x6a\x33\x9c\x95\x47\xc2\xb5\x1e\x83\x5a\xc4\x43\x9d\xd7\x1c\xd7\xad\xf2\x40\xca\xd9\x92\xbd\x98\x9a\x82\x31\x8f\x8b\xf4\xd5\x85\x73\x84\x40\xe7\xb3\xa4\xd2\x14\xb0\x57\x16\x10\x70\xe1\x4c\x74\x14\x92\xe9\xdb\x7f\x6e\xfe\x2c\x04\x48\xb4\x22\xd9\x80\x94\x71\x6f\x90\xa4\x33\xa0\x6c\xc9\x76\xa1\x9f\x0f\xb8\xce\xb7\xb8\x3c\x12\xda\x08\x84\xb7\xe8\x95\x93\x25\xfb\xb9\x60\x8c\x74\xc8\x51\xd1\xc6\xa2\xc8\x92\x91\xef\x30\x57\x0d\xb4\x92\x40\xc8\x1b\x17\x28\x4b\x3b\xed\xa5\x38\xf1\x50\x2e\x42\x20\xf0\xd4\x93\x5a\xb2\x69\x31\xea\x73\x91\x3d\x6b\x20\x0c\x54\xb2\x59\xfa\x0a\x3d\xa7\xb3\xd1\x30\xdf\xc5\x17\x61\x58\xc9\x01\xd8\xef\x1f\x6e\x5f\xbf\x7f\xfd\xee\xb7\x9b\x8f\x7c\x7e\xf7\x6e\xfe\x69\xfe\xd7\x1f\x05\x63\x42\x2b\xb4\x94\x3d\x1b\x08\x84\x3e\xff\x8e\x19\xc8\xd6\x29\x4b\x7c\xe1\x5d\xd7\xf6\xc5\x61\x2c\x68\x58\xe1\x09\x9b\x3e\x55\xf7\xb8\xaf\x41\x3c\x07\x79\x4d\xf7\xf2\x8a\x5f\x35\x02\x75\xbe\x0f\xea\x5d\x40\x22\xe0\x2d\xf8\x80\x7e\x5b\x5f\xe5\x3d\x26\x7d\x45\x29\x4a\x15\x08\x22\xb9\x6c\x76\x15\x5b\x1f\x52\xec\x7c\x25\xfb\x38\xbf\xfb\xfb\xf6\xd3\xfb\x6d\xfe\xfc\xed\xed\xfc\xd3\x87\x9b\x22\x77\x5a\xde\xf7\x9b\x03\x09\x0a\xef\x76\xe8\xf1\x60\x17\xd8\xb7\xca\xab\xa2\xee\xac\x88\x1a\x00\xcd\x33\xf8\xb3\xb3\x22\xc8\x65\x12\x55\x47\x0d\x6f\x10\x64\x04\x99\xf2\x4d\x2b\xe4\x96\x68\xfb\x85\xbd\xcb\xb1\x15\x61\x43\xd4\x86\x72\x32\xb1\x35\x9d\x43\xab\x2e\x84\x53\xb6\x82\x80\x17\xc2\x99\x09\xb4\x6a\x82\xeb\x76\xb2\x7b\x74\x32\x20\x9e\x64\xc4\x93\xd5\xec\x68\xbf\xf7\x18\xa8\xee\x74\x5f\xb2\x80\x7e\x95\xc9\xae\x94\x95\x63\x78\xed\x04\xe8\x28\xd1\xf2\xd5\xf4\xd5\xb4\x08\x1a\xc6\xe4\xfb\x56\x23\x51\x13\x94\xec\x6a\xba\xa7\xb9\x61\x79\x96\xae\x25\xae\x5b\x14\x84\x32\x61\xa8\xb5\xcb\x63\xe1\x9c\x19\x67\x15\x39\x9f\x7e\xb7\x4e\x6b\xcc\x3f\xf3\x5c\xe9\x3f\xe2\x8d\xd5\xb0\xc4\xc9\x56\xf9\xbf\xc6\x8c\x62\x17\x77\x35\x0f\x1b\x2b\xb8\x75\x72\x97\xe6\x04\x85\x54\x2c\xf5\x2c\xfd\x32\x91\x23\x2b\x90\x6b\x08\x94\xdb\x4b\xc9\x66\xd7\xa6\xd8\x83\x53\x81\x58\xd6\x2a\x82\xc8\xda\x02\x41\x6a\x15\x87\x86\x47\xf2\x9b\x38\xe2\x94\xe9\x0c\x07\x22\x34\x2d\x85\x92\xbd\xd8\x37\x0b\xa2\x41\xd9\x69\xe4\xe4\xfa\x7b\xdb\x4f\x9b\x92\x5d\x9b\x03\xd3\xbc\xed\xb8\xd0\x2e\xe0\x68\x97\xab\x15\xa1\x8c\x23\xf8\xf2\xba\x1f\x80\xa2\x41\xb1\xcc\x17\x67\x18\xce\xfd\x4e\x9c\xbe\x1e\x5b\xef\x04\x86\x80\x32\xf6\xa0\x3c\xc5\x63\x5b\xcc\xc3\xb3\x33\x5c\x38\x2b\x3a\xef\xe3\x35\xc3\x35\x79\x10\xe4\xa2\x1a\x2e\xaf\x92\x05\x41\x58\x72\xad\x42\x9a\xd0\x35\x74\x9a\xd2\xf2\x50\x21\x2e\x51\xa8\xd8\x30\x47\xb0\x97\x66\xdf\x02\xd7\x28\x3a\xda\x37\xb9\x6a\xf6\x6d\x94\x8c\x6d\x92\x36\xe5\x76\xe9\x62\x2c\x7b\xe4\x00\xad\x68\x0c\x44\xa1\x3e\x3b\x09\xa2\x51\x7a\x54\xec\x4e\x7a\x0f\x1d\x7c\xd9\x1f\x7c\xbe\x52\x8e\xd5\x8b\x0d\xc5\xbb\x10\xf8\x41\xf7\x3d\x59\xcf\xeb\xef\x28\x6a\xb1\x74\x75\x7d\xf8\x88\xdc\x57\xfb\xec\x21\xb1\xcf\x06\xb1\xb7\xe0\x41\x6b\xd4\x2a\x98\xd8\x74\x1f\x29\x78\x9f\x7a\x3f\x95\x05\x5a\x8a\xcf\x80\xdc\xfe\x7e\x04\x1d\x07\x04\xc4\xb7\x78\xee\x77\x4f\xa4\xe2\x97\x1f\x49\xc5\xf4\x4b\x2e\xae\x1f\xee\x3b\x69\xa3\x06\xa5\xdd\x0a\x3d\xff\xf2\x79\xf3\x74\x92\xbe\x3f\x0d\xe3\x90\xc9\x23\xe6\xa0\xfa\x0d\x82\xa7\x0a\xe1\x91\x72\xfe\x7f\x82\x2e\xbf\x19\x41\x0f\x5f\x8c\x47\xe8\xa8\xe3\xdc\x8b\xa3\xb2\x64\x35\xe8\x80\xdb\xa9\xd1\xff\x97\x89\x80\xe3\x20\x8d\x83\x43\x6c\x84\xde\xb9\x88\x47\x98\x0c\xf9\xe9\xcc\x85\x47\xa0\x63\x8c\x0d\x06\x5b\x20\x63\xd0\x67\x53\xc1\xf6\x79\x31\x3c\x2e\xbe\x79\x3f\x7c\x2a\xc7\x97\x5f\x77\x07\x4f\x5c\xc2\x67\x2b\xe8\xce\x23\x6d\x78\x59\xa6\xf7\xda\x11\x40\xff\x05\x00\x00\xff\xff\xf2\xd2\x48\xed\xde\x10\x00\x00")

func configChainstorageEthereumGoerliBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumGoerliBaseYml,
		"config/chainstorage/ethereum/goerli/base.yml",
	)
}

func configChainstorageEthereumGoerliBaseYml() (*asset, error) {
	bytes, err := configChainstorageEthereumGoerliBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/goerli/base.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumGoerliDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xbd\x6e\x83\x30\x14\xc5\xf1\xdd\x4f\x71\x95\xce\x20\x94\x54\xaa\xe2\x39\x1d\xba\x34\x0b\x3b\xba\xd8\x27\xd8\xc2\x1f\xc8\xbe\x90\xf6\xed\x2b\x50\x95\x73\xd6\xbf\x7e\x6f\xd4\x3b\x5f\xe9\xe1\x03\xc8\x57\x9a\x90\x50\x58\x60\x69\xfc\xa5\x53\xe4\x19\x64\x72\x7a\xf8\xe9\xd4\xd2\xed\x4e\xdf\xf7\x9e\x3e\x6f\x5f\x7d\xab\xf8\x59\xb5\x22\xe2\x67\x1d\xd8\x98\xbc\x26\xd1\x64\xb1\x21\xe4\x25\x22\x89\x22\x1a\x57\x33\x43\x34\xe1\x87\xe3\x12\xd0\x18\xc7\x3e\x55\xc9\x85\x27\x34\x10\x87\x82\x35\x36\x53\x46\x09\xbe\xb1\xd8\x94\x61\x8b\x64\x70\xb0\xd6\x16\xd4\xaa\x49\x10\x97\x5c\x38\xec\x41\xfb\x2f\xb5\x26\x47\xfd\x71\xbe\x5c\xd4\x41\xee\xfd\x18\xb2\x99\x87\x2a\x5c\x64\x70\xf0\x93\x13\x4d\xef\xe7\x6e\x9f\xaa\x28\x1b\xca\x51\xf9\x64\x87\x17\xdd\xb5\xc7\xf5\xb5\xbb\x76\xea\x2f\x00\x00\xff\xff\x30\xbe\x0b\x83\x07\x01\x00\x00")

func configChainstorageEthereumGoerliDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumGoerliDevelopmentYml,
		"config/chainstorage/ethereum/goerli/development.yml",
	)
}

func configChainstorageEthereumGoerliDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageEthereumGoerliDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/goerli/development.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumGoerliLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x31\x0e\x82\x30\x14\x06\xe0\xbd\xa7\xf8\x83\x3b\x21\x71\xa2\x9b\xa6\x0e\x0e\x42\x0c\x2c\x4e\xe6\x41\x5f\xa1\xa1\x50\xed\xab\x03\xb7\x37\x0e\x1e\xe0\xfb\x0e\xe8\x67\x2f\x70\x3e\x30\xbc\x60\xe2\x8d\x13\x65\xb6\x18\x76\x14\x2b\x2d\x8c\x31\x6e\xce\x4f\x45\x09\xd3\xa2\x69\x7b\x5c\xcc\xb5\x2f\x95\xd8\x45\x2b\x60\x9c\xc9\x6f\x92\x63\xa2\x89\x9f\x64\x6d\x62\x11\x8d\x10\x47\x0a\x73\x94\xac\xeb\xaa\xae\x14\x90\x58\xb2\xfb\x04\x0d\x47\x41\x58\xfd\x41\xde\x5f\xfc\x5b\x86\x10\x07\x8d\xee\xa8\x00\x1b\xde\x1a\xdd\xbd\x53\xc0\xca\x99\x34\xcc\xa3\x39\xdd\x5a\x73\x56\xdf\x00\x00\x00\xff\xff\xa9\xb5\x4b\x15\xaa\x00\x00\x00")

func configChainstorageEthereumGoerliLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumGoerliLocalYml,
		"config/chainstorage/ethereum/goerli/local.yml",
	)
}

func configChainstorageEthereumGoerliLocalYml() (*asset, error) {
	bytes, err := configChainstorageEthereumGoerliLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/goerli/local.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumGoerliProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x4e\xc3\x30\x18\xc4\xf1\xdd\x4f\x71\x2a\x73\xac\x88\x0e\xa8\x9e\xcb\xc0\x42\x97\xec\xd5\x17\xfb\x9a\x58\x8d\xed\xe8\xb3\x43\xe1\xed\x51\x23\x84\x6e\xbd\xff\xef\x05\xc3\x1c\x2b\x6e\x71\x21\x62\xc5\xc4\x4c\x95\xc6\x80\xf1\x07\x87\x24\x77\xc2\x97\x7c\x8b\xd3\xc1\xe2\x7c\xc1\xe7\x65\xc0\xfb\xf9\x63\xb0\x46\x1e\xd5\x19\x40\x1e\xf5\x2a\xde\x97\x2d\x37\x87\x55\x4b\xd8\x7c\x8b\x25\x1b\x60\xdc\xfc\x9d\xcd\x81\xdf\x92\xd6\x85\x9d\x9f\x25\xe6\xda\x8a\xca\xc4\x8e\x6d\xa6\x72\x4b\xdd\x54\xa8\x4b\xec\x9e\xa5\xf1\x12\x98\x3d\x77\x36\x04\x65\xad\x0e\x8d\x69\x2d\x2a\x8b\xfd\x63\xac\x2f\xc9\xbd\xbd\x1e\x8f\xa6\x52\xbf\xa8\xcf\xf3\x18\x73\xb8\xfe\x17\xbd\xdd\xe7\x4e\xfd\xa9\x37\xbf\x01\x00\x00\xff\xff\xef\x4b\x61\x54\xde\x00\x00\x00")

func configChainstorageEthereumGoerliProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumGoerliProductionYml,
		"config/chainstorage/ethereum/goerli/production.yml",
	)
}

func configChainstorageEthereumGoerliProductionYml() (*asset, error) {
	bytes, err := configChainstorageEthereumGoerliProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/goerli/production.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\xdb\x6e\x1b\x37\x13\xbe\xdf\xa7\x20\xfc\x5f\xdb\x3a\xd8\xca\xdf\x2c\x90\x8b\x34\x31\x1a\x23\x8d\x5d\x04\x2e\x0a\xf4\x86\x18\x91\xb3\x5a\x42\x3c\x6c\xc8\x59\x45\xea\xd3\x17\x3c\x48\x2b\xf9\x24\x17\xa9\xeb\xbb\x15\x67\x38\xc7\x6f\xe6\xa3\xfe\xc7\x6e\x5b\x15\x58\xa3\x34\x32\x15\xd8\x02\x2d\x7a\x20\x94\x6c\xbe\x61\x27\x06\x96\xc8\x84\xb3\x8d\x5a\x9c\x9c\xb1\x8f\x37\xec\xfa\xe6\x96\x5d\x7e\xbc\xba\x3d\xab\xa0\x53\x75\xc5\x98\x81\x35\xb7\xbd\xe1\x73\xed\xc4\x92\x47\x2b\xa1\x66\x93\xf1\x78\x7c\x57\x16\x6a\x36\x8b\x87\xf1\xe0\xbb\xf3\x4b\xf4\x49\xb1\x62\x2c\x90\x47\x30\xca\x2e\xf8\x1c\x48\xb4\x3c\xa8\xbf\xb0\x28\x0f\x22\x65\x09\xfd\x0a\x74\xcd\x26\xe1\x40\x90\x9c\x38\x8e\x2b\xb4\xc4\x49\x19\x8c\x56\x4d\x05\xdf\x43\x0c\x0f\xbe\x07\x0e\x42\xb8\xde\x52\xcd\x24\xae\x50\xbb\xce\xa0\xa5\x8a\xb1\x79\x2f\x96\x48\x35\x3b\x39\xa9\x18\x93\xfa\x5b\x54\x67\x4c\xa2\x86\x0d\x0f\x28\x42\xcd\xde\xa6\x2c\x18\xb3\x10\xad\xe2\x1a\x4c\xa7\x91\x8b\x16\x94\x0d\xe4\x3c\x2c\xb0\xa4\xc6\x91\x5a\xf4\xd8\x1b\x6e\x40\x59\x8b\xc4\xa5\xfe\x96\xae\xae\x54\x50\x73\xa5\x15\x6d\x52\x6c\xae\xa7\x62\xfb\x4d\xb2\x2d\x37\x16\x8c\x93\xf3\xec\x3b\xd7\x90\x60\xae\xff\xa1\xbb\x74\xbb\x54\xe0\xd8\xed\x5c\xa9\xe3\x36\x78\x8b\x6a\xd1\x12\x57\x56\xe2\xfa\x39\x06\xe7\x9b\xed\x95\x07\x4d\xaf\xd0\x07\xe5\x2c\x4a\x7e\x3c\xd0\x41\xf7\x78\xc8\x0f\xda\x2d\xf7\x9e\x8a\xfd\x11\x1f\xf3\xcd\xf6\xae\x7c\xc8\x5f\xe7\x31\xa8\x45\xbc\xd5\x7b\xcd\x71\xdd\x29\x0f\xa4\x9c\xad\xd9\xf9\xd8\x54\x8c\x79\x5c\xa4\x5f\x7d\x38\x45\x08\x74\x3a\x49\x58\x4d\x1e\x0b\xbe\x80\x80\x0b\x67\xa2\xa1\x90\x54\x7f\xf9\xf3\xea\xb7\x4a\x80\x44\x2b\x92\x0e\x48\x19\x65\x5b\x60\xba\xe8\xbc\x66\xfb\xb1\x9f\x6e\x03\x3b\x1d\x02\xf3\x48\x68\x63\x24\xbc\x43\xaf\x9c\xac\xd9\xff\x2b\xc6\x48\x87\xec\x16\x6d\x2c\x8b\xac\x19\xf9\x1e\x73\xdd\x40\x2b\x09\x84\xbc\x75\x81\x32\xc2\x93\x2c\x39\x8a\x97\x72\x19\x02\x81\xa7\xd2\xd8\x9a\x8d\xab\x01\xa5\x8b\x6c\x59\x03\x61\xa0\x9a\x4d\xd3\xaf\x50\xda\x3a\x1d\x14\xf3\x48\x9e\x87\xed\x49\x76\xc0\x7e\xfe\xf5\xe6\xc3\xe7\x0f\x9f\xde\x5f\x5d\xf3\xcb\xdb\x4f\x97\x5f\x2f\x7f\xff\x52\x31\x26\xb4\x42\x4b\xd9\xb2\x81\x40\xe8\xf3\x77\xcc\x40\x76\x4e\x59\xe2\x0b\xef\xfa\xae\x54\x87\xb1\xa0\x61\x85\x47\x74\x4a\xaa\xee\x69\x5b\x5b\xf8\xdc\xc9\x6b\x72\x90\x57\x2c\x40\x83\x40\xbd\x2f\x4e\xbd\x0b\x48\x04\xbc\x03\x1f\xd0\xef\xea\xab\xbc\xc7\x84\xb0\x08\x46\xa9\x02\x41\xec\x2e\x9b\x5c\xc4\x0d\x88\x14\x17\x60\xcd\xae\x2f\x6f\xff\xb8\xf9\xfa\x79\x97\x3f\xff\xf2\xfe\xea\xfa\xfa\xf2\xb6\xca\x1b\x97\x97\xbd\x73\x17\x85\xc2\xbb\xbd\x06\x79\xb0\x0b\x2c\x3b\xf3\xa2\x6a\x7a\x2b\x22\x0a\x40\xf3\x1c\xfe\xc9\x49\x15\xe4\x32\xe1\xaa\xa7\x96\xb7\x08\x32\x86\x99\x32\x4e\x27\xe4\x96\x68\xcb\xc1\xc1\x80\xec\x70\xd8\x12\x75\xa1\x1e\x8d\x6c\x43\xa7\xd0\xa9\x33\xe1\x94\x9d\x43\xc0\x33\xe1\xcc\x08\x3a\x35\xc2\x75\x37\xda\xbf\x3a\xda\x86\x3c\x2a\x21\x8f\x56\x93\x07\x37\xbf\xc7\x40\x4d\xaf\x4b\xd5\x02\xfa\x55\xee\xf7\x5c\x59\x39\xf8\xd7\x4e\x80\x8e\x28\xad\xdf\x8e\xdf\x8e\xab\xa0\x61\xc8\xbe\x6c\x1c\x89\x9a\xa0\x18\x1d\x60\xb7\x3d\x9e\xc6\xc9\xc4\x75\x87\x82\x50\xa6\x10\x1a\xed\x32\x3f\x9c\x32\xe3\xac\x22\xe7\xd3\x77\xe7\xb4\xc6\xfc\x99\x09\xe6\xce\x8f\xd1\x0e\x23\xef\x26\x49\x10\xa7\x59\xc3\x12\x47\xbb\xa1\x78\x37\x4d\x02\xe1\x5d\x08\x7c\x07\xbc\x8a\xb1\xb8\xfa\x5d\xc3\xc3\xc6\x0a\x6e\x9d\x3c\x40\x45\x0c\x9b\x54\xec\xcb\x24\x7d\x99\xd8\x50\x2b\x90\x6b\x08\x94\xf7\x51\xcd\xce\x4d\x75\x10\xfa\x1c\xc4\xb2\x51\x31\xe0\x8c\x44\x10\xa4\x56\x91\x68\x3c\x92\xdf\x44\x5e\x54\xa6\x37\x1c\x88\xd0\x74\x14\x6a\x76\x7e\xa8\x16\x44\x8b\xb2\xd7\xc8\xc9\x95\x29\x2f\x0c\x55\xb3\x99\xb9\xa3\x9a\xc5\x8e\x0b\xed\x02\x0e\x7a\x93\x71\x56\xdc\xe7\xed\xe9\xac\xb0\xa6\x68\x51\x2c\xf3\x98\x6d\x19\xbd\x48\x22\x65\x7b\xec\xbc\x13\x18\x02\xca\xb8\xb1\x32\xf5\xc7\x2d\x9a\x19\xb7\x37\x5c\x38\x2b\x7a\xef\x63\xc1\x71\x4d\x1e\x04\xb9\x08\x9c\xe9\x45\xd2\x20\x08\x4b\xae\x55\x48\xb4\xde\x40\xaf\x33\x1b\x6c\x2b\xc4\x25\x0a\x15\xf7\xeb\x10\xec\xd4\x1c\x6a\xe0\x1a\x45\x4f\x87\x2a\x17\xed\xa1\x8e\x92\x71\xa9\xd2\xa6\xde\x1d\x9d\x0d\x65\x8f\x3d\x40\x2b\x5a\x03\x11\xd3\xaf\xde\x04\xd1\x2a\x3d\xa0\x7b\x2f\xbd\xc7\x2e\xbe\x29\x17\x5f\xaf\x94\x43\xf5\xe2\xf2\x39\x1c\x99\x67\xd6\x73\xf6\x82\xa0\x16\x4b\xd7\x34\x7b\x2f\xcf\xd9\x78\x6c\xc2\x3d\xc0\x4f\xc6\x8f\x01\x7e\x27\xe9\xc0\x83\xd6\xa8\x55\x30\x71\x49\x3f\x51\xf4\x92\x7e\xe1\x71\x81\x96\xe2\xcb\xa1\x90\xd0\x9e\xf0\x90\x96\x27\xb3\x38\x5b\xc5\xd9\xcb\xf7\xed\xfe\x72\x2b\x4b\xf4\x99\x3d\xfb\xe9\x3f\xec\xd9\x64\x7c\xbf\x63\xb3\xc7\x17\x54\x12\x34\xa0\xb4\x5b\xa1\xe7\xf7\x5f\x4d\xcf\xef\xe4\xcb\xb7\x61\x60\xae\xcc\x5b\x77\xaa\xdf\x22\x78\x9a\x23\x3c\x51\xce\x1f\x6f\xd0\xf4\x87\x1b\x74\x1e\x8e\x0c\xcf\x13\xdd\x68\x22\x3d\x46\x46\xad\x59\x03\x3a\xe0\x8e\x5d\xca\xff\xa4\x18\x6f\xe4\xdb\x48\x30\x62\x23\x74\x36\x7b\xbf\x91\x93\x7c\x16\xf2\x93\x9c\x0b\x8f\x40\x0f\x75\x6c\xab\xb0\x8b\x64\xf0\xfa\x6a\x28\xd8\xbd\x59\xb6\x8f\x94\x7f\x7d\x71\x3e\xb7\xc7\xd3\x23\x2d\x3e\x1c\xc1\x23\x33\xf8\x6a\xf5\xdc\x7b\xf8\x6d\x1f\xab\xe9\x45\xf7\x40\x40\x7f\x07\x00\x00\xff\xff\x4f\xa9\x91\x5e\x3b\x11\x00\x00")

func configChainstorageEthereumMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumMainnetBaseYml,
		"config/chainstorage/ethereum/mainnet/base.yml",
	)
}

func configChainstorageEthereumMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageEthereumMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/mainnet/base.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x6e\x83\x30\x10\xc6\xf1\xdd\x4f\x71\x4a\x67\x10\x4a\x86\x2a\x9e\xd3\xa1\x4b\xb3\xb0\xa3\xc3\xfe\x02\x56\xec\x33\xb2\x0f\xd2\xbe\x7d\x05\xaa\xaa\x9b\xee\xd3\x5f\xbf\x37\xea\xe7\x50\xe9\x11\x22\x28\x54\x9a\x20\x28\xac\xf0\x34\xfe\xd0\x29\xf1\x13\xe4\xb2\x3c\xc2\x74\x6a\xe9\x76\xa7\xaf\x7b\x4f\x1f\xb7\xcf\xbe\x35\xfc\xaa\xd6\x10\xf1\xab\x0e\xec\x5c\x5e\x45\x2d\x79\x6c\x88\x79\x49\x10\x35\x44\xe3\xea\x9e\x50\x4b\xf8\xe6\xb4\x44\x34\x6e\xe6\x20\x55\x73\xe1\x09\x0d\x74\x46\xc1\x9a\x9a\xc4\x41\x04\xda\x78\x6c\xc6\xb1\x87\x38\x1c\xae\xf7\x05\xb5\x5a\x52\xa4\x25\x17\x8e\x7b\xd0\xfe\x51\xad\xcb\xc9\xbe\x9f\x2f\x17\x73\x98\x7b\x8f\x0d\xa2\x83\xf2\xb4\x3f\x44\x91\x15\x55\x2d\x9d\x4d\x45\xd9\x50\xf6\x75\x0c\xe2\x87\x7f\xb7\x6b\x8f\xb3\xd7\xee\xda\x99\xdf\x00\x00\x00\xff\xff\x09\xce\xe9\x04\x05\x01\x00\x00")

func configChainstorageEthereumMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumMainnetDevelopmentYml,
		"config/chainstorage/ethereum/mainnet/development.yml",
	)
}

func configChainstorageEthereumMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageEthereumMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/mainnet/development.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x31\x0e\x82\x30\x14\x06\xe0\xbd\xa7\xf8\x83\x3b\x21\x71\xa2\x9b\xa6\x0e\x0e\x42\x0c\x2c\x4e\xe6\x41\x5f\xa1\xa1\x50\xed\xab\x03\xb7\x37\x0e\x1e\xe0\xfb\x0e\xe8\x67\x2f\x70\x3e\x30\xbc\x60\xe2\x8d\x13\x65\xb6\x18\x76\x14\x2b\x2d\x8c\x31\x6e\xce\x4f\x45\x09\xd3\xa2\x69\x7b\x5c\xcc\xb5\x2f\x95\xd8\x45\x2b\x60\x9c\xc9\x6f\x92\x63\xa2\x89\x9f\x64\x6d\x62\x11\x8d\x10\x47\x0a\x73\x94\xac\xeb\xaa\xae\x14\x90\x58\xb2\xfb\x04\x0d\x47\x41\x58\xfd\x41\xde\x5f\xfc\x5b\x86\x10\x07\x8d\xee\xa8\x00\x1b\xde\x1a\xdd\xbd\x53\xc0\xca\x99\x34\xcc\xa3\x39\xdd\x5a\x73\x56\xdf\x00\x00\x00\xff\xff\xa9\xb5\x4b\x15\xaa\x00\x00\x00")

func configChainstorageEthereumMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumMainnetLocalYml,
		"config/chainstorage/ethereum/mainnet/local.yml",
	)
}

func configChainstorageEthereumMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageEthereumMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/mainnet/local.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x4e\xc3\x30\x18\xc4\xf1\xdd\x4f\x71\x2a\x73\xac\x88\x0e\xa8\x9e\xcb\xc0\x42\x97\xec\xd5\x17\xfb\x9a\x58\x8d\x3f\x47\xb6\x43\xe1\xed\x51\x23\x84\x6e\xbd\xff\xef\x05\xc3\x1c\x2b\x6e\x71\x21\x62\xc5\x44\x65\x91\xc6\x80\xf1\x07\x87\x24\x77\xc2\x67\xbd\xc5\xe9\x60\x71\xbe\xe0\xf3\x32\xe0\xfd\xfc\x31\x58\x23\x8f\xea\x0c\x20\x8f\x7a\x15\xef\xf3\xa6\xcd\x61\x2d\x39\x6c\xbe\xc5\xac\x06\x18\x37\x7f\x67\x73\xe0\xb7\xa4\x75\x61\xe7\x67\x89\x5a\x5b\x2e\x32\xb1\x63\x9b\x59\xb8\xa5\x2e\x49\x54\x65\xeb\x9e\xa9\xf1\x12\xa8\x9e\xbb\x1b\x42\x61\xad\x0e\x8d\x69\xcd\x45\x16\xfb\xe7\x58\x9f\x93\x7b\x7b\x3d\x1e\x4d\x65\xf9\x62\x79\x9e\xc7\xa8\xe1\xfa\x5f\xf4\x76\x9f\x3b\xf5\xa7\xde\xfc\x06\x00\x00\xff\xff\xae\x16\x62\xef\xdf\x00\x00\x00")

func configChainstorageEthereumMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumMainnetProductionYml,
		"config/chainstorage/ethereum/mainnet/production.yml",
	)
}

func configChainstorageEthereumMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageEthereumMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/mainnet/production.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageOptimismMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x4f\x6f\xdb\xb8\x13\xbd\xeb\x53\x10\xf9\x9d\x13\xdb\x69\xd3\xdf\x56\xb7\x6e\x5b\xec\x06\xdd\x26\xc5\x6e\x80\x05\xf6\x42\x8c\xc8\x91\x45\x98\x22\x55\x72\xe4\xd8\xfb\xe9\x17\x23\x52\x96\x9d\x3a\x75\x8a\xa2\xcd\xcd\x26\x87\xf3\xe7\xbd\xc7\x19\xea\x7f\xe2\xae\x31\x51\xd4\xc6\xa2\x30\x51\x2c\xd1\x61\x00\x42\x2d\xaa\xad\x38\x6b\x61\x85\x42\x79\x57\x9b\xe5\xd9\x85\x78\x77\x2b\x6e\x6e\xef\xc4\xfb\x77\xd7\x77\x17\x05\x74\xa6\x2c\x84\x68\x61\x23\x5d\xdf\xca\xca\x7a\xb5\x92\xec\x25\x96\x62\x31\x9f\xcf\x1f\xee\xc5\x52\x5c\xf1\x22\x2f\xdc\xfb\xb0\xc2\x30\x18\x16\x42\x44\x0a\x08\xad\x71\x4b\x59\x01\xa9\x46\x46\xf3\x2f\x66\xe3\x69\xcb\x38\xc2\xb0\x06\x5b\x8a\x45\x3c\xd8\x18\x82\x78\x89\x6b\x74\x24\xc9\xb4\xc8\x5e\xdb\x02\xee\x23\xa7\x07\xf7\x51\x82\x52\xbe\x77\x54\x0a\x8d\x6b\xb4\xbe\x6b\xd1\x51\x21\x44\xd5\xab\x15\x52\x29\xce\xce\x0a\x21\xb4\xfd\xcc\xe6\x42\x68\xb4\xb0\x95\x11\x55\x2c\xc5\xeb\xa1\x0a\x21\x1c\xb0\x57\xdc\x40\xdb\x59\x94\xaa\x01\xe3\x22\xf9\x00\x4b\xcc\xa5\x49\xdf\x91\x69\x4d\x6c\x65\x0b\xc6\x39\x24\xa9\xed\xe7\xe1\xe8\xda\x44\x53\x19\x6b\x68\x3b\xe4\xe6\x7b\xca\xbe\x5f\x0d\xbe\xf5\xd6\x41\xeb\x75\x95\x62\x27\x0c\x09\x2a\xfb\x8d\xe1\x86\xd3\x19\x81\x53\xa7\x13\x52\xa7\x7d\xc8\x06\xcd\xb2\x21\x69\x9c\xc6\xcd\x53\x1c\x56\xdb\xf1\xc8\x51\xd7\x6b\x0c\xd1\x78\x87\x5a\x9e\x4e\x74\xb2\x3d\x9d\xf2\x51\xbf\xf9\xdc\xd7\x72\x7f\x24\x46\xb5\x1d\xcf\xea\x63\xf1\xba\x80\xd1\x2c\xf9\x54\x1f\xac\xc4\x4d\x67\x02\x90\xf1\xae\x14\x2f\xe6\x6d\x21\x44\xc0\xe5\xf0\xaf\x8f\xe7\x08\x91\xce\x17\x83\x56\x87\x88\x59\x5f\x40\x20\x95\x6f\xd9\x51\x1c\x4c\x7f\xfb\xe7\xfa\x53\xa1\x40\xa3\x53\x83\x0d\x68\xcd\x7b\xa3\x30\x3d\x07\x2f\xc5\x7e\xee\xe7\x63\x62\xe7\x53\x62\x01\x09\x1d\x67\x22\x3b\x0c\xc6\xeb\x52\xfc\xbf\x10\x82\x6c\x4c\x61\xd1\x31\x2c\xba\x14\x14\x7a\x4c\xb8\x81\x35\x1a\x08\x65\xe3\x23\x25\x85\x0f\x7b\x43\x20\x3e\x94\x60\x88\x04\x81\x32\xb1\xa5\x98\x17\x93\x4a\x97\xc9\xb3\x05\xc2\x48\xa5\x58\x0c\xff\x62\xa6\x75\x31\x19\x0e\x57\xf2\xb2\x1d\x17\x92\x7f\xf1\xeb\x1f\xb7\x6f\x3f\xbc\xfd\xfd\xcd\xf5\x8d\xbc\xfd\x74\x77\xfd\xf1\xfa\xaf\x8f\x85\x10\xca\x1a\x74\x94\x1c\xb7\x10\x09\x43\xfa\xcd\x05\xe8\xce\x1b\x47\x72\x19\x7c\xdf\x65\x70\x84\x88\x16\xd6\x78\xc2\x26\x57\xea\xbf\xee\x6b\x54\xcf\xc9\xb2\x6a\x04\xea\x43\x0e\x1a\x7c\x44\x22\x90\x1d\x84\x88\xa1\x14\x35\xd8\xc8\xf8\x9a\x10\x70\x50\x18\x8b\x51\x9b\x48\xc0\xec\x72\x63\xe4\x16\x88\xc4\x1d\xb0\x14\x37\xef\xef\xfe\xbe\xfd\xf3\xc3\x0e\x01\xf9\xf1\xcd\xf5\xcd\xcd\xfb\xbb\x22\xb5\x5c\x99\x68\xf9\x42\x86\x2a\xf8\x3d\x86\x02\xb8\x25\xe6\xa6\xf9\x92\x15\x63\xe2\x70\x05\x38\x44\x6d\xfd\x3d\x53\x48\x7d\xcc\xf4\xd6\xbd\x53\x2c\x13\xb0\x32\x15\x78\x76\x56\x44\xbd\x1a\x84\xd7\x53\x23\x1b\x04\xcd\x85\x0c\x98\x0c\x2b\xe4\x57\xe8\xf2\xc2\xc1\x0d\xda\x09\xb5\x21\xea\x62\x39\x9b\xb9\x9a\xce\xa1\x33\x17\xca\x1b\x57\x41\xc4\x0b\xe5\xdb\x19\x74\x66\x86\x9b\x6e\xb6\x7f\x74\x36\x96\x34\xcb\x25\xcd\xd6\x8b\xa3\xa3\x21\x60\xa4\xba\xb7\x39\xf7\x88\x61\x9d\x14\x51\x19\xa7\xa7\xf8\xd6\x2b\xb0\x2c\xe3\xf2\xf5\xfc\xf5\xbc\x88\x16\x26\x74\x72\x4b\xd2\x68\x09\x46\xfc\x27\x61\x8e\xeb\x57\x2c\x4f\x6e\xce\xbe\x96\x71\xeb\x94\x74\x5e\x7f\xc9\x1b\x19\x46\xe6\xc5\xf0\xab\x65\xc8\x9d\x42\x69\x21\x52\x6a\x19\x69\xf0\x8c\xb0\x0f\x17\xaf\x02\xb5\xaa\x8d\xb5\xa3\x8e\x41\x91\x59\xf3\x30\x08\x48\x61\xcb\xb3\xcb\xb4\x7d\x2b\x81\x08\xdb\x8e\x62\x72\xbe\x67\x16\x55\x83\xba\xb7\x28\xc9\xe7\x9b\x98\xa7\x48\x4e\x79\xdf\x34\x6d\x7b\xa9\xac\x8f\x38\xd9\x5d\xce\x93\xe1\xfe\x6c\xbd\xbc\xca\x93\x4d\x35\xa8\x56\xe9\x2e\x8c\x53\x37\xef\xf0\x58\x0d\xd8\x05\xaf\x30\x46\xd4\xdc\x55\xd2\x78\xe6\x4e\x97\xa6\x62\xdf\x4a\xe5\x9d\xea\x43\xe0\x9b\x83\x1b\x0a\xa0\xc8\x27\xee\x92\x09\x41\x5c\x49\x6b\xe2\x30\x7b\x6b\xe8\x6d\x6a\xd9\x3b\x65\x6a\x54\x86\x9b\xe0\x5e\xb6\xed\xa1\x05\x6e\x50\xf5\x74\x68\xf2\xb2\x39\xb4\x31\x9a\x3b\x1f\x6d\xcb\xdd\xd2\xc5\x84\x3b\x93\x80\x4e\x35\x2d\xb0\xae\x9e\x8d\x85\x45\x66\x41\x35\xc6\x6a\x79\xa4\xbc\xc7\x0e\xbe\xca\x07\x9f\x0f\xca\x09\x3d\x6e\x00\xc1\xc7\x28\x1f\x74\xd4\x93\x78\x5e\xfd\x30\x3c\x99\x68\x5f\xd7\x0f\x9f\x87\x87\x72\x5f\x3c\xa6\xf6\xc5\xa8\xf6\x0e\x02\x58\x8b\xd6\xc4\x36\x35\xd1\x47\x01\xcf\xa5\xe7\x41\xab\xd0\x11\x8f\xf6\xd4\xad\x7e\x06\x1d\x0f\x08\xe0\x57\xb6\x77\xe6\xe9\x54\xfc\xf2\x33\xa9\x98\x7f\xc9\xc5\xd5\xe3\x8d\xe7\x1b\x99\xf8\xf1\x58\x67\x64\xf9\xd9\xe7\x8f\xf4\xf0\x06\x21\x50\x85\xf0\x15\xcc\xbe\x9f\x85\xcb\xef\x66\xe1\x45\x3c\x21\xfe\x9a\x27\x18\x4f\xbd\xe9\xf9\x92\xfa\x7f\xfe\xda\xe0\xa4\x78\x26\xf2\x08\x50\x5b\x65\xf7\x6e\xd4\x11\xb6\x62\x7a\xd7\x4a\x15\x10\xe8\x18\x2b\xa3\xc1\xee\x49\x3a\x05\x7d\x36\xa6\x13\xbf\xbb\xef\xca\x27\x0f\x8a\xa7\x37\xb6\xa7\xf2\x78\x79\x82\xc6\xc3\xbb\x74\xe2\x32\x3d\x1b\x9e\x23\x8c\x45\x32\xe3\x07\x5d\x21\xc4\xf9\xb1\x84\xfe\x0b\x00\x00\xff\xff\x44\x05\x3e\x04\x80\x10\x00\x00")

func configChainstorageOptimismMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageOptimismMainnetBaseYml,
		"config/chainstorage/optimism/mainnet/base.yml",
	)
}

func configChainstorageOptimismMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageOptimismMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/optimism/mainnet/base.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageOptimismMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x6f\x83\x30\x10\xc5\xf1\xdd\x9f\xe2\x94\xce\x20\x54\x86\x28\x9e\xd3\xa1\x4b\xb3\xb0\xa3\xc3\x7e\x01\x0b\x6c\x23\xdf\x85\xb4\xdf\xbe\x8a\x55\xf5\xbd\xf5\xaf\xdf\x1b\x0d\x4b\x10\xba\x87\x0d\x14\x84\x66\x24\x14\x56\x78\x9a\x7e\xe8\x14\x79\x05\xb9\x9c\xee\x61\x3e\xb5\x74\xbd\xd1\xd7\x6d\xa0\x8f\xeb\xe7\xd0\x1a\x7e\x8a\x35\x44\xfc\x94\x91\x9d\xcb\x8f\xa4\x96\x3c\x0e\x6c\x79\x8f\x48\x6a\x88\xa6\x87\x5b\xa1\x96\xf0\xcd\x71\xdf\xd0\xb8\x85\x43\x12\xcd\x85\x67\x34\x79\xd7\x10\x83\xc4\x26\x72\x48\x09\xda\x78\x1c\xc6\xb1\x47\x72\xa8\xae\xf7\x05\x22\x96\x14\x71\xcf\x85\xb7\x57\xd0\xfe\x51\xad\xcb\xd1\x9e\xdf\xfb\xde\x54\xf3\xd5\x4f\x5b\x76\xeb\x28\xca\x45\xc7\x05\x61\x5e\xd4\x52\x7f\xee\xea\x8c\xa0\x1c\x28\x35\x0b\xc9\x8f\xff\x76\xd7\xd6\xdb\x4b\x77\xe9\xcc\x6f\x00\x00\x00\xff\xff\x4b\x76\x14\xbe\x09\x01\x00\x00")

func configChainstorageOptimismMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageOptimismMainnetDevelopmentYml,
		"config/chainstorage/optimism/mainnet/development.yml",
	)
}

func configChainstorageOptimismMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageOptimismMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/optimism/mainnet/development.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageOptimismMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x31\x0e\x82\x30\x14\x06\xe0\xbd\xa7\xf8\x83\x3b\x21\x71\xa2\x9b\xa6\x0e\x0e\x42\x0c\x2c\x4e\xe6\x41\x5f\xa1\xa1\x50\xed\xab\x03\xb7\x37\x0e\x1e\xe0\xfb\x0e\xe8\x67\x2f\x70\x3e\x30\xbc\x60\xe2\x8d\x13\x65\xb6\x18\x76\x14\x2b\x2d\x8c\x31\x6e\xce\x4f\x45\x09\xd3\xa2\x69\x7b\x5c\xcc\xb5\x2f\x95\xd8\x45\x2b\x60\x9c\xc9\x6f\x92\x63\xa2\x89\x9f\x64\x6d\x62\x11\x8d\x10\x47\x0a\x73\x94\xac\xeb\xaa\xae\x14\x90\x58\xb2\xfb\x04\x0d\x47\x41\x58\xfd\x41\xde\x5f\xfc\x5b\x86\x10\x07\x8d\xee\xa8\x00\x1b\xde\x1a\xdd\xbd\x53\xc0\xca\x99\x34\xcc\xa3\x39\xdd\x5a\x73\x56\xdf\x00\x00\x00\xff\xff\xa9\xb5\x4b\x15\xaa\x00\x00\x00")

func configChainstorageOptimismMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageOptimismMainnetLocalYml,
		"config/chainstorage/optimism/mainnet/local.yml",
	)
}

func configChainstorageOptimismMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageOptimismMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/optimism/mainnet/local.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageOptimismMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x6e\xc3\x30\x0c\x84\xe1\x5d\x4f\x71\x48\x67\x1b\x46\x33\x14\xd1\x9c\x0e\x5d\x9a\xc5\x7b\x40\x53\x8c\x43\xc4\xa2\x0c\x51\x6e\xda\xb7\x2f\x12\x14\xc5\xad\xf7\x7f\x2f\x18\xaf\xea\xb8\xe8\x22\x50\xc7\x2c\x26\x95\x9a\x24\x4c\x3f\xd8\x65\xba\x09\xb8\xd8\x45\xe7\x5d\x8f\xe3\x09\x9f\xa7\x11\xef\xc7\x8f\xb1\x0f\x74\xf7\x18\x00\xba\xfb\x99\x98\xcb\x66\x2d\x62\xad\x25\x6d\xdc\xb4\x58\x00\xa6\x8d\x6f\xd2\x22\xe4\x9b\xf2\xba\x48\xc7\x57\x52\xf3\x56\x2a\xcd\xd2\x95\xb5\x69\x56\xcf\x5d\x26\x35\x93\xd6\x3d\xd2\xc0\x94\xc4\x58\x9e\x6e\x4a\x55\xdc\x23\x9a\xe4\xb5\x54\x5a\xfa\x3f\xa7\xe7\x92\xe3\xdb\xeb\x7e\x1f\x5c\xea\x97\xd4\xc7\x79\x52\x4b\xe7\xff\x62\xe8\x9f\x8b\x87\xe1\x30\x84\xdf\x00\x00\x00\xff\xff\x4c\x97\x1c\x66\xdf\x00\x00\x00")

func configChainstorageOptimismMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageOptimismMainnetProductionYml,
		"config/chainstorage/optimism/mainnet/production.yml",
	)
}

func configChainstorageOptimismMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageOptimismMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/optimism/mainnet/production.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstoragePolygonMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5b\x6f\x1b\x37\x13\x7d\xdf\x5f\x41\xf8\x7b\xb6\x75\x71\xf4\xb5\x59\x20\x0f\x69\x12\xa4\x46\x52\x3b\x28\x0c\x14\xed\x0b\x31\x4b\xce\x6a\x09\x71\xc9\x0d\x39\xab\x48\xfd\xf5\x05\x2f\xab\x95\xe4\x8b\x1c\x34\xae\xdf\xb4\xe4\x70\x66\x38\xe7\xcc\x1c\xea\x7f\xec\xb6\x51\x9e\xd5\x4a\x23\x53\x9e\x2d\xd1\xa0\x03\x42\xc9\xaa\x2d\x3b\x6b\x61\x85\x4c\x58\x53\xab\xe5\xd9\x05\x7b\x7f\xc3\xae\x6f\x6e\xd9\x87\xf7\x57\xb7\x17\x05\x74\xaa\x2c\x18\x6b\x61\xc3\x4d\xdf\xf2\x4a\x5b\xb1\xe2\xc1\x8b\x2f\xd9\x6c\x3a\x9d\x1e\xef\xf9\x92\x2d\xc2\x62\x58\xf8\x66\xdd\x0a\x5d\x34\x2c\x18\xf3\xe4\x10\x5a\x65\x96\xbc\x02\x12\x0d\xf7\xea\x6f\xcc\xc6\xe3\x96\x32\x84\x6e\x0d\xba\x64\x33\x7f\xb0\x11\x83\x58\x8e\x6b\x34\xc4\x49\xb5\x58\xb2\xd9\xa2\x2d\xe0\x9b\x0f\xe9\xc1\x37\xcf\x41\x08\xdb\x1b\x2a\x99\xc4\x35\x6a\xdb\xb5\x68\xa8\x60\xac\xea\xc5\x0a\xa9\x64\x67\x67\x05\x63\x52\x7f\x0d\xe6\x8c\x49\xd4\xb0\xe5\x1e\x85\x2f\xd9\xeb\x78\x0b\xc6\x0c\x04\xaf\xb8\x81\xb6\xd3\xc8\x45\x03\xca\x78\xb2\x0e\x96\x98\xaf\xc6\x3b\xab\xb7\x4b\x6b\x78\x0b\xca\x18\x24\x2e\xf5\xd7\x78\x72\xad\xbc\xaa\x94\x56\xb4\x8d\xa9\xd9\x9e\xb2\xeb\xff\x47\xd7\x72\x6b\xa0\xb5\xb2\x4a\xa1\x53\x09\x09\x2a\xfd\x7d\xd1\xe2\xe1\x7c\xff\x53\x87\x53\x9d\x4e\xba\xe0\x0d\xaa\x65\x43\x5c\x19\x89\x9b\xa7\xf8\xab\xb6\xc3\x91\xfb\x3c\xaf\xd1\x79\x65\x0d\x4a\x7e\x3a\xcd\xd1\xf6\x64\xc2\xf7\xba\xcd\xc7\x1e\xcb\xfc\x81\x10\xd5\x76\x38\x2b\xef\x09\xd7\x39\xf4\x6a\x19\x0e\xf5\x4e\x73\xdc\x74\xca\x01\x29\x6b\x4a\x76\x39\x6d\x0b\xc6\x1c\x2e\xe3\x57\xef\xcf\x11\x3c\x9d\xcf\x22\x4b\x63\xc0\xcc\x2c\x20\xe0\xc2\xb6\xc1\x91\x8f\xa6\x1f\xff\xba\xfa\x52\x08\x90\x68\x44\xb4\x01\x29\xc3\xde\x40\x49\x1b\x82\x97\x6c\x3f\xf5\xf3\x9c\xd7\xf9\x98\x97\x43\x42\x13\x12\xe1\x1d\x3a\x65\x65\xc9\x7e\x2a\x18\x23\xed\x53\x54\x34\xa1\x28\xb2\x64\xe4\x7a\x4c\x55\x03\xad\x24\x10\xf2\xc6\x7a\x4a\xd4\x8e\x7b\x31\x4e\x38\x94\x8a\xe0\x09\x1c\x65\x50\x4b\x36\x2d\x46\x7e\x2e\x93\x67\x0d\x84\x9e\x4a\x36\x8f\x5f\x3e\x63\x3a\x1b\x0d\x63\x2f\xce\xfd\xb0\x90\xfc\xb3\x5f\x3e\xdf\xbc\xfb\xf4\xee\xd7\xb7\x57\xd7\xfc\xcb\xcd\xe7\x3f\x3f\xde\x5c\x17\x8c\x09\xad\xd0\x50\xf2\xdb\x82\x27\x74\xe9\x77\xc8\x5f\x76\x56\x19\xe2\x4b\x67\xfb\x2e\x97\x26\xde\xda\x6d\x07\x9b\x30\x02\x80\x08\xdb\x8e\xc2\x94\x49\xf9\x68\x58\xe3\x09\x27\xb9\x12\xf6\xf1\x60\x03\xb7\x8e\xae\x3d\x3d\xb8\x76\xf8\xaa\x11\xa8\x77\x39\xa8\xb3\x1e\x89\x80\x77\xe0\x3c\xba\x5d\xf9\x95\x73\x18\xe9\x17\x98\x2a\x95\x27\x08\xd8\xb3\xcb\x38\x0e\x0c\x52\x98\x8c\x25\xbb\xfe\x70\xfb\xc7\xcd\xef\x9f\x86\x02\xf1\xdf\xde\x5e\x5d\x5f\x7f\xb8\x2d\xd2\x24\xe6\x09\xb4\x63\x8a\x0a\x67\xf7\xe0\x73\x60\x96\x98\x47\xe9\xab\xa2\xee\x8d\x08\x1c\x01\xcd\x53\xf6\x67\x67\x85\x97\xab\x48\xba\x9e\x1a\xde\x20\xc8\x90\x65\xbc\x70\x5c\x21\xbb\x42\x93\x17\x0e\x9a\x67\x47\xd2\x86\xa8\xf3\xe5\x64\x62\x6a\x3a\x87\x4e\x5d\x08\xab\x4c\x05\x1e\x2f\x84\x6d\x27\xd0\xa9\x09\x6e\xba\xc9\xfe\xd1\x49\xce\x78\x92\x33\x9e\xac\x67\xf7\xea\x81\x43\x4f\x75\xaf\x73\xcd\x3c\xba\x75\xa2\x43\xa5\x8c\x1c\xc3\x6b\x2b\x40\x07\x0a\x97\xaf\xa7\xaf\xa7\x85\xd7\x30\x5e\x3e\x8f\x22\x89\x9a\x20\xaa\xd1\x01\x29\x87\xf5\x45\x68\x5b\xdc\x74\x28\x08\x65\xcc\xa1\xd6\x36\xc9\xc6\x39\x6b\xad\x51\x64\x5d\xfc\xdd\x59\xad\x31\xfd\x4c\xba\x73\xf4\x31\xd9\x51\xe4\xcd\x2c\x6e\x84\x56\xd7\xb0\xc2\xc9\xae\x65\xde\x84\x2e\x09\xe3\xdf\xd6\xdc\x6f\x8d\xe0\xc6\xca\x7d\x02\xa4\x1c\x49\x05\x10\xe6\xf1\x57\x1b\xd0\x33\x02\xb9\x06\x4f\x69\x30\x05\xb3\xb6\x38\x48\xb4\x02\xb1\xaa\x55\x48\x2f\xd1\x0e\x04\xa9\x75\x90\x9b\xd8\x20\x41\x1c\x55\xdb\xb7\x7b\xdd\x71\x79\x68\xe6\x45\x83\xb2\xd7\xc8\xc9\xe6\x8e\xcf\x3a\x95\xcb\xb3\x6f\x9a\xb6\x2d\x17\xda\x7a\x1c\xed\x66\xd3\x64\xb8\x2f\xde\xf3\x45\x96\x4e\xd1\xa0\x58\xa5\x9e\x1a\x64\x3d\xef\xd4\xa0\xb4\x5d\xa3\xe3\x77\x27\x54\xe8\x67\x87\x9d\xb3\x02\xbd\x47\x19\x06\x5b\x7a\x1a\x0c\x75\x4a\xac\x11\xd6\x88\xde\xb9\x50\x7a\xdc\x90\x03\x41\x36\x72\x68\x9e\x4c\x08\xfc\x8a\x6b\xe5\xa3\xf0\xd7\xd0\xeb\x24\x1a\x43\xf9\xb8\x44\xa1\xc2\x1c\x1e\x6f\x32\x6f\x0f\x2d\x70\x83\xa2\xa7\x43\x93\x57\xcd\xa1\x8d\x92\x61\xfa\xd2\xb6\xdc\x2d\x5d\x8c\x98\x04\x80\xd0\x88\xa6\x85\xc0\xef\x17\x47\x48\x34\x4a\x8f\x44\xdf\xbb\xde\x43\x07\xe7\xcd\x0b\x57\x72\x2c\x5e\x18\x43\xce\x7a\xcf\x8f\x86\xf6\xc9\x72\x2e\x9e\x91\xf0\x62\x65\xeb\x7a\xef\x69\xba\x98\x4e\x5b\x7f\xa7\x19\x66\xd3\x87\x9a\x61\xb7\xd3\x81\x03\xad\x51\x2b\xdf\x86\x71\xfd\x48\xd1\xf3\xf5\xb3\xde\x0b\x34\x14\x1e\x18\x51\x76\x0f\x36\x0f\xe5\xfb\x32\xb4\x5d\x8e\xf5\xfc\xb0\x1d\x01\x15\xfe\x09\xa4\x69\xfa\x44\xc8\x7e\xfe\x0f\x21\xbb\xbc\x8b\xd7\xe2\xe1\xd1\x75\x6a\x72\x3d\x1d\xc7\xe7\x47\x61\x54\xb0\xa4\x5f\x47\xc5\x6f\x10\x1c\x55\x08\x8f\x54\xf3\xdf\xe3\x33\xff\x81\x2d\x75\x07\x8f\xf9\xe2\x24\x1e\x75\xd0\xce\xa0\xb7\x25\xab\x41\xfb\x51\x5e\xf2\x3f\xa9\x90\x71\x50\xe3\xa0\x30\x62\x2b\xf4\xee\x29\x76\x04\xe5\x3c\x61\xe9\xd3\xcb\x9d\x0b\x87\x40\xf7\x61\x36\x18\xdc\xcd\xe4\xc5\x68\xb0\x7b\xbc\x0c\xaf\x95\x1f\x3e\x37\x9f\x0a\xf2\xfc\xfb\xc6\xe6\x63\x4f\x88\x97\x2d\xe9\xde\x23\x70\x78\xb9\xc6\x67\xdf\x3d\x09\xfd\x13\x00\x00\xff\xff\xff\x1d\x90\x43\x5e\x11\x00\x00")

func configChainstoragePolygonMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstoragePolygonMainnetBaseYml,
		"config/chainstorage/polygon/mainnet/base.yml",
	)
}

func configChainstoragePolygonMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstoragePolygonMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/polygon/mainnet/base.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstoragePolygonMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8d\xb1\x6e\xc3\x30\x0c\x05\x77\x7d\x05\x91\xce\x36\x8c\x64\x28\xa2\x39\x1d\xba\x34\x8b\x77\x83\x96\x5e\x1c\xc1\x12\x65\x48\x8c\xd3\xfc\x7d\x61\xa3\x68\xc1\x89\xb8\xe3\xf1\x8d\xfa\x7b\xa8\x74\x0b\x11\x14\x2a\x4d\x10\x14\x56\x78\x1a\x5f\x74\x48\x3c\x83\x5c\x96\x5b\x98\x0e\x2d\x5d\xae\xf4\x75\xed\xe9\xe3\xf2\xd9\xb7\x86\x9f\xd5\x1a\x22\x7e\xd6\x81\x9d\xcb\x0f\x51\x4b\x1e\x2b\x62\x5e\x12\x44\x0d\xd1\xf8\x70\x33\xd4\x12\xbe\x39\x2d\x11\x8d\xbb\x73\x90\xaa\xb9\xf0\x84\x66\xc9\xf1\x35\x65\x69\x12\x07\x11\x68\xe3\xb1\x1a\xc7\x1e\xe2\xb0\x67\xbd\x2f\xa8\xd5\x92\x22\x2d\xb9\x70\xdc\x84\xf6\xb7\xd4\xba\x9c\xec\xfb\xf1\x74\x32\x7b\x72\xf3\xc7\x98\xdd\x3c\x28\x4f\xdb\x42\x54\x95\xc7\x08\x4b\x47\x43\x84\x15\xa2\xff\x28\xb2\xa2\xea\x86\x2a\xca\x8a\xb2\x5f\x07\xf1\xc3\xdf\xcb\xae\xdd\xc7\x9e\xbb\x73\x67\x7e\x02\x00\x00\xff\xff\x7d\xc2\x36\xaf\x1f\x01\x00\x00")

func configChainstoragePolygonMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstoragePolygonMainnetDevelopmentYml,
		"config/chainstorage/polygon/mainnet/development.yml",
	)
}

func configChainstoragePolygonMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstoragePolygonMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/polygon/mainnet/development.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstoragePolygonMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x31\x0e\x82\x30\x14\x06\xe0\xbd\xa7\xf8\x83\x3b\x21\x71\xa2\x9b\xa6\x0e\x0e\x42\x0c\x2c\x4e\xe6\x41\x5f\xa1\xa1\x50\xed\xab\x03\xb7\x37\x0e\x1e\xe0\xfb\x0e\xe8\x67\x2f\x70\x3e\x30\xbc\x60\xe2\x8d\x13\x65\xb6\x18\x76\x14\x2b\x2d\x8c\x31\x6e\xce\x4f\x45\x09\xd3\xa2\x69\x7b\x5c\xcc\xb5\x2f\x95\xd8\x45\x2b\x60\x9c\xc9\x6f\x92\x63\xa2\x89\x9f\x64\x6d\x62\x11\x8d\x10\x47\x0a\x73\x94\xac\xeb\xaa\xae\x14\x90\x58\xb2\xfb\x04\x0d\x47\x41\x58\xfd\x41\xde\x5f\xfc\x5b\x86\x10\x07\x8d\xee\xa8\x00\x1b\xde\x1a\xdd\xbd\x53\xc0\xca\x99\x34\xcc\xa3\x39\xdd\x5a\x73\x56\xdf\x00\x00\x00\xff\xff\xa9\xb5\x4b\x15\xaa\x00\x00\x00")

func configChainstoragePolygonMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstoragePolygonMainnetLocalYml,
		"config/chainstorage/polygon/mainnet/local.yml",
	)
}

func configChainstoragePolygonMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstoragePolygonMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/polygon/mainnet/local.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstoragePolygonMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\x31\x6f\x83\x30\x10\x46\x77\xff\x8a\x53\x3a\x83\x50\x33\x54\xf1\x9c\x0e\x5d\x9a\x85\x1d\x1d\xf6\x07\xb1\xb0\x7d\x96\x6d\x4a\xf2\xef\x2b\x48\x55\xdd\xf2\x0d\xef\x3d\xdd\x1b\xf5\x77\x57\x68\x72\x1e\xe4\x0a\xcd\x88\xc8\x5c\x61\x69\x7c\xd2\x29\xf0\x02\x32\x12\x27\x37\x9f\x5a\xba\xde\xe8\xfb\xd6\xd3\xe7\xf5\xab\x6f\x15\x6f\x45\x2b\x22\xde\xca\xc0\xc6\xc8\x1a\xab\xa6\x94\xc5\xae\xa6\x3a\x89\x8a\x68\x5c\xcd\x82\xaa\x09\x0f\x0e\xc9\xa3\x31\x77\x76\xb1\x54\xc9\x3c\xa3\x49\xe2\x9f\xb3\xc4\x26\xb0\x8b\x11\xb5\xd9\x4d\x65\xd8\x22\x1a\x1c\x59\x6b\x33\x4a\xd1\x54\x11\x92\x64\xf6\xed\x5f\xa6\x35\x12\xf4\xc7\xfb\xf9\xac\x0a\xf2\x0f\xf2\x0e\x8f\x2e\xda\xe1\xdf\xe8\xda\xe3\xf4\xa5\xbb\x74\xaa\x78\xde\x09\x3c\x12\x4c\x85\x1d\x36\xc9\xcb\xe4\xe5\xf5\x7b\x43\x41\xa2\xab\x92\x8f\x9d\xc4\x7b\xbc\x66\xa9\x19\x1c\x90\xd5\x6f\x00\x00\x00\xff\xff\x07\x1f\xc3\xfd\x1d\x01\x00\x00")

func configChainstoragePolygonMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstoragePolygonMainnetProductionYml,
		"config/chainstorage/polygon/mainnet/production.yml",
	)
}

func configChainstoragePolygonMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstoragePolygonMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/polygon/mainnet/production.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageSolanaMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x4b\x6f\x1b\x37\x10\xbe\xef\xaf\x20\xdc\xb3\xad\x87\xad\xb4\xd9\x9b\x9b\x04\xad\x91\xd4\x2e\x5a\x03\x05\x7a\x21\x66\xc9\x59\x2d\x21\x3e\x36\xe4\xac\x22\xf5\xd7\x17\x7c\xc8\x2b\xc9\x0f\xa5\x48\x5b\xdf\xb4\xe4\xbc\xbf\x8f\x33\xa3\xef\xd8\x7d\xa7\x02\x6b\x95\x46\xa6\x02\x5b\xa2\x45\x0f\x84\x92\x35\x5b\x76\x66\x60\x85\x4c\x38\xdb\xaa\xe5\xd9\x05\x7b\x7f\xc7\x6e\xef\xee\xd9\x87\xf7\x37\xf7\x17\x15\xf4\xaa\xae\x18\x33\xb0\xe1\x76\x30\xbc\xd1\x4e\xac\x78\xb4\x12\x6a\x36\x9b\x4e\xa7\xc7\x77\xa1\x66\x8b\x78\x18\x0f\xbe\x38\xbf\x42\x9f\x04\x2b\xc6\x02\x79\x04\xa3\xec\x92\x37\x40\xa2\xe3\x41\xfd\x85\x45\x78\xbc\x52\x96\xd0\xaf\x41\xd7\x6c\xbe\x98\x9a\x70\x70\x97\xfc\x38\x8e\x6b\xb4\xc4\x49\x19\x8c\x86\x4d\x05\x5f\x42\x8c\x10\xbe\x04\x0e\x42\xb8\xc1\x52\xcd\x24\xae\x51\xbb\xde\xa0\xa5\x8a\xb1\x66\x10\x2b\xa4\x9a\x9d\x9d\x55\x8c\x49\xfd\x39\x8a\x33\x26\x51\xc3\x96\x07\x14\xa1\x66\x6f\x53\x22\x8c\x59\x88\x56\x71\x03\xa6\xd7\xc8\x45\x07\xca\x06\x72\x1e\x96\x58\xb2\xe3\xc1\x69\xb0\xc0\x0d\x28\x6b\x91\xb8\xd4\x9f\x93\xe2\x5a\x05\xd5\x28\xad\x68\x9b\x22\x73\x03\x15\xcb\x6f\x92\x65\xb9\xb5\x60\x9c\x6c\xb2\xe7\x5c\x44\x82\x46\xff\x23\x67\x49\xb7\x64\x7f\x4a\x37\x57\xe9\x94\x05\xde\xa1\x5a\x76\xc4\x95\x95\xb8\xf9\x1a\x73\xcd\x76\xa7\xf2\x84\xe1\x35\xfa\xa0\x9c\x45\xc9\x4f\x07\x39\xca\x9e\x0a\xf7\x49\xab\x45\xeb\xa5\xb8\x9f\xf1\xd0\x6c\x77\xba\xf2\xb1\xb7\xde\x63\x50\xcb\xa8\x33\x78\xcd\x71\xd3\x2b\x0f\xa4\x9c\xad\xd9\xe5\xd4\x54\x8c\x79\x5c\xa6\xaf\x21\x9c\x23\x04\x3a\x9f\x25\x7e\x26\x7f\x85\x53\x40\xc0\x85\x33\xd1\x50\x48\xa2\x3f\xfd\x79\xf3\x6b\x25\x40\xa2\x15\x49\x06\xa4\x8c\x77\x3b\x32\xba\xe8\xbc\x66\xfb\x91\x9f\xe7\xb0\xce\xc7\xb0\x3c\x12\xda\x18\x07\xef\xd1\x2b\x27\x6b\xf6\x7d\xc5\x18\xe9\x90\x9d\xa2\x8d\x25\x91\x35\x23\x3f\x60\xae\x19\x68\x25\x81\x90\x77\x2e\x50\xe6\x74\xba\x4b\x6e\xa2\x52\x2e\x41\x20\xf0\x54\x00\xad\xd9\xb4\x1a\x99\xb9\xcc\x96\x35\x10\x06\xaa\xd9\x2c\x7d\x85\x02\xe8\x6c\x14\x4c\x8f\xf0\x6a\x9a\x5f\x6a\x3a\xcb\x2e\xd8\x8f\x9f\xee\xde\x7d\x7c\xf7\xf3\xf5\xcd\x2d\xff\xfd\xee\xd3\xf5\xed\x75\xc5\x98\xd0\x0a\x2d\x65\xcb\x06\x02\xa1\xcf\xbf\x63\x06\xb2\x77\xca\x12\x5f\x7a\x37\xf4\xa5\x36\x8c\x05\x0d\x6b\x3c\x21\x53\x52\x75\x2f\xdb\xda\x51\xe7\x28\xaf\xe9\x41\x5e\xf1\xab\x45\xa0\xc1\x17\xa7\xde\x05\x24\x02\xde\x83\x0f\xe8\x6b\xd6\x82\x0e\xb1\xc0\xca\x7b\x4c\xf4\x8a\x4c\x94\x2a\x10\x44\x70\x63\x3b\x8c\x8d\x0f\x29\xf6\xbd\x9a\xdd\x7e\xb8\xff\xe3\xee\xb7\x8f\x25\x7f\xfe\xcb\xf5\xcd\xed\xed\x87\xfb\x2a\xb7\x59\x9e\x51\x39\x62\xa0\xf0\x6e\x0f\x1e\x0f\x76\x89\xa5\x4d\x5e\x45\xb2\xa8\x90\xb8\x2f\xf5\x67\xde\x7b\x27\x30\x04\xe7\x0b\xb2\xed\x60\x45\x64\x08\x68\x9e\x53\x3b\x3b\xab\x82\x5c\x25\xc6\x0d\xd4\xf1\x0e\x41\xc6\x14\x52\x35\xd2\x09\xb9\x15\xda\x72\x70\xf0\x70\x1e\x18\xda\x11\xf5\xa1\x9e\x4c\x6c\x4b\xe7\xd0\xab\x0b\xe1\x94\x6d\x20\xe0\x85\x70\x66\x02\xbd\x9a\xe0\xa6\x9f\xec\xab\x4e\x72\x3a\x93\x92\xce\x64\x3d\x7b\x72\x10\x78\x0c\xd4\x0e\xba\x44\x1e\xd0\xaf\x33\x13\x1a\x65\xe5\xe8\x5d\x3b\x01\x3a\xf2\xb7\x7e\x3b\x7d\x3b\xad\x82\x86\xb1\x32\xa5\x07\x49\xd4\x04\x35\x9b\x2d\xa6\x07\x8c\x7c\x38\x37\x97\xd3\xc8\x4b\xdc\xf4\x28\x08\x65\x0a\xa3\xd5\x2e\xcf\x8b\x73\x66\x9c\x55\xe4\x7c\xfa\xdd\x3b\xad\x31\xff\xcc\x03\x27\x7d\xc4\x36\xee\x5a\x1e\xb6\x56\x70\xeb\xe4\x01\xd8\xc9\x29\xa9\x58\xd4\x79\xfa\x65\x22\x56\x56\x20\xd7\x10\x28\x37\x99\x9a\x5d\x9a\xea\xc0\x6b\x03\x62\xd5\xaa\xe8\x2b\x53\x0c\x04\xa9\x75\x9c\x1a\x1e\xc9\x6f\xe3\x88\x53\x66\x30\x1c\x88\xd0\xf4\x14\x6a\x76\x79\x28\x16\x44\x87\x72\xd0\xc8\xc9\x95\xe7\x5b\xc6\x4d\xcd\x16\xe6\x48\x34\x5f\x3b\x2e\xb4\x0b\x38\xca\xcd\xa6\x59\x70\x7f\x0a\xcf\x17\x65\x00\x8a\x0e\xc5\x2a\xbf\x9f\xdd\x7c\x2e\x37\x71\xfa\x7a\x2c\xbc\x43\x19\x5b\x51\x1e\xe4\xb1\x39\xe6\xe1\x39\x18\x2e\x9c\x15\x83\xf7\xf1\xb5\xe1\x86\x3c\x08\x72\x11\xf7\x37\x57\x49\x82\x20\xac\xb8\x56\x21\x4d\xe8\x16\x06\x9d\x5b\xfc\xae\x42\x5c\xa2\x50\xb1\x6d\x8e\xc1\xce\xcd\xa1\x04\x6e\x50\x0c\x74\x28\x72\xd5\x1d\xca\x28\x19\xbb\x25\x6d\xeb\x87\xa3\x8b\xb1\xec\x11\x03\xb4\xa2\x33\x10\x29\xf9\xea\x20\x88\x4e\xe9\x91\x98\x7b\xe9\x3d\xa7\xf8\xa6\x28\xbe\x5e\x29\xc7\xea\xc5\xce\xe1\x5d\x08\xfc\xa8\x09\x9f\xac\xe7\xe2\x3f\x24\xb5\x58\xb9\xb6\xdd\xdb\x23\x67\xe1\x11\xdb\x67\xcf\x91\x7d\xb6\x23\x7b\x0f\x1e\xb4\x46\xad\x82\xc9\xbd\xf7\xd9\x82\x97\xd4\xcb\x70\x16\x68\x29\x2e\x03\xb9\xd1\xfd\x1f\x70\x1c\x01\x10\xd7\xf1\xdc\xd6\xbe\x12\x8a\x1f\x5e\x17\x8a\xf9\xe2\xd9\xb6\xf3\x18\x88\x52\xd4\x57\xa3\xfe\x38\x30\xf2\xb8\x38\x2a\x71\x87\xe0\xa9\x41\x78\xa1\x66\xdf\x8e\xc2\xfc\x9b\x51\x58\x94\x75\xed\x25\xfe\xb7\x71\x84\xc5\xb1\xb7\xb7\x54\xc6\x01\x50\xfe\x97\xc4\xb0\xe2\x4c\x8c\x33\x40\x6c\x45\x5c\x9e\x2e\x9f\x02\x6c\x9e\x9f\x4e\xc8\xcb\x30\x17\x1e\x81\x9e\x02\x66\x27\xf0\x78\x93\x7d\x35\xac\x1f\x16\x82\xdd\x3a\xf0\xaf\xb7\xb6\xaf\x45\x72\x7e\x1a\xc8\xc3\x3f\xd4\xcf\x4f\xf2\xd7\x2d\xe9\xde\x62\xb5\x5b\x08\xd3\xc2\xf5\x44\x40\x7f\x07\x00\x00\xff\xff\xb7\xc6\xcd\x69\xae\x10\x00\x00")

func configChainstorageSolanaMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageSolanaMainnetBaseYml,
		"config/chainstorage/solana/mainnet/base.yml",
	)
}

func configChainstorageSolanaMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageSolanaMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/solana/mainnet/base.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageSolanaMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xd0\xbf\x8e\xdc\x20\x10\x06\xf0\x9e\xa7\x18\x5d\x6a\x5b\xbe\xbb\x44\xb9\xa5\xde\x14\x69\xb2\xcd\xf6\x68\x0c\x63\x1b\x19\x86\x15\x33\xde\x3f\x6f\x1f\xd9\xce\x66\xa1\x41\xfa\x3e\x7e\x82\xf9\x06\xe7\x29\x0a\x0c\x31\x11\x44\x81\x91\x98\x2a\x2a\x05\xe8\x1f\xf0\x96\x71\x26\xf0\x85\x87\x38\xbe\xb5\x70\x3c\xc1\x9f\xd3\x19\x7e\x1d\x7f\x9f\x5b\x83\x37\xb1\x06\x00\x6f\xe2\xd0\xfb\xb2\xb0\x5a\x08\x74\xa5\x54\x2e\x99\x58\x0d\x40\xbf\xf8\x99\xd4\x02\xdd\x31\x5f\x12\x35\x7e\xc2\xc8\xa2\xa5\xe2\x48\x8d\x94\x84\x8c\x4d\xc6\xc8\x4c\xda\x04\xba\x1a\x8f\x81\xd8\xd3\xa6\x86\x50\x49\xc4\x82\x52\xbe\x94\x8a\x69\x2d\xb4\xff\xa0\xd6\x97\x6c\x7f\x7e\x7c\x7e\x9a\x4d\x5c\xfb\x7d\x2a\x7e\x76\xa2\x58\xd5\x4d\x14\xc7\x49\x2d\x7c\x75\xfb\x32\x42\xf5\x4a\x75\xab\x45\x0e\xee\xbf\xdd\xb5\xdb\xb6\x87\xee\xd0\x19\x49\xf8\x82\x76\xc2\x05\x4a\x8a\x16\xde\x57\xe4\x19\x69\xcc\xf4\x0a\xb2\x01\x28\x8b\xba\x32\x38\x79\xb0\x77\x5c\x02\xb9\x10\x45\x71\xfd\xc8\xf3\xa6\x46\xaa\x16\x3e\xb6\x53\x26\x27\x91\x3d\xb9\x84\xa2\x6e\x33\x2d\xbc\xff\xc8\xe6\x56\xea\x3c\xa4\xb2\x4f\xb5\x47\x3f\x0f\x31\xa5\xfd\xd9\x00\xbc\x64\xe7\x0b\xfb\xa5\x56\x62\x75\x74\xd7\x8a\x5e\x4b\x15\x0b\xdf\xbf\xcc\xdf\x00\x00\x00\xff\xff\x76\xe7\x46\xe6\xc3\x01\x00\x00")

func configChainstorageSolanaMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageSolanaMainnetDevelopmentYml,
		"config/chainstorage/solana/mainnet/development.yml",
	)
}

func configChainstorageSolanaMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageSolanaMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/solana/mainnet/development.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageSolanaMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x31\x0e\x82\x30\x14\x06\xe0\xbd\xa7\xf8\x83\x3b\x21\x71\xa2\x9b\xa6\x0e\x0e\x42\x0c\x2c\x4e\xe6\x41\x5f\xa1\xa1\x50\xed\xab\x03\xb7\x37\x0e\x1e\xe0\xfb\x0e\xe8\x67\x2f\x70\x3e\x30\xbc\x60\xe2\x8d\x13\x65\xb6\x18\x76\x14\x2b\x2d\x8c\x31\x6e\xce\x4f\x45\x09\xd3\xa2\x69\x7b\x5c\xcc\xb5\x2f\x95\xd8\x45\x2b\x60\x9c\xc9\x6f\x92\x63\xa2\x89\x9f\x64\x6d\x62\x11\x8d\x10\x47\x0a\x73\x94\xac\xeb\xaa\xae\x14\x90\x58\xb2\xfb\x04\x0d\x47\x41\x58\xfd\x41\xde\x5f\xfc\x5b\x86\x10\x07\x8d\xee\xa8\x00\x1b\xde\x1a\xdd\xbd\x53\xc0\xca\x99\x34\xcc\xa3\x39\xdd\x5a\x73\x56\xdf\x00\x00\x00\xff\xff\xa9\xb5\x4b\x15\xaa\x00\x00\x00")

func configChainstorageSolanaMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageSolanaMainnetLocalYml,
		"config/chainstorage/solana/mainnet/local.yml",
	)
}

func configChainstorageSolanaMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageSolanaMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/solana/mainnet/local.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageSolanaMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x4f\xc3\x30\x10\xc5\xf1\xdd\x9f\xe2\xa9\xcc\xb1\x22\x3a\xa0\x7a\x2e\x03\x0b\x5d\xb2\x57\x97\xf3\x35\xb5\x6a\x9f\x23\x9f\x43\xe1\xdb\xa3\x56\x08\xbd\xf5\xfd\x7f\x2f\x98\xae\xc9\x70\x49\x59\x90\x0c\x8b\xa8\x34\xea\x12\x31\xff\x60\x57\xe8\x26\xe0\xaa\x97\xb4\xec\x3c\x8e\x27\x7c\x9e\x26\xbc\x1f\x3f\x26\xef\xe8\x6e\xc1\x01\x74\xb7\x33\x31\xd7\x4d\x7b\xc0\xda\x6a\xdc\xb8\xa7\xaa\x0e\x98\x37\xbe\x49\x0f\x90\x6f\x2a\x6b\x96\x81\xaf\x94\xd4\x7a\x6d\xb4\xc8\x60\x35\x93\xd2\x50\x28\xa9\x4a\x1f\x1e\xa1\x63\x8a\xa2\x2c\x4f\x35\xc6\x26\x66\x01\x5d\xca\x5a\x1b\x65\xff\xa7\x78\xae\x25\xbc\xbd\xee\xf7\xce\xa4\x7d\x49\x7b\x9c\xe7\xa4\xf1\xfc\x5f\x8c\xfe\xb9\x70\x18\x0f\xa3\xfb\x0d\x00\x00\xff\xff\x65\xd1\xb9\x68\xdd\x00\x00\x00")

func configChainstorageSolanaMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageSolanaMainnetProductionYml,
		"config/chainstorage/solana/mainnet/production.yml",
	)
}

func configChainstorageSolanaMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageSolanaMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/solana/mainnet/production.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"config/chainstorage/arbitrum/mainnet/base.yml":         configChainstorageArbitrumMainnetBaseYml,
	"config/chainstorage/arbitrum/mainnet/development.yml":  configChainstorageArbitrumMainnetDevelopmentYml,
	"config/chainstorage/arbitrum/mainnet/local.yml":        configChainstorageArbitrumMainnetLocalYml,
	"config/chainstorage/arbitrum/mainnet/production.yml":   configChainstorageArbitrumMainnetProductionYml,
	"config/chainstorage/avacchain/mainnet/base.yml":        configChainstorageAvacchainMainnetBaseYml,
	"config/chainstorage/avacchain/mainnet/development.yml": configChainstorageAvacchainMainnetDevelopmentYml,
	"config/chainstorage/avacchain/mainnet/production.yml":  configChainstorageAvacchainMainnetProductionYml,
	"config/chainstorage/bitcoin/mainnet/base.yml":          configChainstorageBitcoinMainnetBaseYml,
	"config/chainstorage/bitcoin/mainnet/development.yml":   configChainstorageBitcoinMainnetDevelopmentYml,
	"config/chainstorage/bitcoin/mainnet/local.yml":         configChainstorageBitcoinMainnetLocalYml,
	"config/chainstorage/bitcoin/mainnet/production.yml":    configChainstorageBitcoinMainnetProductionYml,
	"config/chainstorage/bsc/mainnet/base.yml":              configChainstorageBscMainnetBaseYml,
	"config/chainstorage/bsc/mainnet/development.yml":       configChainstorageBscMainnetDevelopmentYml,
	"config/chainstorage/bsc/mainnet/local.yml":             configChainstorageBscMainnetLocalYml,
	"config/chainstorage/bsc/mainnet/production.yml":        configChainstorageBscMainnetProductionYml,
	"config/chainstorage/dogecoin/mainnet/base.yml":         configChainstorageDogecoinMainnetBaseYml,
	"config/chainstorage/dogecoin/mainnet/development.yml":  configChainstorageDogecoinMainnetDevelopmentYml,
	"config/chainstorage/dogecoin/mainnet/local.yml":        configChainstorageDogecoinMainnetLocalYml,
	"config/chainstorage/dogecoin/mainnet/production.yml":   configChainstorageDogecoinMainnetProductionYml,
	"config/chainstorage/ethereum/goerli/base.yml":          configChainstorageEthereumGoerliBaseYml,
	"config/chainstorage/ethereum/goerli/development.yml":   configChainstorageEthereumGoerliDevelopmentYml,
	"config/chainstorage/ethereum/goerli/local.yml":         configChainstorageEthereumGoerliLocalYml,
	"config/chainstorage/ethereum/goerli/production.yml":    configChainstorageEthereumGoerliProductionYml,
	"config/chainstorage/ethereum/mainnet/base.yml":         configChainstorageEthereumMainnetBaseYml,
	"config/chainstorage/ethereum/mainnet/development.yml":  configChainstorageEthereumMainnetDevelopmentYml,
	"config/chainstorage/ethereum/mainnet/local.yml":        configChainstorageEthereumMainnetLocalYml,
	"config/chainstorage/ethereum/mainnet/production.yml":   configChainstorageEthereumMainnetProductionYml,
	"config/chainstorage/optimism/mainnet/base.yml":         configChainstorageOptimismMainnetBaseYml,
	"config/chainstorage/optimism/mainnet/development.yml":  configChainstorageOptimismMainnetDevelopmentYml,
	"config/chainstorage/optimism/mainnet/local.yml":        configChainstorageOptimismMainnetLocalYml,
	"config/chainstorage/optimism/mainnet/production.yml":   configChainstorageOptimismMainnetProductionYml,
	"config/chainstorage/polygon/mainnet/base.yml":          configChainstoragePolygonMainnetBaseYml,
	"config/chainstorage/polygon/mainnet/development.yml":   configChainstoragePolygonMainnetDevelopmentYml,
	"config/chainstorage/polygon/mainnet/local.yml":         configChainstoragePolygonMainnetLocalYml,
	"config/chainstorage/polygon/mainnet/production.yml":    configChainstoragePolygonMainnetProductionYml,
	"config/chainstorage/solana/mainnet/base.yml":           configChainstorageSolanaMainnetBaseYml,
	"config/chainstorage/solana/mainnet/development.yml":    configChainstorageSolanaMainnetDevelopmentYml,
	"config/chainstorage/solana/mainnet/local.yml":          configChainstorageSolanaMainnetLocalYml,
	"config/chainstorage/solana/mainnet/production.yml":     configChainstorageSolanaMainnetProductionYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"config": &bintree{nil, map[string]*bintree{
		"chainstorage": &bintree{nil, map[string]*bintree{
			"arbitrum": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageArbitrumMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageArbitrumMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageArbitrumMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageArbitrumMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"avacchain": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageAvacchainMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageAvacchainMainnetDevelopmentYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageAvacchainMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"bitcoin": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageBitcoinMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageBitcoinMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageBitcoinMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageBitcoinMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"bsc": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageBscMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageBscMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageBscMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageBscMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"dogecoin": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageDogecoinMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageDogecoinMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageDogecoinMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageDogecoinMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"ethereum": &bintree{nil, map[string]*bintree{
				"goerli": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageEthereumGoerliBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageEthereumGoerliDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageEthereumGoerliLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageEthereumGoerliProductionYml, map[string]*bintree{}},
				}},
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageEthereumMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageEthereumMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageEthereumMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageEthereumMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"optimism": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageOptimismMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageOptimismMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageOptimismMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageOptimismMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"polygon": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstoragePolygonMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstoragePolygonMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstoragePolygonMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstoragePolygonMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"solana": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageSolanaMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageSolanaMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageSolanaMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageSolanaMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
