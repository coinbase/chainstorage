// Code generated for package config by go-bindata DO NOT EDIT. (@generated)
// sources:
// config/chainstorage/arbitrum/mainnet/base.yml
// config/chainstorage/arbitrum/mainnet/development.yml
// config/chainstorage/arbitrum/mainnet/local.yml
// config/chainstorage/arbitrum/mainnet/production.yml
// config/chainstorage/avacchain/mainnet/base.yml
// config/chainstorage/avacchain/mainnet/development.yml
// config/chainstorage/avacchain/mainnet/production.yml
// config/chainstorage/bitcoin/mainnet/base.yml
// config/chainstorage/bitcoin/mainnet/development.yml
// config/chainstorage/bitcoin/mainnet/local.yml
// config/chainstorage/bitcoin/mainnet/production.yml
// config/chainstorage/bsc/mainnet/base.yml
// config/chainstorage/bsc/mainnet/development.yml
// config/chainstorage/bsc/mainnet/local.yml
// config/chainstorage/bsc/mainnet/production.yml
// config/chainstorage/dogecoin/mainnet/base.yml
// config/chainstorage/dogecoin/mainnet/development.yml
// config/chainstorage/dogecoin/mainnet/local.yml
// config/chainstorage/dogecoin/mainnet/production.yml
// config/chainstorage/ethereum/goerli/base.yml
// config/chainstorage/ethereum/goerli/development.yml
// config/chainstorage/ethereum/goerli/local.yml
// config/chainstorage/ethereum/goerli/production.yml
// config/chainstorage/ethereum/mainnet/base.yml
// config/chainstorage/ethereum/mainnet/development.yml
// config/chainstorage/ethereum/mainnet/local.yml
// config/chainstorage/ethereum/mainnet/production.yml
// config/chainstorage/optimism/mainnet/base.yml
// config/chainstorage/optimism/mainnet/development.yml
// config/chainstorage/optimism/mainnet/local.yml
// config/chainstorage/optimism/mainnet/production.yml
// config/chainstorage/polygon/mainnet/base.yml
// config/chainstorage/polygon/mainnet/development.yml
// config/chainstorage/polygon/mainnet/local.yml
// config/chainstorage/polygon/mainnet/production.yml
// config/chainstorage/solana/mainnet/base.yml
// config/chainstorage/solana/mainnet/development.yml
// config/chainstorage/solana/mainnet/local.yml
// config/chainstorage/solana/mainnet/production.yml
package config

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _configChainstorageArbitrumMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5b\x6f\x1b\x37\x13\x7d\xdf\x5f\x41\xf8\x7b\xb6\xb5\x92\xe3\x7c\xcd\x02\x7d\xc8\x0d\xad\x91\xc6\x2e\x52\x17\x05\xfa\x42\xcc\x92\xb3\x5a\x42\xbc\x6c\xc8\x59\x45\xea\xaf\x2f\xb8\xe4\x7a\x25\x55\xb6\x1c\xa4\xa9\xdf\x56\xe4\x70\x2e\x67\x0e\xcf\x50\xff\x63\x77\xad\x0a\xac\x51\x1a\x99\x0a\x6c\x89\x16\x3d\x10\x4a\x56\x6f\xd9\x99\x81\x15\x32\xe1\x6c\xa3\x96\x67\x17\xec\xdd\x2d\xbb\xb9\xbd\x63\xef\xdf\x5d\xdf\x5d\x14\xd0\xa9\xaa\x60\xcc\xc0\x86\xdb\xde\xf0\x5a\x3b\xb1\xe2\xd1\x4b\xa8\xd8\xbc\x2c\xcb\xc3\xbd\x50\xb1\xab\xb8\x18\x17\xbe\x38\xbf\x42\x3f\x18\x16\x8c\x05\xf2\x08\x46\xd9\x25\xaf\x81\x44\xcb\x83\xfa\x0b\xb3\xf1\xb4\xa5\x2c\xa1\x5f\x83\xae\xd8\x3c\xec\x6d\x0c\x41\x1c\xc7\x35\x5a\xe2\xa4\x0c\x46\xaf\xa6\x80\x2f\x21\xa6\x07\x5f\x02\x07\x21\x5c\x6f\xa9\x62\x12\xd7\xa8\x5d\x67\xd0\x52\xc1\x58\xdd\x8b\x15\x52\xc5\xce\xce\x0a\xc6\xa4\xfe\x1c\xcd\x19\x93\xa8\x61\xcb\x03\x8a\x50\xb1\x57\x43\x15\x8c\x59\x88\x5e\x71\x03\xa6\xd3\xc8\x45\x0b\xca\x06\x72\x1e\x96\x98\x4b\xe3\xe0\x6b\x45\xbe\x37\xdc\x80\xb2\x16\x89\x4b\xfd\x79\x38\xba\x56\x41\xd5\x4a\x2b\xda\x0e\xb9\xb9\x9e\xb2\xef\x97\x83\x6f\xb9\xb5\x60\x9c\xac\x53\xec\x84\x21\x41\xad\xbf\x32\xdc\x70\x3a\x23\x70\xea\x74\x42\xea\xb4\x0f\xde\xa2\x5a\xb6\xc4\x95\x95\xb8\x79\x8a\xc3\x7a\x3b\x1e\x39\xea\x7a\x8d\x3e\x28\x67\x51\xf2\xd3\x89\x4e\xb6\xa7\x53\x3e\xea\x37\x9f\x7b\x2c\xf7\x07\x62\xd4\xdb\xf1\xac\x3c\x16\xaf\xf3\x18\xd4\x32\x9e\xea\xbd\xe6\xb8\xe9\x94\x07\x52\xce\x56\xec\xb2\x34\x05\x63\x1e\x97\xc3\xaf\x3e\x9c\x23\x04\x3a\x9f\x0f\x5c\x1d\x22\x66\x7e\x01\x01\x17\xce\x44\x47\x61\x30\xfd\xe9\xcf\xeb\x5f\x0b\x01\x12\xad\x18\x6c\x40\xca\xb8\x37\x12\xd3\xc5\xe0\x15\xdb\xcd\xfd\x7c\x4c\xec\x7c\x4a\xcc\x23\xa1\x8d\x99\xf0\x0e\xbd\x72\xb2\x62\xff\x2f\x18\x23\x1d\x52\x58\xb4\x11\x16\x59\x31\xf2\x3d\x26\xdc\x40\x2b\x09\x84\xbc\x75\x81\x12\xc3\x87\xbd\x21\x50\x3c\x94\x60\x08\x04\x9e\x72\x63\x2b\x56\x16\x13\x4b\x97\xc9\xb3\x06\xc2\x40\x15\x9b\x0f\xbf\x42\x6e\xeb\x7c\x32\x1c\xae\xe4\x55\x59\x9a\x30\xae\xa5\x10\xec\xcd\x2f\xb7\x6f\x3f\xbc\xfd\xf9\xf5\xf5\x0d\x7f\xfd\xe9\xcd\xf5\xdd\xa7\xdf\x3f\x16\x8c\x09\xad\xd0\x52\xf2\x6d\x20\x10\xfa\xf4\x1d\x6b\x90\x9d\x53\x96\xf8\xd2\xbb\xbe\xcb\xf8\x30\x16\x34\xac\xf1\x84\x4d\x2e\xd6\x3d\xee\x6b\x24\xd0\xc9\xca\x1a\x04\xea\x7d\x0e\xea\x5d\x40\x22\xe0\x1d\xf8\x80\xbe\x62\x0d\xe8\x10\x21\x56\xde\xe3\x40\xb2\xc8\x47\xa9\x02\x41\x6c\x70\xd4\xc6\xa8\x82\x48\x51\x04\x2b\x76\xf3\xfe\xee\x8f\xdb\x4f\x1f\xee\x11\xe0\x1f\x5f\x5f\xdf\xdc\xbc\xbf\x2b\x92\xea\xf2\xd4\x99\x7f\x30\x51\x78\xb7\xd3\x24\x0f\x76\x89\x59\x37\x5f\x14\x4d\x6f\x45\x64\x02\x68\x9e\x0a\x38\x3b\x2b\x82\x5c\x0d\xdc\xea\xa9\xe5\x2d\x82\x8c\x89\x0e\x35\x0f\x2b\xe4\x56\x68\xf3\xc2\xde\x25\xb9\xe7\x62\x4b\xd4\x85\x6a\x36\xb3\x0d\x9d\x43\xa7\x2e\x84\x53\xb6\x86\x80\x17\xc2\x99\x19\x74\x6a\x86\x9b\x6e\xb6\x7b\x74\x36\xa6\x3c\xcb\x29\xcf\xd6\xf3\xa3\xea\xef\x31\x50\xd3\xeb\xcc\xbe\x80\x7e\x9d\x3a\x5e\x2b\x2b\xa7\xf8\xda\x09\xd0\x91\xa9\xd5\xab\xf2\x55\x59\x04\x0d\x53\xf5\x59\x75\x24\x6a\x82\x8a\x2d\xca\x72\x8f\x7b\xe3\xfa\xdc\x5c\x96\x91\x81\xb8\xe9\x50\x10\xca\x21\x8d\x46\xbb\x34\x27\xce\x99\x71\x56\x91\xf3\xc3\x77\xe7\xb4\xc6\xf4\x99\x06\x0d\xfa\xd9\x3d\x39\x7e\x8c\x75\x44\x21\x77\x0d\x0f\x5b\x2b\xb8\x75\x72\xb7\xc1\x29\x01\x52\x11\xe2\xc5\xf0\x65\x62\x6f\xac\x40\xae\x21\x50\x92\x97\x8a\x2d\x4c\x31\xa2\x4c\xdb\x0e\x73\x39\x75\xc5\x7e\xbb\x2c\xf6\x52\xab\x41\xac\x1a\x15\x13\x4a\x7c\x03\x41\x6a\x1d\x07\x8a\x47\xf2\xdb\x38\xff\x94\xe9\x0d\x07\x22\x34\x1d\x85\x8a\x5d\xee\x9b\x05\xd1\xa2\xec\x35\x72\x72\xf9\x36\xe7\x49\x54\xb1\x2b\x73\x60\x9a\xb6\x1d\x17\xda\x05\x9c\xec\xe6\x65\x32\xdc\x9d\xcf\x8b\xab\x3c\x1d\x45\x8b\x62\x95\x2e\xd3\x38\xb9\xf3\x4e\x1c\xcd\x1e\x3b\xef\x04\x86\x80\x32\x2a\x53\x1a\xf1\x51\x2d\xd3\x64\xed\x0d\x17\xce\x8a\xde\xfb\x88\x2e\x6e\xc8\x83\x20\x17\xc9\x71\x99\x9d\x10\x84\x15\xd7\x2a\x0c\xf3\xbb\x81\x5e\x27\xd9\x1f\x21\xe2\x12\x85\x8a\x42\x3a\x65\xbb\x30\xfb\x16\xb8\x41\xd1\xd3\xbe\xc9\x8b\x76\xdf\x46\xc9\xa8\x9e\xb4\xad\xee\x97\x2e\x26\xdc\x63\x13\xd0\x8a\xd6\x40\x24\xee\xb3\x77\x41\xb4\x4a\x4f\xf4\xdd\x29\xef\xa1\x83\x2f\xf3\xc1\xe7\x83\x72\x42\x2f\x2a\x8c\x77\x21\xf0\x03\x49\x3e\x89\xe7\xd5\x77\x64\xb5\x58\xb9\xa6\x39\x7c\x62\xee\xd3\x7d\xfe\x10\xdb\xe7\x23\xdb\x3b\xf0\xa0\x35\x6a\x15\x4c\x54\xe1\x47\x00\xcf\xa5\xe7\x61\x2d\xd0\x52\x7c\x1e\x24\x39\xfc\x2f\xda\x71\xd0\x80\xf8\x52\x4f\xe2\xf7\xc4\x56\xfc\xf0\xbc\xad\xb8\x7a\x58\x77\xbe\xb2\x11\xdf\x1f\xea\x69\xaa\xa4\x99\x72\x80\x70\x8b\xe0\xa9\x46\x78\x04\xb2\x6f\x6f\xc2\xe2\x9b\x9b\x70\x19\x4e\x70\xbf\x89\x83\x2d\x0e\xc3\xe9\xf9\x93\xe4\x3f\xff\x61\x89\x49\xc5\x51\x19\x27\x80\xd8\x0a\xbd\x73\xa1\x8e\x74\x2b\xa4\xa7\x31\x17\x1e\x81\x8e\x75\x65\x34\xb8\x7f\xd5\x4e\x41\x9f\xad\xd3\xf7\x6f\x86\xf1\xc5\xf0\xaf\xeb\xda\x53\xfb\xb8\x38\xd1\xc6\xfd\xbb\x74\xe2\x32\x3d\x1b\x9e\x23\x8c\x45\x32\x8b\x0f\xc6\xe1\x41\x76\x24\xa1\xbf\x03\x00\x00\xff\xff\x3d\x6a\x1d\xea\xc3\x10\x00\x00")

func configChainstorageArbitrumMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageArbitrumMainnetBaseYml,
		"config/chainstorage/arbitrum/mainnet/base.yml",
	)
}

func configChainstorageArbitrumMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageArbitrumMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/arbitrum/mainnet/base.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageArbitrumMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xbb\x6e\xeb\x30\x10\x84\xe1\x9e\x4f\xb1\xf0\xa9\x45\xe8\xc4\x08\x02\xb3\x76\x8a\x34\x71\xa3\x5e\x58\x91\x63\x89\x10\x2f\x02\xb9\x92\x93\xb7\x0f\x4c\x04\x99\x69\x7f\x7c\xff\x68\x58\x7c\xa5\xbb\x0f\x20\x5f\x69\x46\x42\x61\x81\xa3\xe9\x9b\x4e\x91\x57\x90\xcd\xe9\xee\xe7\x93\xa6\xeb\x8d\x3e\x6f\x03\xbd\x5f\x3f\x06\xad\xf8\x51\x8d\x22\xe2\x47\x1d\xd9\xda\xbc\x27\x31\xe4\x70\x20\xe4\x2d\x22\x89\x22\x9a\x76\xbb\x42\x0c\xe1\x8b\xe3\x16\xd0\xd9\x85\x7d\xaa\x92\x0b\xcf\xe8\xb8\x4c\x5e\xca\x1e\xbb\xc8\x3e\x25\x48\xe7\x70\x28\xcb\x0e\xc9\xa2\xb9\xce\x15\xd4\x6a\x48\x10\xb7\x5c\x38\x3c\x03\xfd\x4b\x69\x9b\xa3\x79\x7b\x39\x9f\x55\x33\x9f\xfd\x14\xb2\x5d\xc7\x2a\x5c\x64\x5c\xe0\xe7\x45\x0c\xfd\x7f\xed\xdb\x54\x45\x39\x50\x5a\xe6\x93\x1b\xff\xec\x5e\xb7\x9b\x4b\x7f\xe9\xd5\x4f\x00\x00\x00\xff\xff\xb0\x89\x54\x72\x09\x01\x00\x00")

func configChainstorageArbitrumMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageArbitrumMainnetDevelopmentYml,
		"config/chainstorage/arbitrum/mainnet/development.yml",
	)
}

func configChainstorageArbitrumMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageArbitrumMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/arbitrum/mainnet/development.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageArbitrumMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageArbitrumMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageArbitrumMainnetLocalYml,
		"config/chainstorage/arbitrum/mainnet/local.yml",
	)
}

func configChainstorageArbitrumMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageArbitrumMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/arbitrum/mainnet/local.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageArbitrumMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x6e\xc3\x30\x0c\x84\xe1\x5d\x4f\x71\x48\x67\x1b\x46\x33\x14\xd1\x9c\x0e\x5d\x9a\xc5\x7b\x40\x53\x8c\x43\xc4\xa2\x0c\x4a\x6e\xda\xb7\x2f\x12\x14\xc5\xad\xf7\x7f\x2f\x18\xaf\x5a\x71\xd1\x45\xa0\x15\xb3\x98\x38\x35\x49\x98\x7e\xb0\xcb\x74\x13\x70\xb1\x8b\xce\xbb\x1e\xc7\x13\x3e\x4f\x23\xde\x8f\x1f\x63\x1f\xe8\x5e\x63\x00\xe8\x5e\xcf\xc4\x5c\x36\x6b\x11\xab\x97\xb4\x71\xd3\x62\x01\x98\x36\xbe\x49\x8b\x90\x6f\xca\xeb\x22\x1d\x5f\x49\xad\xb6\xe2\x34\x4b\x47\x3e\x69\xf3\x2d\x77\x99\xd4\x4c\x5a\xf7\x48\x03\x53\x12\x63\x79\xba\x29\xb9\xd4\x1a\xd1\x24\xaf\xc5\x69\xe9\xff\x9c\x9e\x4b\x8e\x6f\xaf\xfb\x7d\xa8\xe2\x5f\xe2\x8f\xf3\xa4\x96\xce\xff\xc5\xd0\x3f\x17\x0f\xc3\x61\x08\xbf\x01\x00\x00\xff\xff\x86\xa4\x5c\x69\xdf\x00\x00\x00")

func configChainstorageArbitrumMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageArbitrumMainnetProductionYml,
		"config/chainstorage/arbitrum/mainnet/production.yml",
	)
}

func configChainstorageArbitrumMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageArbitrumMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/arbitrum/mainnet/production.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageAvacchainMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x4f\x6f\x1b\xb7\x13\xbd\xef\xa7\x20\xfc\x3b\xdb\x5a\xc9\x71\x7e\xcd\x02\x3d\xb8\x49\xd0\x1a\x69\xed\xa2\x35\x5a\xa0\x17\x62\x96\x9c\xd5\x12\xe2\x92\x1b\x72\x56\x91\xfa\xe9\x0b\xfe\x59\xad\x14\xcb\x96\x83\x34\xf5\x6d\x45\xce\x0c\x67\xe6\x3d\xce\xa3\xfe\xc7\xee\x5b\xe5\x59\xa3\x34\x32\xe5\xd9\x12\x0d\x3a\x20\x94\xac\xde\xb2\xb3\x0e\x56\xc8\x84\x35\x8d\x5a\x9e\x5d\xb0\x77\x77\xec\xf6\xee\x9e\xbd\x7f\x77\x73\x7f\x51\x40\xaf\xaa\x82\xb1\x0e\x36\xdc\x0c\x1d\xaf\xb5\x15\x2b\x1e\xa2\xf8\x8a\xcd\xcb\xb2\xfc\x7c\xcf\x57\xec\x2a\x2c\x86\x85\x4f\xd6\xad\xd0\x45\xc3\x82\x31\x4f\x0e\xa1\x53\x66\xc9\x6b\x20\xd1\x72\xaf\xfe\xc6\x6c\x3c\x6d\x29\x43\xe8\xd6\xa0\x2b\x36\xf7\x07\x1b\xf1\x10\xcb\x71\x8d\x86\x38\xa9\x0e\x43\xd4\xae\x80\x4f\x3e\xa4\x07\x9f\x3c\x07\x21\xec\x60\xa8\x62\x12\xd7\xa8\x6d\xdf\xa1\xa1\x82\xb1\x7a\x10\x2b\xa4\x8a\x9d\x9d\x15\x8c\x49\xfd\x31\x98\x33\x26\x51\xc3\x96\x7b\x14\xbe\x62\x6f\x62\x15\x8c\x19\x08\x51\x71\x03\x5d\xaf\x91\x8b\x16\x94\xf1\x64\x1d\x2c\x31\x97\xc6\x61\x0d\x22\xae\xf3\x0e\x94\x31\x48\x5c\xea\x8f\xd1\x77\xad\xbc\xaa\x95\x56\xb4\x8d\xc9\xd9\x81\x72\xf0\xd7\x31\xb8\xdc\x1a\xe8\xac\xac\xd3\xe1\xa9\x89\x04\xb5\xfe\xd2\xf3\xa2\x7b\xee\xc1\x29\xf7\xd4\xab\x67\x04\xe1\x2d\xaa\x65\x4b\x5c\x19\x89\x9b\xe7\x44\xac\xb7\xa3\xcb\xf1\xd8\x6b\x74\x5e\x59\x83\x92\x9f\x4e\x75\xb2\x7d\x46\xd2\x47\x03\x67\xc7\xa7\xb2\x7f\xe4\x90\x7a\x3b\xfa\xca\xa3\x07\xf6\x0e\xbd\x5a\x06\xb7\xc1\x69\x8e\x9b\x5e\x39\x20\x65\x4d\xc5\x2e\xcb\xae\x60\xcc\xe1\x32\xfe\x1a\xfc\x39\x82\xa7\xf3\x79\x64\x6c\x3c\x32\xb3\x0c\x08\xb8\xb0\x5d\x08\xe4\xa3\xe9\x8f\x7f\xdd\xfc\x5a\x08\x90\x68\x44\xb4\x01\x29\xc3\xde\x48\x4f\x1b\x0e\xaf\xd8\x7e\xf2\xe7\xbb\xcc\xce\xa7\xcc\x1c\x12\x9a\x90\x0a\xef\xd1\x29\x2b\x2b\xf6\xff\x82\x31\xd2\x3e\x9d\x8b\x26\x34\x46\x56\x8c\xdc\x80\xa9\x73\xa0\x95\x04\x42\xde\x5a\x4f\x89\xe8\x71\x2f\x06\x0e\x4e\xa9\x11\x9e\xc0\x51\x06\xb7\x62\x65\x31\x71\x75\x99\x22\x6b\x20\xf4\x54\xb1\x79\xfc\xe5\x33\xb2\xf3\xc9\x30\xde\xcc\x85\x1f\x17\x52\x7c\xf6\xc3\xcf\x77\x6f\x3f\xbc\xfd\xe9\xfa\xe6\x96\x5f\xff\x71\xfd\x36\x7e\x15\x8c\x09\xad\xd0\x50\x8a\xdc\x81\x27\x74\xe9\x3b\x54\x20\x7b\xab\x0c\xf1\xa5\xb3\x43\x9f\xdb\xc3\x98\xd7\xb0\xc6\x13\x36\xb9\x54\xfb\x74\xac\x91\x40\x27\xeb\x6a\x10\x68\x70\xf9\x50\x67\x3d\x12\x01\xef\xc1\x79\x74\x15\x6b\x40\xfb\xd0\x60\xe5\x1c\x46\x92\x05\x3e\x4a\xe5\x09\x02\xbe\x61\x40\x86\x51\x88\x14\x26\x61\xc5\x6e\xdf\xdf\xff\x79\xf7\xdb\x87\xa9\x05\xfc\x97\xeb\x9b\xdb\xdb\xf7\xf7\x45\x9a\xbd\x3c\x01\xf3\x90\x8a\xc2\xd9\x3d\x90\x1c\x98\x25\xe6\xf1\xf9\xaa\x68\x06\x23\x02\x13\x40\xf3\x54\xc2\xd9\x59\xe1\xe5\x2a\x92\x6b\xa0\x96\xb7\x08\x32\xa4\x1a\xab\x8e\x2b\x64\x57\x68\xf2\xc2\xc1\x35\xd9\x91\xb1\x25\xea\x7d\x35\x9b\x99\x86\xce\xa1\x57\x17\xc2\x2a\x53\x83\xc7\x0b\x61\xbb\x19\xf4\x6a\x86\x9b\x7e\xb6\xef\x3a\xdb\xe5\x3c\xcb\x39\xcf\xd6\xf3\xa3\x2a\xe0\xd0\x53\x33\xe8\x4c\x3f\x8f\x6e\x9d\x40\xaf\x95\x91\x53\x02\xda\x0a\xd0\x81\xaa\xd5\x9b\xf2\x4d\x59\x78\x0d\x53\xf9\x79\xf4\x48\xd4\x04\x15\x5b\x94\x07\xdc\x1b\x97\xaf\xc2\xfd\xc4\x4d\x8f\x82\x50\xc6\x14\x1a\x6d\x93\x56\x9c\xb3\xce\x1a\x45\xd6\xc5\xef\xde\x6a\x8d\xe9\x33\x89\x0d\xba\xd9\x8e\x1b\xdf\xcf\xe3\x46\xb8\xc6\x1a\x56\x38\xdb\x5d\x86\xbc\x21\x9c\xf5\x9e\xef\x08\x57\x30\x16\x06\xbf\x6d\xb8\xdf\x1a\xc1\x8d\x95\xfb\x64\x88\x4a\x47\x2a\x60\xb1\x88\x5f\x5d\x00\xd1\x08\xe4\x1a\x3c\xa5\x49\x94\x44\x6d\xc4\x83\xb6\x3d\xe6\xba\xeb\x8a\xfd\x7e\x59\x1c\xd4\x51\x83\x58\x35\x2a\x64\x9f\xb8\x09\x82\xd4\x3a\x08\x90\x43\x72\xdb\x20\x98\xaa\x1b\x3a\x0e\x44\xd8\xf5\xe4\x2b\x76\x79\x68\xe6\x45\x8b\x72\xd0\xc8\xc9\xe6\x7b\x9f\x95\x2b\x77\x6f\xdf\x34\x6d\x5b\x2e\xb4\xf5\x38\xd9\xcd\xcb\x64\xb8\x2f\xe8\x8b\xab\x2c\xa7\xa2\x45\xb1\x4a\x17\x6f\x94\xfa\xbc\x13\xb4\xdc\x61\xef\xac\x40\xef\x51\x86\x19\x96\xde\x04\x61\xb0\x26\x29\x1e\x3a\x2e\xac\x11\x83\x73\x01\x0a\xdc\x90\x03\x41\x36\xb1\x28\x99\x10\xf8\x15\xd7\xca\x47\xc1\x6f\x60\xd0\x49\x22\xc6\x16\x71\x89\x42\x85\x99\x3b\x65\xbb\xe8\x0e\x2d\x70\x83\x62\xa0\x43\x93\x57\xed\xa1\x8d\x92\x61\xce\xd2\xb6\xda\x2d\x5d\x4c\x7d\x0f\x20\xa0\x11\x6d\x07\x81\xe1\x2f\x8e\x82\x68\x95\x9e\xb8\xbe\x57\xde\x63\x8e\xaf\xb3\xe3\xcb\xb5\x72\xea\x5e\x98\x45\x87\xb7\xe9\x99\xfd\xbc\xfa\x86\xac\x16\x2b\xdb\x34\x7b\x6f\xd2\xab\xb2\xec\xfc\x03\xc6\xcf\xcb\xc7\x18\xbf\xdb\xe9\xc1\x81\xd6\xa8\x95\xef\xc2\xcc\x7e\xa2\xe9\xb9\xfc\x2c\xed\x02\x0d\x85\xd7\x44\xd6\xa5\x6f\x8f\xc8\xc3\x89\x96\x87\xe5\x33\xd1\xf8\xee\x3f\x44\x63\x5e\x3e\xc4\xe2\xea\xf1\xd9\xf3\x85\x40\x7c\xfb\x5e\x4f\x32\x94\x44\xe8\xb3\x16\xb7\x08\x8e\x6a\x84\x27\x7a\xf6\xf5\x28\x2c\xbe\x1a\x85\x4b\x7f\x82\xfb\x4d\x50\xb7\x20\x88\xd3\x73\x29\x49\x40\xfe\x93\x13\x92\x0a\x72\x19\x54\x40\x6c\x85\xc6\x69\xc6\x1f\x41\xcb\xa7\x97\x34\x17\x0e\x81\x8e\xa1\x32\x1a\xec\xde\xc0\xd3\xa1\x2f\x86\xf4\xee\x91\x31\x3e\x31\xfe\xf5\xd9\xf6\x5c\x1c\x17\x27\x60\x3c\xbc\x4b\x27\x2e\xd3\x8b\xf5\x73\x6c\x63\x91\xcc\xc2\xeb\x32\xbe\xc7\x8e\x24\xf4\x4f\x00\x00\x00\xff\xff\xe6\xca\xe8\x23\xf8\x10\x00\x00")

func configChainstorageAvacchainMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageAvacchainMainnetBaseYml,
		"config/chainstorage/avacchain/mainnet/base.yml",
	)
}

func configChainstorageAvacchainMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageAvacchainMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/avacchain/mainnet/base.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageAvacchainMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xb1\x4e\xc4\x30\x0c\x86\xf7\x3c\x85\x75\xcc\xad\x0a\x27\x81\x2e\xf3\x31\xb0\x70\xcb\xed\x95\x9b\xb8\x6d\xd4\x24\xae\x62\x5f\x0b\x6f\x8f\x2e\x9c\xd8\xb0\x27\x5b\x9f\x3f\xeb\x7f\x82\xeb\x1c\x04\xc6\x10\x09\x82\xc0\x44\x99\x0a\x2a\x79\x18\xbe\xe1\x90\x70\x21\x70\x9c\xc7\x30\x1d\x5a\x38\x5f\xe0\xf3\x72\x85\xf7\xf3\xc7\xb5\x35\xb8\x8b\x35\x00\xb8\x4b\x8f\xce\xf1\x2d\xab\x05\x4f\x1b\x45\x5e\x13\x65\x35\x00\xc3\xcd\x2d\xa4\x16\xe8\x0b\xd3\x1a\xa9\x71\x33\x86\x2c\xca\x05\x27\x6a\x70\x43\x57\x17\x4d\xc2\x90\x33\x69\xe3\x69\x33\x0e\x3d\x65\x47\x55\xec\x7d\x21\x11\x0b\x4a\x69\xe5\x82\xf1\x0e\xb4\x0f\x57\xeb\x38\xd9\xb7\x97\xe3\xd1\x54\xc7\x9d\x1f\x22\xbb\xa5\x17\xc5\xa2\xfd\x4c\x61\x9a\xd5\xc2\xf3\x6b\x57\xcb\x08\x95\x8d\x4a\xc5\x42\xf6\xfd\x9f\xbb\x6b\x6b\xdb\x53\x77\xea\xcc\xce\x65\x19\x23\xff\xe6\x72\x85\x45\xfa\x0d\x63\xf0\xa8\x5c\x4f\x01\x1e\x63\xe0\xfc\xdf\xa3\x9f\x00\x00\x00\xff\xff\x23\xb5\x99\xb5\x4e\x01\x00\x00")

func configChainstorageAvacchainMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageAvacchainMainnetDevelopmentYml,
		"config/chainstorage/avacchain/mainnet/development.yml",
	)
}

func configChainstorageAvacchainMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageAvacchainMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/avacchain/mainnet/development.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageAvacchainMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8c\x31\x6f\xc2\x30\x10\x85\x77\xff\x8a\x27\x3a\xc7\x8a\xca\x50\xe1\x99\x0e\x5d\xca\x92\x1d\x5d\xce\x47\xb0\x88\xcf\x91\xcf\x81\xf6\xdf\x57\x44\x15\x7a\xdb\xd3\xf7\x7d\x6f\x18\xae\xc9\x70\x49\xb3\x20\x19\x26\x51\xa9\xd4\x24\x62\xfc\xc5\x2e\xd3\x4d\xc0\x45\x2f\x69\xda\x79\x1c\x4f\xf8\x3e\x0d\xf8\x3c\x7e\x0d\xde\xd1\xc3\x82\x03\xe8\x61\x67\x62\x2e\xab\xb6\x80\xa5\x96\xb8\x72\x4b\x45\x1d\x30\xae\x7c\x93\x16\x20\x3f\x94\x97\x59\x3a\xbe\x52\x52\x6b\xa5\xd2\x24\x1d\xdd\x89\xb7\xa3\xcb\x94\x54\xa5\x75\x4f\xd7\x31\x45\x51\x96\x2d\x1c\x63\x15\xb3\x80\x26\x79\x29\x95\x66\xff\x1f\xf2\x5c\x72\xf8\x78\xdf\xef\x9d\x49\xbd\x4b\x7d\xc2\x63\xd2\x78\x7e\x19\xbd\xdf\x16\x0e\xfd\xa1\x77\x7f\x01\x00\x00\xff\xff\xd2\xcf\x66\x71\xe0\x00\x00\x00")

func configChainstorageAvacchainMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageAvacchainMainnetProductionYml,
		"config/chainstorage/avacchain/mainnet/production.yml",
	)
}

func configChainstorageAvacchainMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageAvacchainMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/avacchain/mainnet/production.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBitcoinMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x4b\x6f\x1b\x37\x10\xbe\xef\xaf\x18\xb8\x67\x5b\x0f\x47\x69\xb3\xb7\xbc\xd0\x1a\x69\xed\xa2\x35\x50\xa0\x17\x62\x44\x8e\xb4\x84\xb8\xe4\x86\x9c\x55\xa4\xfe\xfa\x82\x8f\xf5\x4a\x8a\x1d\x3b\x68\x13\xdf\xb4\xbb\xc3\x79\x7c\xdf\xc7\x99\xd1\x0f\x70\xdb\xe8\x00\x2b\x6d\x08\x74\x80\x35\x59\xf2\xc8\xa4\x60\xb9\x87\xb3\x16\x37\x04\xd2\xd9\x95\x5e\x9f\x5d\xc0\xbb\x1b\xb8\xbe\xb9\x85\xf7\xef\xae\x6e\x2f\x2a\xec\x74\x5d\x01\xb4\xb8\x13\xb6\x6f\xc5\xd2\x38\xb9\x11\xd1\x4b\xa8\x61\x36\x9d\x4e\x4f\xbf\x85\x1a\x16\x15\x40\x7c\xfe\xe4\xfc\x86\x7c\xb2\xab\x00\x02\x7b\xc2\x56\xdb\xb5\x58\x22\xcb\x46\x04\xfd\x0f\xd5\xb0\x38\xfe\xa4\x2d\x93\xdf\xa2\xa9\x61\x16\x8e\x3e\xa4\x18\x4e\xd0\x96\x2c\x0b\xd6\x2d\xd5\x70\x39\x6d\x2b\xfc\x14\x62\x76\xf8\x29\x08\x94\xd2\xf5\x96\x6b\x50\xb4\x25\xe3\xba\x96\x2c\x57\x00\xcb\x5e\x6e\x88\x6b\x38\x3b\xab\x00\x94\xf9\x18\xcd\x01\x14\x19\xdc\x8b\x40\x32\xd4\xf0\x2a\x15\x01\x60\x31\x7a\xa5\x1d\xb6\x9d\x21\x21\x1b\xd4\x36\xb0\xf3\xb8\xa6\x52\x99\x58\x6a\x96\x4e\x5b\xd1\xa2\xb6\x96\x58\x28\xf3\x31\x9d\xdc\xea\xa0\x97\xda\x68\xde\xa7\xd4\x5c\xcf\xc5\xf5\xcb\xe4\x5a\xed\x2d\xb6\x4e\x2d\x73\xe8\x8c\x20\xe3\xd2\x7c\x5d\xb4\x74\xb8\xd4\xff\xd8\xe1\x8c\xd3\xa3\x2e\x44\x43\x7a\xdd\xb0\xd0\x56\xd1\xee\x49\xfe\xf6\xc3\x91\xfb\x3c\x6f\xc9\x07\xed\x2c\x29\xf1\x78\x9a\xa3\xed\xa3\x09\xdf\xeb\xb6\x1c\xfb\x52\xe6\x0f\x85\xd8\x0f\x67\xd5\x3d\xe1\x3a\x4f\x41\xaf\xe3\xa1\xde\x1b\x41\xbb\x4e\x7b\x64\xed\x6c\x96\x1b\x80\xa7\x75\x7a\xea\xc3\x39\x61\xe0\xf3\x59\x52\x69\x0a\x58\x94\x85\x8c\x42\xba\x36\x3a\x0a\xc9\xf4\xe7\xbf\xaf\x7e\xaf\x24\x2a\xb2\x32\xd9\xa0\x52\xf1\xdb\x20\x49\x17\x83\xd7\x70\x98\xfa\x79\xc9\xeb\x7c\xcc\xcb\x13\x93\x8d\x89\x88\x8e\xbc\x76\xaa\x86\x1f\x2b\x00\x36\x21\x47\x25\x1b\x41\x51\x35\xb0\xef\x29\xa3\x86\x46\x2b\x64\x12\x8d\x0b\x9c\xa5\x9d\xbe\xa5\x38\xf1\x50\x06\x21\x30\x7a\x2e\xa4\xd6\x30\xad\x46\x7d\xae\xb3\x67\x83\x4c\x81\x6b\x98\xa7\xa7\x50\x38\x9d\x8f\x86\xe9\x2e\xce\x12\x38\xe9\x4d\x0e\x00\x6f\x7e\xbd\x79\xfb\xe1\xed\x2f\xaf\xaf\xae\xc5\x9b\xab\xdb\xb7\x37\x57\xd7\x15\x80\x34\x9a\x2c\x67\xc7\x2d\x06\x26\x9f\x7f\xc7\x02\x54\xe7\xb4\x65\xb1\xf6\xae\xef\x0a\x36\x00\xc1\xe0\x96\x1e\xb1\x29\x95\xba\x2f\xfb\x1a\xb4\x73\x52\xd6\xf4\xa8\xac\xf8\xb4\x22\xe4\xde\x97\xa0\xde\x05\x62\x46\xd1\xa1\x0f\xe4\x6b\x58\xa1\x09\x11\x5f\xed\x3d\x25\x7d\x45\x29\x2a\x1d\x18\x23\xb9\x70\x19\x3b\x1f\x71\x6c\x7c\x35\x5c\xbf\xbf\xfd\xeb\xe6\x8f\x0f\x43\xf9\xe2\xb7\xd7\x57\xd7\xd7\xef\x6f\xab\xdc\x67\x45\xe6\xe4\x54\x81\xd2\xbb\x03\x76\x3c\xda\x35\x95\x4e\x19\x21\x57\x3a\x24\xf1\x2b\xf3\x51\x74\xde\x49\x0a\xc1\xf9\x42\xec\xaa\xb7\x32\x0a\x04\x8d\xc8\xa5\x9d\x9d\x55\x41\x6d\x92\xe2\x7a\x6e\x44\x43\xa8\x62\x09\x09\x8d\xf4\x86\xdd\x86\x6c\x79\x71\x74\x73\xee\x14\xda\x30\x77\xa1\x9e\x4c\xec\x8a\xcf\xb1\xd3\x17\x31\xd5\x25\x06\xba\x90\xae\x9d\x60\xa7\x27\xb4\xeb\x26\x87\x47\x27\xa5\x9e\x49\xa9\x67\xb2\x9d\xdd\x3b\x0c\x3c\x05\x5e\xf5\xa6\xa4\x1e\xc8\x6f\xb3\x14\x96\xda\xaa\x31\xbc\x71\x12\x4d\xd4\x6f\xfd\x6a\xfa\x6a\x5a\x05\x83\x23\x34\xa5\x0f\x29\x32\x8c\x79\xe4\x8c\x7a\x1c\xde\xce\x9a\x7c\x69\x69\xd7\x91\x64\x52\x29\x89\x95\x71\x79\x68\x9c\x43\xeb\xac\x66\xe7\xd3\xef\xce\x19\x43\xf9\x67\x9e\x3a\xe9\x21\xb6\x72\xb7\x12\x61\x6f\xa5\xb0\x4e\x1d\x72\x9d\xea\x60\x1d\x21\x9d\xa7\x5f\x6d\x64\xca\x4a\x12\x06\x03\xe7\x1e\x33\xa4\x30\x00\xcb\xfb\x8e\x4a\x09\xcb\x1a\xfe\xbc\xac\x8e\x12\x5a\xa2\xdc\xac\x74\x4c\x23\x8b\x0f\x25\xeb\x6d\x1c\x2a\x9e\xd8\xef\xe3\x08\xd4\x6d\xdf\x0a\x64\xa6\xb6\xe3\x90\xe5\x76\x60\x16\x64\x43\xaa\x37\x24\xd8\x95\x7b\x5d\xa6\x51\x0d\x8b\xf6\xc4\x34\x7f\x76\x42\x1a\x17\x68\xb4\xcb\xf7\x38\xa6\x32\x8e\xe8\xf9\xa2\x0c\x48\xd9\x90\xdc\xe4\x9b\x35\x0c\xef\xf2\x25\x4e\x67\x4f\x45\x91\xa4\x62\x8f\xca\x53\x3e\xb6\xcd\x3c\x5c\xfb\x56\x48\x67\x65\xef\x7d\xbc\x87\xb4\x63\x8f\x92\x5d\x14\xc4\x7c\x96\x2c\x18\xc3\x46\x18\x1d\xd2\x04\x5f\x61\x6f\x72\xf7\x1f\x10\x12\x8a\xa4\x8e\x0d\x75\x4c\x76\xde\x1e\x5b\xd0\x8e\x64\xcf\xc7\x26\x2f\x9a\x63\x1b\xad\x62\x1b\xe5\x7d\x7d\xf7\xea\x62\x84\x3d\x72\x40\x56\x36\x2d\x46\xad\x3e\x3b\x09\xb2\xd1\x66\xd4\xec\x41\x79\x0f\x1d\x7c\x59\x0e\x3e\x1f\x94\x23\x7a\xb1\xa7\x78\x17\x82\x38\x69\xcf\x8f\xe2\xb9\xf8\x86\xa2\x96\x1b\xb7\x5a\x9d\x2e\x99\xc7\x6a\x9f\x3d\x24\xf6\xd9\x20\xf6\x0e\x3d\x1a\x43\x46\x87\xb6\x86\x17\x5f\x02\xbc\x94\x5e\xa6\xb6\x24\xcb\x71\x4d\xc8\x9d\xe3\x7b\xd0\x71\x42\x40\x5c\xd5\x73\xc7\x7b\x22\x15\x3f\x7d\x4f\x2a\xa6\x9f\x73\xb1\x78\x80\x8a\xf9\xe2\x6b\x99\xf8\xf6\x58\x8f\xb3\x24\x4f\x92\x13\x88\x1b\x42\xcf\x4b\xc2\x03\xcc\x66\xa7\xa0\xfd\x77\x1a\xe6\x4f\xa4\xe1\xf2\x51\x1a\x1e\x96\xff\x2a\x4e\xb7\x38\x10\xc7\x6d\x28\x0f\x80\xf2\xb7\x25\x66\x15\xc7\x65\x9c\x01\x72\x2f\xe3\x5a\xb5\xf8\x9c\xad\x72\x07\x42\x5e\x92\x85\xf4\x84\x7c\x1f\x2d\x83\xc1\xdd\x82\x3b\xc6\x7c\x36\xaa\xef\x56\x85\x61\x51\xf8\xdf\x3b\xdb\x53\x79\x9c\x7f\xdd\x6d\x7a\x78\x8c\x3f\x2f\xa0\x07\x0b\xd7\xb0\x26\xa6\x45\xec\x9e\x84\xfe\x0d\x00\x00\xff\xff\xec\xef\x01\xec\xc7\x10\x00\x00")

func configChainstorageBitcoinMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBitcoinMainnetBaseYml,
		"config/chainstorage/bitcoin/mainnet/base.yml",
	)
}

func configChainstorageBitcoinMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageBitcoinMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bitcoin/mainnet/base.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBitcoinMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\xbd\x6e\xc3\x30\x0c\x06\x77\x3d\x05\x91\xce\x36\xdc\x66\x28\xa2\x39\x1d\xba\x34\x4b\x76\x83\x96\xbe\xc4\x84\xf5\x63\x48\x8c\xd3\xf4\xe9\x0b\x3b\x45\xc1\x91\x77\x87\xef\x85\xce\xa3\x54\xba\x48\x00\x49\xa5\x2b\x12\x0a\x2b\x3c\x0d\x0f\xda\x45\x9e\x40\x2e\xa7\x8b\x5c\x77\x2d\x1d\x4f\xf4\x75\x3a\xd3\xc7\xf1\xf3\xdc\x1a\xbe\x57\x6b\x88\xf8\x5e\x7b\x76\x2e\xdf\x92\x5a\xf2\x58\x10\xf2\x1c\x91\xd4\x10\x0d\x37\x37\x41\x2d\xe1\x9b\xe3\x1c\xd0\xb8\x91\x25\x55\xcd\x85\xaf\x68\x06\x51\x97\x25\x35\x91\x25\x25\x68\xe3\xb1\x18\xc7\x1e\xc9\x61\xcb\x7a\x5f\x50\xab\x25\x45\x9c\x73\xe1\xb0\x02\xed\x5f\xa9\x75\x39\xda\xf7\xb7\xfd\xde\x54\x94\x05\x65\x15\x06\x49\xbe\xff\xb7\xba\x76\x3b\x7b\xe8\x0e\x9d\xb9\xe7\x32\x5d\x42\x7e\xee\x9d\x73\x08\x4f\x83\x88\x9d\xca\x22\xfa\xe8\x47\x70\xd1\x01\xac\xbd\x4a\x44\xbe\xa9\xa5\xd7\x2e\x6e\x8c\x1b\xe1\xa6\x39\x4b\xd2\xbe\xca\x0f\xd6\x47\x67\x7e\x03\x00\x00\xff\xff\xdc\x01\x01\x89\x34\x01\x00\x00")

func configChainstorageBitcoinMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBitcoinMainnetDevelopmentYml,
		"config/chainstorage/bitcoin/mainnet/development.yml",
	)
}

func configChainstorageBitcoinMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageBitcoinMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bitcoin/mainnet/development.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBitcoinMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageBitcoinMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBitcoinMainnetLocalYml,
		"config/chainstorage/bitcoin/mainnet/local.yml",
	)
}

func configChainstorageBitcoinMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageBitcoinMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bitcoin/mainnet/local.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBitcoinMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x4f\xc3\x30\x10\xc5\xf1\xdd\x9f\xe2\xa9\xcc\xb1\x22\x3a\xa0\x7a\x2e\x03\x0b\x5d\xb2\x57\xe7\xf3\x35\x3d\x35\x3e\x47\xb6\x43\xe1\xdb\xa3\x56\x08\xbd\xf5\xfd\x7f\x2f\x98\xae\xda\x70\xd1\x45\xa0\x0d\xb3\x98\x54\xea\x92\x10\x7f\xb0\xcb\x74\x13\x70\xb1\x8b\xce\x3b\x8f\xe3\x09\x9f\xa7\x09\xef\xc7\x8f\xc9\x3b\xba\xb7\xe0\x00\xba\xb7\x33\x31\x97\xcd\x7a\xc0\x5a\x4b\xda\xb8\x6b\x31\x07\xc4\x8d\x6f\xd2\x03\xe4\x9b\xf2\xba\xc8\xc0\x57\x52\x6b\xbd\x54\x9a\x65\x88\xda\xb9\xa8\x0d\x99\xd4\x4c\xfa\xf0\x28\x1d\x53\x12\x63\x79\xb2\x29\x55\x69\x2d\xa0\x4b\x5e\x4b\xa5\xc5\xff\x31\x9e\x4b\x0e\x6f\xaf\xfb\xbd\x6b\x52\xbf\xa4\x3e\xce\x51\x2d\x9d\xff\x8b\xd1\x3f\x17\x0e\xe3\x61\x74\xbf\x01\x00\x00\xff\xff\x62\xf1\xd6\xf7\xde\x00\x00\x00")

func configChainstorageBitcoinMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBitcoinMainnetProductionYml,
		"config/chainstorage/bitcoin/mainnet/production.yml",
	)
}

func configChainstorageBitcoinMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageBitcoinMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bitcoin/mainnet/production.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBscMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x4b\x6f\xdc\x36\x10\xbe\xeb\x57\x10\xee\xd9\xde\x87\xe3\xb4\x11\xd0\x43\x5e\x68\x8d\xb4\x76\xd1\x18\x28\xd0\x0b\x31\x22\x47\x2b\x62\x29\x52\x21\x47\x9b\xdd\xfe\xfa\x62\x48\xc9\xf2\x6e\xbd\xb6\x83\x26\xf1\x4d\x4b\x0e\xe7\xf1\xcd\xc7\x6f\xb8\x3f\x88\x9b\xc6\x44\x51\x1b\x8b\xc2\x44\xb1\x42\x87\x01\x08\xb5\xa8\x76\xe2\xa4\x85\x35\x0a\xe5\x5d\x6d\x56\x27\x67\xe2\xdd\xb5\xb8\xba\xbe\x11\xef\xdf\x5d\xde\x9c\x15\xd0\x99\xb2\x10\xa2\x85\xad\x74\x7d\x2b\x2b\xeb\xd5\x5a\xb2\x97\x58\x8a\xc5\x7c\x3e\x3f\xdc\x8b\xa5\xb8\xe0\x45\x5e\xf8\xec\xc3\x1a\x43\x32\x2c\x84\x88\x14\x10\x5a\xe3\x56\xb2\x02\x52\x8d\x8c\xe6\x1f\x1c\x8c\xa7\x2d\xe3\x08\xc3\x06\x6c\x29\x16\x71\x6f\x23\x05\xf1\x12\x37\xe8\x48\x92\x69\x91\xbd\xb6\x05\x7c\x8e\x9c\x1e\x7c\x8e\x12\x94\xf2\xbd\xa3\x52\x68\xdc\xa0\xf5\x5d\x8b\x8e\x0a\x21\xaa\x5e\xad\x91\x4a\x71\x72\x52\x08\xa1\xed\x27\x36\x17\x42\xa3\x85\x9d\x8c\xa8\x62\x29\x5e\xa5\x2a\x84\x70\xc0\x5e\x71\x0b\x6d\x67\x51\xaa\x06\x8c\x8b\xe4\x03\xac\x70\x28\x4d\x56\x51\xc9\x16\x8c\x73\x48\x52\xdb\x4f\xe9\xd4\xc6\x44\x53\x19\x6b\x68\x97\xd2\xf2\x3d\x0d\x6e\x5f\x26\xb7\x7a\xe7\xa0\xf5\xba\xca\x61\x33\x7c\x04\x95\x7d\x7a\xa4\x74\x70\xa8\xfb\xb1\x83\x19\x9f\x07\x8f\xcb\x06\xcd\xaa\x21\x69\x9c\xc6\xed\x93\x7c\xed\xc6\x23\x87\x5e\x37\x18\xa2\xf1\x0e\xb5\x7c\x3c\xbd\xc9\xf6\xc1\x44\xef\x75\x39\x1c\x79\x28\xe3\x63\xee\x77\xe3\x59\x7d\x10\xaa\x0b\x18\xcd\x8a\x0f\xf4\xc1\x4a\xdc\x76\x26\x00\x19\xef\x4a\x71\x3e\x6f\x0b\x21\x02\xae\xd2\xaf\x3e\x9e\x22\x44\x3a\x5d\x24\x36\xa6\x60\x03\x83\x80\x40\x2a\xdf\xb2\xa3\x98\x4c\x7f\xf9\xfb\xf2\x8f\x42\x81\x46\xa7\x92\x0d\x68\xcd\x7b\x23\xf5\x3c\x07\x2f\xc5\xdd\xb4\x4f\xab\xa8\x4e\xa7\x9c\x02\x12\x3a\x4e\x42\x76\x18\x8c\xd7\xa5\xf8\xb1\x10\x82\x6c\xcc\x11\xd1\x31\x18\xba\x14\x14\x7a\xcc\x68\x81\x35\x1a\x08\x65\xe3\x23\x65\xfa\xa6\xbd\x14\x83\x0f\xe5\xe2\x23\x41\xa0\xa1\x89\xa5\x98\x17\x13\x0f\x57\xd9\xb3\x05\xc2\x48\xa5\x58\xa6\x5f\x71\xe8\xe3\x72\x32\x4c\xf7\xed\x3c\x8e\x0b\xd9\xbf\x78\xf3\xdb\xf5\xdb\x0f\x6f\x7f\x7d\x7d\x79\x25\xdf\x7c\x7c\x5b\x08\xa1\xac\x41\x47\xd9\x67\x0b\x91\x30\xe4\x6f\xce\x5d\x77\xde\x38\x92\xab\xe0\xfb\x6e\x80\x44\x88\x68\x61\x83\x8f\xd8\x0c\x45\xfa\x87\x7d\x8d\x74\x39\xa8\x68\xb1\x57\x11\xff\xaa\x11\xa8\x0f\x43\xd0\xe0\x23\x12\x81\xec\x20\x44\x0c\xa5\xa8\xc1\x46\x86\xd6\x84\x80\x89\x52\xcc\x3e\x6d\x22\x01\xf7\x94\x05\x8f\xa5\x0d\x89\x95\xad\x14\x57\xef\x6f\xfe\xba\xfe\xf3\x03\x17\x2f\x7f\x7f\x7d\x79\x75\xf5\xfe\xa6\xc8\x2a\x2a\x73\x33\xee\x52\x4e\x05\x7f\xa7\x25\x01\xdc\x0a\x07\x09\x7c\xc1\xec\x30\x31\x31\xdd\x79\x8d\x52\x81\x83\xb0\x9b\xb2\x19\x37\x3b\x6f\x2d\x6b\xe1\xb1\xfd\x49\x2d\xf7\x2d\xea\xde\x29\xa6\x15\x58\x99\x51\x39\x39\x29\xa2\x5e\x27\x8e\xf6\xd4\xc8\x06\x41\x73\xf5\x09\xc8\xb4\x42\x7e\x8d\x6e\x58\xd8\xbb\x67\xb7\x9c\x6e\x88\xba\x58\xce\x66\xae\xa6\x53\xe8\xcc\x99\xf2\xc6\x55\x10\xf1\x4c\xf9\x76\x06\x9d\x99\xe1\xb6\x9b\xdd\x3d\x3a\xab\xa2\x9a\x0d\x60\xcc\x36\x8b\x7b\x47\x44\xc0\x48\x75\x6f\x07\x16\x47\x0c\x9b\xcc\xa0\xca\x38\x3d\x85\xb6\x5e\x81\x65\xc6\x97\xaf\xe6\xaf\xe6\x45\xb4\x30\xe1\x3a\x28\x95\x46\x4b\x30\x0c\x97\x89\xc2\xe3\xf2\x92\x2f\x38\x6e\x3b\x54\x84\x3a\xa5\x50\x5b\x9f\x07\xc9\xa9\x68\xbd\x33\xe4\x43\xfa\x66\xc0\x31\x7f\x66\x6c\x31\xcc\x6e\x89\xf6\x33\xd7\xc0\x72\xef\x6b\x19\x77\x4e\xe5\xde\x4d\x64\x49\xc1\xc9\x30\xb0\xcb\xf4\xd5\x72\xc3\x9d\x42\x69\x21\x52\xd6\xa5\x52\x9c\xb7\xc5\x88\x2d\xed\x3a\x1c\x2a\xa9\x4a\xf1\xf1\xbc\xd8\xcb\xac\x02\xb5\xae\x0d\xe7\x93\xa9\x0b\x8a\xcc\x86\xa7\x4e\x40\x0a\x3b\x9e\x8f\xa6\xed\x5b\x09\x44\xd8\x76\x14\x4b\x71\xbe\x6f\x16\x55\x83\xba\xb7\x28\xc9\x0f\x82\x30\x8c\xab\x52\x5c\xb4\x07\xa6\x79\xdb\x4b\x65\x7d\xc4\xc9\x6e\x31\xcf\x86\x77\xe7\xf7\xf2\x62\x98\x9e\xaa\x41\xb5\xce\xf7\x72\x9c\xec\xc3\x0e\x8f\xee\x80\x5d\xf0\x0a\x63\x44\xcd\xe2\x96\x9f\x00\xac\xb5\x79\xf2\xf6\xad\x54\xde\xa9\x3e\x04\x06\x17\xb7\x14\x40\x91\x4f\xbc\x78\x99\x2c\x08\xe2\x5a\x5a\x13\xd3\x78\xaf\xa1\xb7\x79\x5c\x8c\x08\x49\x8d\xca\xb0\x0a\x4f\xc9\x2e\xdb\x7d\x0b\xdc\xa2\xea\x69\xdf\xe4\x45\xb3\x6f\x63\x34\xeb\x2f\xed\xca\xdb\xa5\xb3\x09\x76\xee\x01\x3a\xd5\xb4\xc0\x94\x7d\xf6\x26\xa8\xc6\xd8\x89\xbc\x77\xca\x3b\x76\xf0\xe5\x70\xf0\xf9\xa0\x9c\xd0\x63\x59\x09\x3e\x46\x79\x20\xee\x8f\xe2\x79\xf1\x0d\x49\xad\xd6\xbe\xae\x0f\x5f\xa0\xfb\x6c\x5f\x1c\x23\xfb\x62\x24\x7b\x07\x01\xac\x45\x6b\x62\x9b\x95\xfd\x28\xe0\x43\xe9\xc3\xb8\x57\xe8\x88\xdf\x16\x59\x08\xbf\x47\x3b\x0e\x1a\xc0\x0f\xf9\x2c\x7d\x4f\x6c\xc5\x4f\xdf\xb1\x15\xe7\xff\x6d\xc5\xc5\x71\xd9\xf9\xc2\x46\x7c\x7b\xa8\xa7\x99\x92\x27\xca\x01\xc2\x0d\x42\xa0\x0a\xe1\x01\xc8\xfe\x7f\x13\x96\x5f\xab\x09\xc7\xb9\x5f\xf3\x5c\xe3\x51\x38\x3d\x4d\xb2\xfa\x0f\x7f\x6a\x38\x29\x1e\x94\x3c\x00\xd4\x4e\xd9\x3b\x17\xea\x9e\x6e\xc5\xfc\xae\x96\x2a\x20\xd0\x7d\x5d\x19\x0d\x6e\xdf\xc5\x53\xd0\x67\xeb\xf4\xed\x8b\x61\x7c\x2f\x7c\x75\x5d\x7b\x6a\x1f\x97\x5f\x74\x97\x1e\xb9\x4c\xcf\x86\xe7\x08\x63\x91\xcd\xf8\xa9\x98\x9e\x63\xf7\x24\xf4\x6f\x00\x00\x00\xff\xff\x97\xbb\x94\xfc\xe2\x10\x00\x00")

func configChainstorageBscMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBscMainnetBaseYml,
		"config/chainstorage/bsc/mainnet/base.yml",
	)
}

func configChainstorageBscMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageBscMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bsc/mainnet/base.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBscMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x6f\xc2\x30\x10\xc5\xf1\xdd\x9f\xe2\x44\xe7\x58\x51\x19\x2a\x3c\xd3\xa1\x4b\x59\xb2\xa3\xcb\xf9\x11\x2c\xe2\x73\xe4\x33\xa1\xfd\xf6\x15\x51\x85\xde\xfa\xfe\xbf\x37\x1a\xae\xc9\xe8\x92\x66\x50\x32\x9a\xa0\xa8\xdc\x10\x69\xfc\xa5\x5d\xe6\x1b\x48\x8a\x5e\xd2\xb4\xf3\x74\x3c\xd1\xf7\x69\xa0\xcf\xe3\xd7\xe0\x1d\x3f\x2c\x38\x22\x7e\xd8\x99\x45\xca\x5d\x5b\xa0\x88\x15\x73\x59\x32\xb4\x39\xa2\xf1\x2e\x37\xb4\x40\xf8\xe1\xbc\xcc\xe8\xe4\xca\x49\xad\x95\xca\x13\xba\xd1\xa4\xcb\x9c\x54\xd1\xba\x88\xd5\x09\x47\xa8\x60\x23\x63\xac\x30\x0b\xd4\x90\x97\x52\x79\x7e\x1e\xfc\xbf\xe2\xa5\xe4\xf0\xf1\xbe\xdf\x3b\x43\x5d\x51\x9f\xc1\x98\x34\x9e\x5f\x55\xef\xb7\x85\x43\x7f\xe8\xdd\x5f\x00\x00\x00\xff\xff\x5d\x3b\x11\x73\xde\x00\x00\x00")

func configChainstorageBscMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBscMainnetDevelopmentYml,
		"config/chainstorage/bsc/mainnet/development.yml",
	)
}

func configChainstorageBscMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageBscMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bsc/mainnet/development.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBscMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageBscMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBscMainnetLocalYml,
		"config/chainstorage/bsc/mainnet/local.yml",
	)
}

func configChainstorageBscMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageBscMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bsc/mainnet/local.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBscMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x4f\xc3\x30\x10\xc5\xf1\xdd\x9f\xe2\xa9\xcc\xb1\x22\x3a\xa0\x7a\x2e\x03\x0b\x5d\xb2\x57\xe7\xf3\x35\xb5\x1a\x9f\x23\x9f\x43\xe1\xdb\xa3\x56\x08\xbd\xf5\xfd\x7f\x2f\x98\xae\xd9\x70\xc9\x8b\x20\x1b\x66\x51\x69\xd4\x25\x21\xfe\x60\x57\xe8\x26\xe0\xaa\x97\x3c\xef\x3c\x8e\x27\x7c\x9e\x26\xbc\x1f\x3f\x26\xef\xe8\x6e\xc1\x01\x74\xb7\x33\x31\xd7\x4d\x7b\xc0\xda\x6a\xda\xb8\xe7\xaa\x0e\x88\x1b\xdf\xa4\x07\xc8\x37\x95\x75\x91\x81\xaf\x94\xd5\x7a\x6d\x34\xcb\x10\x8d\x87\x42\x59\x55\xfa\xf0\xa8\x1c\x53\x12\x65\x79\x92\x29\x35\x31\x0b\xe8\x52\xd6\xda\x68\xf1\x7f\x84\xe7\x5a\xc2\xdb\xeb\x7e\xef\x4c\xda\x97\xb4\xc7\x39\x66\x4d\xe7\xff\x62\xf4\xcf\x85\xc3\x78\x18\xdd\x6f\x00\x00\x00\xff\xff\x23\xe5\xbe\x3c\xda\x00\x00\x00")

func configChainstorageBscMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBscMainnetProductionYml,
		"config/chainstorage/bsc/mainnet/production.yml",
	)
}

func configChainstorageBscMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageBscMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bsc/mainnet/production.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageDogecoinMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5f\x6f\xdb\x36\x10\x7f\xd7\xa7\x20\xb2\xe7\xc4\x76\xda\x74\xab\x80\x3d\x74\x6d\xd0\x05\xdd\x92\x61\x0b\x30\x60\x2f\xc4\x89\x3c\x59\x84\x29\x52\x25\x4f\xae\xbd\x4f\x3f\x9c\x48\x59\xb6\x9b\xd4\x2d\xd6\x36\x6f\x16\x79\xbc\x3f\xbf\xfb\xdd\x1f\xff\x20\xee\x1b\x13\x45\x6d\x2c\x0a\x13\xc5\x12\x1d\x06\x20\xd4\xa2\xda\x8a\xb3\x16\x56\x28\x94\x77\xb5\x59\x9e\x5d\x88\x37\x77\xe2\xf6\xee\x5e\x5c\xbf\xb9\xb9\xbf\x28\xa0\x33\x65\x21\x44\x0b\x1b\xe9\xfa\x56\x56\xd6\xab\x95\x64\x2d\xb1\x14\x8b\xf9\x7c\x7e\x7c\x17\x4b\x71\xc5\x87\x7c\xf0\xc1\x87\x15\x86\x41\xb0\x10\x22\x52\x40\x68\x8d\x5b\xca\x0a\x48\x35\x32\x9a\x7f\x31\x0b\x4f\x57\xc6\x11\x86\x35\xd8\x52\x2c\xe2\xc1\xc5\x60\xc4\x4b\x5c\xa3\x23\x49\xa6\x45\xd6\xda\x16\xf0\x21\xb2\x7b\xf0\x21\x4a\x50\xca\xf7\x8e\x4a\xa1\x71\x8d\xd6\x77\x2d\x3a\x2a\x84\xa8\x7a\xb5\x42\x2a\xc5\xd9\x59\x21\x84\xb6\xef\x59\x5c\x08\x8d\x16\xb6\x32\xa2\x8a\xa5\x78\x39\x44\x21\x84\x03\xd6\x8a\x1b\x68\x3b\x8b\x52\x35\x60\x5c\x24\x1f\x60\x89\x39\x34\xa9\xfd\x12\x95\x37\x4e\xb6\x60\x9c\x43\x92\xda\xbe\x1f\x9e\xae\x4d\x34\x95\xb1\x86\xb6\x83\x6f\xbe\xa7\xac\xfb\xc5\xa0\x5b\x6f\x1d\xb4\x5e\x57\xc9\x76\xc2\x90\xa0\xb2\x5f\x68\x6e\x78\x9d\x11\x38\xf5\x3a\x21\x75\x5a\x87\x6c\xd0\x2c\x1b\x92\xc6\x69\xdc\x7c\x8e\xc2\x6a\x3b\x3e\x79\x50\xf5\x1a\x43\x34\xde\xa1\x96\xa7\x1d\x9d\x64\x4f\xbb\xfc\xa0\xde\xfc\xee\x53\xbe\x3f\x62\xa3\xda\x8e\x6f\xf5\x43\xf6\xba\x80\xd1\x2c\xf9\x55\x1f\xac\xc4\x4d\x67\x02\x90\xf1\xae\x14\xcf\xe6\x6d\x21\x44\xc0\xe5\xf0\xd5\xc7\x73\x84\x48\xe7\x8b\x81\xab\x83\xc5\xcc\x2f\x20\x90\xca\xb7\xac\x28\x0e\xa2\x6f\xff\xb9\xf9\xa3\x50\xa0\xd1\xa9\x41\x06\xb4\xe6\xbb\x91\x98\x9e\x8d\x97\x62\xdf\xf7\xf3\xd1\xb1\xf3\xc9\xb1\x80\x84\x8e\x3d\x91\x1d\x06\xe3\x75\x29\x7e\x2c\x84\x20\x1b\x93\x59\x74\x0c\x8b\x2e\x05\x85\x1e\x13\x6e\x60\x8d\x06\x42\xd9\xf8\x48\x89\xe1\xc3\xdd\x60\x88\x1f\x25\x18\x22\x41\xa0\x9c\xd8\x52\xcc\x8b\x89\xa5\xcb\xa4\xd9\x02\x61\xa4\x52\x2c\x86\xaf\x98\xd3\xba\x98\x04\x53\x49\xb6\xe3\x41\xd2\x2f\x7e\xf9\xed\xee\xf5\xbb\xd7\xbf\xbe\xba\xb9\x95\x6f\xee\xde\x5e\xbf\xbe\xbb\xb9\x2d\x84\x50\xd6\xa0\xa3\xa4\xb8\x85\x48\x18\xd2\x6f\x0e\x40\x77\xde\x38\x92\xcb\xe0\xfb\x2e\x83\x23\x44\xb4\xb0\xc6\x13\x32\x39\x52\xff\x69\x5d\x23\x7b\x8e\xc2\x9a\x1f\x84\xc5\x5f\x35\x02\xf5\x21\x1b\x0d\x3e\x22\x11\xc8\x0e\x42\xc4\xb0\x83\xd7\x84\x80\x03\xc1\x98\x8b\xda\x44\x02\x4e\x2e\xf7\x45\xee\x80\x48\xdc\x00\x4b\x71\x7b\x7d\xff\xf7\xdd\x9f\xef\x76\x00\xc8\xdf\x5f\xdd\xdc\xde\x5e\xdf\x17\x3b\xbd\xfb\x7d\xc1\x79\x92\xb5\xef\x9d\x96\x18\x82\x0f\x52\x79\xcd\xbd\xf6\xf9\x24\x92\xa1\x1d\xd9\x91\x7a\xd7\x68\x6c\xa4\x4a\xea\xe6\x32\x65\xfc\x23\x86\xab\xe0\xf7\x92\x1f\xc0\x2d\x31\xf7\x63\xb6\xa3\x4d\x1c\xaa\x4b\xdb\xf7\xb2\x0b\x5e\x61\x8c\x7e\x0c\xba\xee\x9d\x62\xfe\x81\x95\x09\xb9\xb3\xb3\x22\xea\xd5\xc0\xe8\x9e\x1a\xd9\x20\x68\x46\x68\x00\x7b\x38\x21\xbf\x42\x97\x0f\x0e\x4a\x73\x57\x01\x0d\x51\x17\xcb\xd9\xcc\xd5\x74\x0e\x9d\xb9\x60\x57\x2b\x88\x78\xa1\x7c\x3b\x83\xce\xcc\x70\xd3\xcd\xf6\x9f\xce\xc6\x80\x66\x39\xa0\xd9\x7a\xf1\xe0\xcc\x09\x18\xa9\xee\x6d\xf6\x3d\x62\x58\x27\xaa\x55\xc6\xe9\xc9\xbe\xf5\x0a\x2c\xd7\x47\xf9\x72\xfe\x72\x5e\x44\x0b\x13\x36\x63\xaf\x43\x4b\x50\x8a\xab\x03\xbe\x8f\xa7\xa9\x27\xe0\xa6\x43\x45\xa8\x07\x17\x6a\xeb\xd3\x64\x3a\x17\xad\x77\x86\x7c\x18\x7e\x77\xde\x5a\x4c\x3f\xd3\x68\xcb\x1f\xdc\x2e\x2c\xac\x70\xb6\xab\xba\x9f\x39\x20\x9e\x23\xbe\x96\x71\xeb\x94\x74\x5e\x1f\x72\x8c\xeb\xde\x30\xd4\x97\xc3\xaf\x96\x33\xe8\x14\x4a\x0b\x91\x52\x73\x2b\xc5\xa2\x29\x46\xb4\x69\xdb\x61\x0e\xab\x2a\xc5\x5f\xcf\x8a\x03\x37\x2b\x50\xab\xda\xb0\x73\x89\x8b\xa0\xc8\xac\x79\x9c\x05\xa4\xb0\xe5\xe9\x6b\xda\xbe\x95\x40\x84\x6d\x47\xb1\x14\xcf\x0e\xc5\xa2\x6a\x50\xf7\x16\x25\xf9\xdc\x4b\xf2\x1c\x2c\xc5\x55\x7b\x24\x9a\xae\xbd\x54\xd6\x47\x9c\xe4\x16\xf3\x24\xb8\xbf\x1d\x5c\x5e\xe5\xd9\xac\x1a\x54\xab\x54\xcd\xe3\xde\x90\x6f\x78\x31\x08\x98\x69\x8a\x9a\xfb\x62\x5a\x30\x38\x2f\xa9\x36\xfa\x56\x2a\xef\x54\x1f\x02\xd7\x3e\x6e\x28\x80\x22\xcf\x24\xb9\x4c\x65\x45\x10\x57\xd2\x9a\x38\x2c\x0f\x35\xf4\x36\xcd\x9c\x11\x21\xa9\x51\x19\xee\xe2\x93\xb3\x97\xed\xa1\x04\x6e\x50\xf5\x74\x28\xf2\xbc\x39\x94\x31\x9a\x5b\x37\x6d\xcb\xdd\xd1\xc5\x04\x3b\xe7\x00\x9d\x6a\x5a\x60\xfe\x3e\x79\x12\x54\x63\xec\xc4\xe4\xbd\xf0\x1e\x7b\xf8\x22\x3f\x7c\x3a\x28\x27\xf4\xb8\xd1\x04\x1f\xa3\x3c\x1a\x09\x27\xf1\xbc\xfa\x86\xa4\x56\x2b\x5f\xd7\xc7\xfb\xed\x21\xdb\x17\x8f\x91\x7d\x31\x92\xbd\x83\x00\xd6\xa2\x35\xb1\x1d\x47\xc2\x23\x80\xe7\xd0\xf3\xa6\xa0\xd0\x11\xef\x26\xa9\x6d\x7c\x8f\x74\x1c\x25\x80\xff\x26\xa4\x3e\xf8\x99\xa9\xf8\xe9\x7b\xa6\x62\xfe\x71\x2e\xae\x1e\xef\x3b\x5f\x98\x89\x6f\x8f\xf5\x34\x61\xd2\x7c\x39\x82\xb8\x41\x08\x54\x21\x7c\x02\xb3\xff\x9f\x85\xcb\xaf\x96\x85\xc7\xd9\x5f\xf3\x64\xe3\x61\x58\x8a\x1a\x6c\xc4\x5d\xff\xcf\xff\x97\xd8\x2b\x1e\x95\x3c\x02\xd4\x56\xd9\xbd\x92\x3a\x48\x57\x2e\x82\x98\x56\x73\xa9\x02\x02\x3d\x94\x97\x51\x60\xb7\x55\x4f\x56\x9f\x2c\xd7\xbb\x0d\x62\xdc\x1f\xbe\x7a\x6b\xfb\xdc\x4c\x5e\x7e\x59\x39\x9d\xa8\xa7\x27\x03\x74\x6f\x0f\x1b\x77\xc7\x61\x25\x7b\xc0\xa1\xff\x02\x00\x00\xff\xff\x09\xa9\x73\x92\x44\x11\x00\x00")

func configChainstorageDogecoinMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageDogecoinMainnetBaseYml,
		"config/chainstorage/dogecoin/mainnet/base.yml",
	)
}

func configChainstorageDogecoinMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageDogecoinMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/dogecoin/mainnet/base.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageDogecoinMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x6e\xc2\x30\x18\xc4\xf1\xdd\x4f\x71\xa2\x73\xac\xa8\x0c\x15\x9e\xe9\xd0\xa5\x2c\xd9\xd1\x17\xfb\x08\x16\xf1\xe7\xc8\x36\xa1\x7d\xfb\x8a\xa8\x42\xb7\xde\xff\xf7\x86\xe1\x1a\x2b\x2e\x71\x26\x62\xc5\x44\x65\x91\xc6\x80\xf1\x17\xbb\x24\x37\xc2\x67\xbd\xc4\x69\x67\x71\x3c\xe1\xfb\x34\xe0\xf3\xf8\x35\x58\x23\x8f\xea\x0c\x20\x8f\x7a\x16\xef\xf3\x5d\x9b\x43\xe0\xca\x39\x2f\x89\xda\x0c\x30\xde\xfd\x8d\xcd\x81\x3f\x92\x96\x99\x9d\xbf\x4a\xd4\xda\x72\x91\x89\x5d\xc8\x13\x7d\x8e\xda\x25\x89\xaa\x6c\x5d\xe0\x6a\xbc\x04\xaa\xe7\xe6\x86\x50\x58\xab\x43\x63\x5a\x72\x91\xf9\x79\xb0\xff\x94\xf5\x39\xb9\x8f\xf7\xfd\xde\x54\x96\x95\xe5\x19\x8c\x51\xc3\xf9\x55\xf5\x76\x9b\x3b\xf4\x87\xde\xfc\x05\x00\x00\xff\xff\x02\x04\x92\x7d\xe3\x00\x00\x00")

func configChainstorageDogecoinMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageDogecoinMainnetDevelopmentYml,
		"config/chainstorage/dogecoin/mainnet/development.yml",
	)
}

func configChainstorageDogecoinMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageDogecoinMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/dogecoin/mainnet/development.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageDogecoinMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageDogecoinMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageDogecoinMainnetLocalYml,
		"config/chainstorage/dogecoin/mainnet/local.yml",
	)
}

func configChainstorageDogecoinMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageDogecoinMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/dogecoin/mainnet/local.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageDogecoinMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\x05\x91\x37\xdb\x08\x5e\x86\x22\x9a\xd3\xa1\x4b\xb3\x78\x37\x68\xe9\xda\x11\x2c\x89\x06\x25\xd7\xe9\xdf\x17\x76\x8a\x82\xcb\x1d\xce\x39\xe0\x3f\xea\x1e\xa1\xd0\x18\x22\x28\x14\x9a\x90\xa1\x5c\xe1\x69\xf8\xa6\x53\xe2\x19\xe4\x24\x8f\x61\x3a\xb5\x74\xbb\xd3\xe7\xbd\xa3\xf7\xdb\x47\xd7\x1a\xde\x8a\x35\x44\xbc\x95\x9e\x9d\x93\x35\x57\x4b\x8b\x8a\x5f\x5d\x0d\x92\x0d\xd1\xb0\xba\x19\xd5\x12\x9e\x9c\x96\x88\xc6\x3d\x38\xe4\x52\x45\x79\x42\xe3\x65\x82\x93\x90\x9b\xc4\x21\x67\xd4\x66\x57\x8d\x63\x8f\xec\x70\x74\xbd\x57\x94\x62\xa9\x22\x2d\xa2\x1c\xdb\xdf\x4e\xeb\x24\xd9\xb7\xff\x97\x8b\x29\xd0\x2f\xe8\x0e\x0f\x21\xfb\xfe\xcf\x38\xb7\xc7\xd9\xeb\xf9\x7a\x36\x25\xf2\x4e\xe0\xb9\xc0\x55\xf8\x7e\x13\x9d\xc7\x28\xaf\xe7\x1b\x4a\x92\x43\x15\x3d\xf6\x22\x31\xe2\x35\x4b\x55\x70\x82\x9a\x9f\x00\x00\x00\xff\xff\x24\x99\x42\xc7\x1e\x01\x00\x00")

func configChainstorageDogecoinMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageDogecoinMainnetProductionYml,
		"config/chainstorage/dogecoin/mainnet/production.yml",
	)
}

func configChainstorageDogecoinMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageDogecoinMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/dogecoin/mainnet/production.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumGoerliBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x4d\x6f\x1b\x37\x13\xbe\xef\xaf\x20\xfc\x9e\x6d\x49\xfe\xc8\xdb\x2c\xd0\x43\x9b\x08\x89\x91\x34\x2e\x52\x17\x05\x7a\x21\x66\xc9\x59\x2d\x21\x2e\xb9\x21\x67\x15\xa9\xbf\xbe\xe0\xc7\x6a\x25\x45\xb6\x1c\x34\x89\x6f\x5a\x72\x38\xf3\xcc\x3c\x0f\x67\xa8\xff\xb1\xfb\x46\x79\x56\x2b\x8d\x4c\x79\xb6\x40\x83\x0e\x08\x25\xab\x36\xec\xac\x85\x25\x32\x61\x4d\xad\x16\x67\x17\xec\xf5\x1d\xfb\x70\x77\xcf\xe6\xaf\x6f\xef\x2f\x0a\xe8\x54\x59\x30\xd6\xc2\x9a\x9b\xbe\xe5\x95\xb6\x62\xc9\x83\x17\x5f\xb2\xd9\x74\x3a\x3d\xdc\xf3\x25\xbb\x09\x8b\x61\xe1\xb3\x75\x4b\x74\xd1\xb0\x60\xcc\x93\x43\x68\x95\x59\xf0\x0a\x48\x34\xdc\xab\x7f\x30\x1b\x8f\x5b\xca\x10\xba\x15\xe8\x92\xcd\xfc\xde\x46\x0c\x62\x39\xae\xd0\x10\x27\xd5\x62\xf0\xda\x16\xf0\xd9\x07\x78\xf0\xd9\x73\x10\xc2\xf6\x86\x4a\x26\x71\x85\xda\x76\x2d\x1a\x2a\x18\xab\x7a\xb1\x44\x2a\xd9\xd9\x59\xc1\x98\xd4\x9f\x82\x39\x63\x12\x35\x6c\xb8\x47\xe1\x4b\xf6\x32\x66\xc1\x98\x81\xe0\x15\xd7\xd0\x76\x1a\xb9\x68\x40\x19\x4f\xd6\xc1\x02\x73\x6a\x1c\xa9\x41\x87\x7d\xcb\x17\x16\x9d\x56\x5c\xea\x4f\xf1\xe4\x4a\x79\x55\x29\xad\x68\x13\xa1\xd9\x9e\xb2\xeb\x17\xd1\xb5\xdc\x18\x68\xad\xac\x52\xe8\x54\x42\x82\x4a\x7f\x5d\xb4\x78\x38\xe7\x7f\xea\x70\xaa\xd3\x49\x17\xbc\x41\xb5\x68\x88\x2b\x23\x71\xfd\x14\x7f\xd5\x66\x38\x72\xcc\xf3\x0a\x9d\x57\xd6\xa0\xe4\xa7\x61\x8e\xb6\x27\x01\x1f\x75\x9b\x8f\x3d\x86\xfc\x81\x10\xd5\x66\x38\x2b\x8f\x84\xeb\x1c\x7a\xb5\x08\x87\x7a\xa7\x39\xae\x3b\xe5\x80\x94\x35\x25\xbb\x9a\xb6\x05\x63\x0e\x17\xf1\xab\xf7\xe7\x08\x9e\xce\x67\x51\xa5\x31\x60\x56\x16\x10\x70\x61\xdb\xe0\xc8\x47\xd3\x37\x7f\xdf\xfe\x5e\x08\x90\x68\x44\xb4\x01\x29\xc3\xde\x20\x49\xdb\x82\x32\x25\xdb\x85\x7e\x3e\xe0\x3a\xdf\xe2\x72\x48\x68\x02\x10\xde\xa1\x53\x56\x96\xec\xff\x05\x63\xa4\x7d\x8a\x8a\x26\x14\x45\x96\x8c\x5c\x8f\xa9\x6a\xa0\x95\x04\x42\xde\x58\x4f\x49\xda\x71\x2f\xc6\x09\x87\x52\x11\x3c\x81\xa3\x4c\x6a\xc9\xa6\xc5\xa8\xcf\x45\xf2\xac\x81\xd0\x53\xc9\x66\xf1\xcb\x67\x4e\x67\xa3\x61\xba\x8b\x57\x7e\x58\x49\x01\xd8\xaf\xef\xef\x5e\xbd\x7b\xf5\xf6\x97\xdb\x0f\x7c\x7e\xff\x76\xfe\x71\xfe\xe7\x6f\x05\x63\x42\x2b\x34\x94\x3c\xb7\xe0\x09\x5d\xfa\x1d\x32\x90\x9d\x55\x86\xf8\xc2\xd9\xbe\xcb\xc5\x61\xcc\x6b\x58\xe1\x09\x9b\x9c\xaa\x7d\xdc\xd7\x20\x9e\x83\xbc\xa6\x7b\x79\x85\xaf\x1a\x81\x7a\x97\x83\x3a\xeb\x91\x08\x78\x07\xce\xa3\xdb\xd6\x57\x39\x87\x51\x5f\x41\x8a\x52\x79\x82\x40\x2e\x9b\x5d\x87\xd6\x87\x14\x3a\x5f\xc9\x3e\xcc\xef\xff\xba\xfb\xf8\x6e\x9b\x3f\x7f\x73\x37\xff\xf8\xfe\xb6\x48\x9d\x96\xe7\x7e\x73\x20\x41\xe1\xec\x0e\x3d\x0e\xcc\x02\x73\xab\xbc\x2e\xea\xde\x88\xa0\x01\xd0\x3c\x81\x3f\x3b\x2b\xbc\x5c\x46\x51\xf5\xd4\xf0\x06\x41\x06\x90\x31\xdf\xb8\x42\x76\x89\x26\x2f\xec\x5d\x8e\xad\x08\x1b\xa2\xce\x97\x93\x89\xa9\xe9\x1c\x3a\x75\x21\xac\x32\x15\x78\xbc\x10\xb6\x9d\x40\xa7\x26\xb8\xee\x26\xbb\x47\x27\x03\xe2\x49\x42\x3c\x59\xcd\x8e\xf6\x7b\x87\x9e\xea\x5e\xe7\x92\x79\x74\xab\x44\x76\xa5\x8c\x1c\xc3\x6b\x2b\x40\x07\x89\x96\x2f\xa7\x2f\xa7\x85\xd7\x30\x26\x9f\x5b\x8d\x44\x4d\x50\xb2\xeb\xe9\x9e\xe6\x86\xe5\x59\xbc\x96\xb8\xee\x50\x10\xca\x88\xa1\xd6\x36\x8d\x85\x73\xd6\x5a\xa3\xc8\xba\xf8\xbb\xb3\x5a\x63\xfa\x99\xe6\x4a\xfe\x08\x37\x56\xc3\x12\x27\x5b\xe5\xff\x1c\x32\x0a\x5d\xdc\xd6\xdc\x6f\x8c\xe0\xc6\xca\x5d\x9a\x23\x14\x52\xa1\xd4\xb3\xf8\xab\x0d\x1c\x19\x81\x5c\x83\xa7\xd4\x5e\x4a\x36\xbb\x69\x8b\xa1\xdc\xb4\xe9\x30\x27\x56\x95\xec\x8f\xab\x62\x0f\x67\x05\x62\x59\xab\x80\x2e\x89\x0e\x04\xa9\x55\x98\x26\x0e\xc9\x6d\xc2\xec\x53\x6d\xdf\x72\x20\xc2\xb6\x23\x5f\xb2\xab\x7d\x33\x2f\x1a\x94\xbd\x46\x4e\x36\x5f\xe8\x3c\x86\x4a\x76\xd3\x1e\x98\xa6\x6d\xcb\x85\xb6\x1e\x47\xbb\x54\xc6\x00\x65\x9c\xcd\x97\x37\x79\x32\x8a\x06\xc5\x32\xdd\xa8\x61\x6a\xe7\x9d\x30\x96\x1d\x76\xce\x0a\xf4\x1e\x65\x68\x4e\x69\xbc\x87\x7e\x99\xa6\x6a\xdf\x72\x61\x8d\xe8\x9d\x0b\xf7\x0f\xd7\xe4\x40\x90\x0d\x32\xb9\xbc\x8e\x16\x04\x7e\xc9\xb5\xf2\x71\x74\xd7\xd0\x6b\x8a\xcb\x43\x85\xb8\x44\xa1\x42\x27\x1d\xc1\x5e\xb6\xfb\x16\xb8\x46\xd1\xd3\xbe\xc9\x75\xb3\x6f\xa3\x64\xe8\x9f\xb4\x29\xb7\x4b\x17\x63\xd9\x03\x07\x68\x44\xd3\x42\x50\xf0\xb3\x93\x20\x1a\xa5\x47\x29\xef\xa4\xf7\xd0\xc1\x17\xf9\xe0\xf3\x95\x72\xac\x5e\xe8\x34\xce\x7a\xcf\x0f\xda\xf2\xc9\x7a\xde\x7c\x47\x51\x8b\xa5\xad\xeb\xc3\xd7\xe5\xbe\xda\x67\x0f\x89\x7d\x36\x88\xbd\x03\x07\x5a\xa3\x56\xbe\x0d\xdd\xf8\x91\x82\xe7\xd4\xf3\xb8\x16\x68\x28\xbc\x0f\x52\x5f\xfc\x11\x74\x1c\x10\x10\x1e\xe9\xa9\x11\x3e\x91\x8a\x9f\x7e\x24\x15\xd3\x2f\xb9\xb8\x79\xb8\xef\xc4\x8d\x1a\x94\xb6\x2b\x74\xfc\xcb\x77\xcf\xd3\x49\xfa\xfe\x34\x8c\xd3\x27\xcd\x9e\x83\xea\x37\x08\x8e\x2a\x84\x47\xca\xf9\xdf\x09\xba\xfc\x66\x04\x3d\x7c\x31\x1e\xa1\xa3\x0e\x03\x31\xcc\xd0\x92\xd5\xa0\x3d\x6e\xa7\x46\xfe\x93\x13\x00\x87\x09\x1b\x06\x87\xd8\x08\xbd\x73\x11\x8f\x30\xe9\xd3\x9b\x9a\x0b\x87\x40\xc7\x18\x1b\x0c\xb6\x40\xc6\xa0\xcf\xa6\x82\xed\xbb\x63\x78\x75\x7c\xf3\x7e\xf8\x54\x8e\x2f\xbf\xee\x0e\x9e\xb8\x84\xcf\x56\xd0\x9d\xd7\xdb\xf0\xe4\x8c\x0f\xb9\x23\x80\xfe\x0d\x00\x00\xff\xff\x71\xa3\xb9\xc3\xf7\x10\x00\x00")

func configChainstorageEthereumGoerliBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumGoerliBaseYml,
		"config/chainstorage/ethereum/goerli/base.yml",
	)
}

func configChainstorageEthereumGoerliBaseYml() (*asset, error) {
	bytes, err := configChainstorageEthereumGoerliBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/goerli/base.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumGoerliDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xbd\x6e\x83\x30\x14\xc5\xf1\xdd\x4f\x71\x95\xce\x20\x94\x54\xaa\xe2\x39\x1d\xba\x34\x0b\x3b\xba\xd8\x27\xd8\xc2\x1f\xc8\xbe\x90\xf6\xed\x2b\x50\x95\x73\xd6\xbf\x7e\x6f\xd4\x3b\x5f\xe9\xe1\x03\xc8\x57\x9a\x90\x50\x58\x60\x69\xfc\xa5\x53\xe4\x19\x64\x72\x7a\xf8\xe9\xd4\xd2\xed\x4e\xdf\xf7\x9e\x3e\x6f\x5f\x7d\xab\xf8\x59\xb5\x22\xe2\x67\x1d\xd8\x98\xbc\x26\xd1\x64\xb1\x21\xe4\x25\x22\x89\x22\x1a\x57\x33\x43\x34\xe1\x87\xe3\x12\xd0\x18\xc7\x3e\x55\xc9\x85\x27\x34\x10\x87\x82\x35\x36\x53\x46\x09\xbe\xb1\xd8\x94\x61\x8b\x64\x70\xb0\xd6\x16\xd4\xaa\x49\x10\x97\x5c\x38\xec\x41\xfb\x2f\xb5\x26\x47\xfd\x71\xbe\x5c\xd4\x41\xee\xfd\x18\xb2\x99\x87\x2a\x5c\x64\x70\xf0\x93\x13\x4d\xef\xe7\x6e\x9f\xaa\x28\x1b\xca\x51\xf9\x64\x87\x17\xdd\xb5\xc7\xf5\xb5\xbb\x76\xea\x2f\x00\x00\xff\xff\x30\xbe\x0b\x83\x07\x01\x00\x00")

func configChainstorageEthereumGoerliDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumGoerliDevelopmentYml,
		"config/chainstorage/ethereum/goerli/development.yml",
	)
}

func configChainstorageEthereumGoerliDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageEthereumGoerliDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/goerli/development.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumGoerliLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageEthereumGoerliLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumGoerliLocalYml,
		"config/chainstorage/ethereum/goerli/local.yml",
	)
}

func configChainstorageEthereumGoerliLocalYml() (*asset, error) {
	bytes, err := configChainstorageEthereumGoerliLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/goerli/local.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumGoerliProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x4e\xc3\x30\x18\xc4\xf1\xdd\x4f\x71\x2a\x73\xac\x88\x0e\xa8\x9e\xcb\xc0\x42\x97\xec\xd5\x17\xfb\x9a\x58\x8d\xed\xe8\xb3\x43\xe1\xed\x51\x23\x84\x6e\xbd\xff\xef\x05\xc3\x1c\x2b\x6e\x71\x21\x62\xc5\xc4\x4c\x95\xc6\x80\xf1\x07\x87\x24\x77\xc2\x97\x7c\x8b\xd3\xc1\xe2\x7c\xc1\xe7\x65\xc0\xfb\xf9\x63\xb0\x46\x1e\xd5\x19\x40\x1e\xf5\x2a\xde\x97\x2d\x37\x87\x55\x4b\xd8\x7c\x8b\x25\x1b\x60\xdc\xfc\x9d\xcd\x81\xdf\x92\xd6\x85\x9d\x9f\x25\xe6\xda\x8a\xca\xc4\x8e\x6d\xa6\x72\x4b\xdd\x54\xa8\x4b\xec\x9e\xa5\xf1\x12\x98\x3d\x77\x36\x04\x65\xad\x0e\x8d\x69\x2d\x2a\x8b\xfd\x63\xac\x2f\xc9\xbd\xbd\x1e\x8f\xa6\x52\xbf\xa8\xcf\xf3\x18\x73\xb8\xfe\x17\xbd\xdd\xe7\x4e\xfd\xa9\x37\xbf\x01\x00\x00\xff\xff\xef\x4b\x61\x54\xde\x00\x00\x00")

func configChainstorageEthereumGoerliProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumGoerliProductionYml,
		"config/chainstorage/ethereum/goerli/production.yml",
	)
}

func configChainstorageEthereumGoerliProductionYml() (*asset, error) {
	bytes, err := configChainstorageEthereumGoerliProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/goerli/production.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x4b\x6f\x1b\x37\x10\xbe\xef\xaf\x20\xdc\xb3\xad\x87\xad\xb4\x59\x20\x87\x34\x31\x1a\x23\x8d\x5d\xa4\x2e\x0a\xf4\x42\xcc\x92\xb3\x5a\x42\x5c\x72\x43\xce\x2a\x52\x7f\x7d\xc1\xc7\x6a\x25\xbf\xe4\x22\x4d\x7d\x5b\x71\x86\xf3\xfa\xbe\x99\xa1\x7e\x60\xb7\x8d\xf2\xac\x56\x1a\x99\xf2\x6c\x89\x06\x1d\x10\x4a\x56\x6d\xd9\x49\x0b\x2b\x64\xc2\x9a\x5a\x2d\x4f\xce\xd8\xfb\x1b\x76\x7d\x73\xcb\x2e\xdf\x5f\xdd\x9e\x15\xd0\xa9\xb2\x60\xac\x85\x0d\x37\x7d\xcb\x2b\x6d\xc5\x8a\x07\x2b\xbe\x64\xb3\xe9\x74\x7a\x57\xe6\x4b\xb6\x08\x87\xe1\xe0\xab\x75\x2b\x74\x51\xb1\x60\xcc\x93\x43\x68\x95\x59\xf2\x0a\x48\x34\xdc\xab\xbf\x31\x2b\x8f\x22\x65\x08\xdd\x1a\x74\xc9\x66\xfe\x40\x10\x9d\x58\x8e\x6b\x34\xc4\x49\xb5\x18\xac\xb6\x05\x7c\xf5\x21\x3c\xf8\xea\x39\x08\x61\x7b\x43\x25\x93\xb8\x46\x6d\xbb\x16\x0d\x15\x8c\x55\xbd\x58\x21\x95\xec\xe4\xa4\x60\x4c\xea\x2f\x41\x9d\x31\x89\x1a\xb6\xdc\xa3\xf0\x25\x7b\x1d\xb3\x60\xcc\x40\xb0\x8a\x1b\x68\x3b\x8d\x5c\x34\xa0\x8c\x27\xeb\x60\x89\x39\x35\x8e\xd4\xa0\xc3\xbe\xe5\x2d\x28\x63\x90\xb8\xd4\x5f\xe2\xd5\xb5\xf2\xaa\x52\x5a\xd1\x36\xc6\x66\x7b\xca\xb6\x5f\x45\xdb\x72\x6b\xa0\xb5\xb2\x4a\xbe\x53\x0d\x09\x2a\xfd\x2f\xdd\xc5\xdb\xb9\x02\xc7\x6e\xa7\x4a\x1d\xb7\xc1\x1b\x54\xcb\x86\xb8\x32\x12\x37\xcf\x31\x58\x6d\x87\x2b\x0f\x9a\x5e\xa3\xf3\xca\x1a\x94\xfc\x78\xa0\xa3\xee\xf1\x90\x1f\xb4\x9b\xef\x3d\x15\xfb\x23\x3e\xaa\xed\x70\x57\x3e\xe4\xaf\x73\xe8\xd5\x32\xdc\xea\x9d\xe6\xb8\xe9\x94\x03\x52\xd6\x94\xec\x7c\xda\x16\x8c\x39\x5c\xc6\x5f\xbd\x3f\x45\xf0\x74\x3a\x8b\x5c\x8d\x1e\x33\xbf\x80\x80\x0b\xdb\x06\x43\x3e\xaa\xfe\xf2\xd7\xd5\x6f\x85\x00\x89\x46\x44\x1d\x90\x32\xc8\x06\x62\xda\xe0\xbc\x64\xfb\xb1\x9f\x0e\x81\x9d\x8e\x81\x39\x24\x34\x21\x12\xde\xa1\x53\x56\x96\xec\xc7\x82\x31\xd2\x3e\xb9\x45\x13\xca\x22\x4b\x46\xae\xc7\x54\x37\xd0\x4a\x02\x21\x6f\xac\xa7\xc4\xf0\x28\x8b\x8e\xc2\xa5\x54\x06\x4f\xe0\x28\x03\x5b\xb2\x69\x31\xb2\x74\x99\x2c\x6b\x20\xf4\x54\xb2\x79\xfc\xe5\x33\xac\xf3\x51\x31\xb5\xe4\xb9\x1f\x4e\x92\x03\xf6\xf3\xaf\x37\xef\x3e\xbe\xfb\xf0\xf6\xea\x9a\x5f\xde\x7e\xb8\xfc\x7c\xf9\xc7\xa7\x82\x31\xa1\x15\x1a\x4a\x96\x5b\xf0\x84\x2e\x7d\x87\x0c\x64\x67\x95\x21\xbe\x74\xb6\xef\x72\x75\x18\xf3\x1a\xd6\x78\x44\x27\xa7\x6a\x9f\xb6\x35\xd0\xe7\x4e\x5e\xb3\x83\xbc\x42\x01\x6a\x04\xea\x5d\x76\xea\xac\x47\x22\xe0\x1d\x38\x8f\x6e\x57\x5f\xe5\x1c\x46\x86\x05\x32\x4a\xe5\x09\x02\xba\x6c\x76\x11\x26\x20\x52\x18\x80\x25\xbb\xbe\xbc\xfd\xf3\xe6\xf3\xc7\x5d\xfe\xfc\xd3\xdb\xab\xeb\xeb\xcb\xdb\x22\x4d\x5c\x9e\xe7\xce\x5d\x16\x0a\x67\xf7\x00\x72\x60\x96\x98\x67\xe6\x45\x51\xf7\x46\x04\x16\x80\xe6\x29\xfc\x93\x93\xc2\xcb\x55\xe4\x55\x4f\x0d\x6f\x10\x64\x08\x33\x66\x1c\x4f\xc8\xae\xd0\xe4\x83\x83\x06\xd9\xf1\xb0\x21\xea\x7c\x39\x99\x98\x9a\x4e\xa1\x53\x67\xc2\x2a\x53\x81\xc7\x33\x61\xdb\x09\x74\x6a\x82\x9b\x6e\xb2\x7f\x75\x32\x84\x3c\xc9\x21\x4f\xd6\xb3\x07\x27\xbf\x43\x4f\x75\xaf\x73\xd5\x3c\xba\x75\xc2\xbb\x52\x46\x8e\xfe\xb5\x15\xa0\x03\x4b\xcb\xd7\xd3\xd7\xd3\xc2\x6b\x18\xb3\xcf\x13\x47\xa2\x26\xc8\x46\x47\xda\x0d\xc7\xf3\xd0\x99\xb8\xe9\x50\x10\xca\x18\x42\xad\x6d\xda\x0f\xa7\xac\xb5\x46\x91\x75\xf1\xbb\xb3\x5a\x63\xfa\x4c\x0b\xe6\xce\x8f\xc9\x8e\x23\x6f\x66\x51\x10\xba\x59\xc3\x0a\x27\xbb\xa6\x78\x33\x8f\x02\xe1\xac\xf7\x7c\x47\xbc\x82\xb1\x30\xfa\x6d\xcd\xfd\xd6\x08\x6e\xac\x3c\x60\x45\x08\x9b\x54\xc0\x65\x16\xbf\xda\x00\xa8\x11\xc8\x35\x78\x4a\xf3\xa8\x64\xe7\x6d\x31\x40\x43\xdb\x0e\x73\x0d\xaa\x92\xfd\x7e\x5e\x1c\xe4\x54\x81\x58\xd5\x2a\x64\x92\x28\x0a\x82\xd4\x3a\x6c\x20\x87\xe4\xb6\x61\x61\xaa\xb6\x6f\x39\x10\x61\xdb\x91\x2f\xd9\xf9\xa1\x9a\x17\x0d\xca\x5e\x23\x27\x9b\xdb\x3f\xaf\xae\x92\x2d\xda\x3b\xaa\x49\x6c\xb9\xd0\xd6\xe3\xa8\x37\x9b\x26\xc5\xfd\x85\x3e\x5f\xe4\x75\x2a\x1a\x14\xab\xd4\x7f\xc3\xaa\xcf\x92\xb0\xcb\x1d\x76\xce\x0a\xf4\x1e\x65\x18\x65\xe9\x4d\x10\xc6\x6b\x5a\xc5\x7d\xcb\x85\x35\xa2\x77\x2e\x20\x81\x1b\x72\x20\xc8\x06\x46\xcd\x2f\xa2\x06\x81\x5f\x71\xad\x7c\xdc\xf7\x35\xf4\x3a\xad\x89\xa1\x42\x5c\xa2\x50\x61\xf0\x8e\xc1\xce\xdb\x43\x0d\xdc\xa0\xe8\xe9\x50\xe5\xa2\x39\xd4\x51\x32\x4c\x5b\xda\x96\xbb\xa3\xb3\xb1\xec\x01\x03\x34\xa2\x69\x21\x90\xfd\xc5\x41\x10\x8d\xd2\x23\xed\xf7\xd2\x7b\xec\xe2\xab\x7c\xf1\xe5\x4a\x39\x56\x2f\x4c\xa5\xc3\x5e\x7a\x66\x3d\x17\xdf\x91\xd4\x62\x65\xeb\x7a\xef\x49\xba\x98\x4e\x5b\x7f\x8f\xf0\xb3\xe9\x63\x84\xdf\x49\x3a\x70\xa0\x35\x6a\xe5\xdb\x30\xbd\x9f\x28\x7a\x4e\x3f\x2f\x78\x81\x86\xc2\x93\x22\x6f\xa7\x3d\xe1\xe1\xbe\x9e\x2d\x42\x6f\x65\x67\xdf\x1f\xb7\xfb\x53\x2f\x4f\xd7\x67\x62\xf6\xd3\xff\x88\xd9\x6c\x7a\x1f\xb1\xc5\xe3\x03\x2a\x0a\x6a\x50\xda\xae\xd1\xf1\xfb\xcf\xa9\xe7\x23\xf9\xfd\x61\x18\x57\x5a\x5a\x68\x77\xaa\xdf\x20\x38\xaa\x10\x9e\x28\xe7\xb7\x03\x34\xff\x66\x80\xce\xfd\x91\xe6\x79\x02\x8d\x3a\xec\xcd\xb0\x6a\x4b\x56\x83\xf6\xb8\xdb\x2e\xf9\x0f\x54\x88\x37\x2c\xe2\xb0\x60\xc4\x56\xe8\x64\xf6\x3e\x90\xb3\x74\xe6\xd3\x5b\x9d\x0b\x87\x40\x0f\x21\x36\x28\xec\x22\x19\xbd\xbe\x18\x0b\x76\x8f\x99\xe1\xf5\xf2\x9f\x0f\xce\xe7\x62\x3c\x3f\x02\xf1\x61\x0b\x1e\xe9\xc1\x17\xab\xe7\xde\x8b\x70\x78\xc5\xc6\xa7\xde\x03\x01\xfd\x13\x00\x00\xff\xff\x4d\x7b\x29\xf3\x54\x11\x00\x00")

func configChainstorageEthereumMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumMainnetBaseYml,
		"config/chainstorage/ethereum/mainnet/base.yml",
	)
}

func configChainstorageEthereumMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageEthereumMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/mainnet/base.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x6e\x83\x30\x10\xc6\xf1\xdd\x4f\x71\x4a\x67\x10\x4a\x86\x2a\x9e\xd3\xa1\x4b\xb3\xb0\xa3\xc3\xfe\x02\x56\xec\x33\xb2\x0f\xd2\xbe\x7d\x05\xaa\xaa\x9b\xee\xd3\x5f\xbf\x37\xea\xe7\x50\xe9\x11\x22\x28\x54\x9a\x20\x28\xac\xf0\x34\xfe\xd0\x29\xf1\x13\xe4\xb2\x3c\xc2\x74\x6a\xe9\x76\xa7\xaf\x7b\x4f\x1f\xb7\xcf\xbe\x35\xfc\xaa\xd6\x10\xf1\xab\x0e\xec\x5c\x5e\x45\x2d\x79\x6c\x88\x79\x49\x10\x35\x44\xe3\xea\x9e\x50\x4b\xf8\xe6\xb4\x44\x34\x6e\xe6\x20\x55\x73\xe1\x09\x0d\x74\x46\xc1\x9a\x9a\xc4\x41\x04\xda\x78\x6c\xc6\xb1\x87\x38\x1c\xae\xf7\x05\xb5\x5a\x52\xa4\x25\x17\x8e\x7b\xd0\xfe\x51\xad\xcb\xc9\xbe\x9f\x2f\x17\x73\x98\x7b\x8f\x0d\xa2\x83\xf2\xb4\x3f\x44\x91\x15\x55\x2d\x9d\x4d\x45\xd9\x50\xf6\x75\x0c\xe2\x87\x7f\xb7\x6b\x8f\xb3\xd7\xee\xda\x99\xdf\x00\x00\x00\xff\xff\x09\xce\xe9\x04\x05\x01\x00\x00")

func configChainstorageEthereumMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumMainnetDevelopmentYml,
		"config/chainstorage/ethereum/mainnet/development.yml",
	)
}

func configChainstorageEthereumMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageEthereumMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/mainnet/development.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageEthereumMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumMainnetLocalYml,
		"config/chainstorage/ethereum/mainnet/local.yml",
	)
}

func configChainstorageEthereumMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageEthereumMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/mainnet/local.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x4e\xc3\x30\x18\xc4\xf1\xdd\x4f\x71\x2a\x73\xac\x88\x0e\xa8\x9e\xcb\xc0\x42\x97\xec\xd5\x17\xfb\x9a\x58\x8d\x3f\x47\xb6\x43\xe1\xed\x51\x23\x84\x6e\xbd\xff\xef\x05\xc3\x1c\x2b\x6e\x71\x21\x62\xc5\x44\x65\x91\xc6\x80\xf1\x07\x87\x24\x77\xc2\x67\xbd\xc5\xe9\x60\x71\xbe\xe0\xf3\x32\xe0\xfd\xfc\x31\x58\x23\x8f\xea\x0c\x20\x8f\x7a\x15\xef\xf3\xa6\xcd\x61\x2d\x39\x6c\xbe\xc5\xac\x06\x18\x37\x7f\x67\x73\xe0\xb7\xa4\x75\x61\xe7\x67\x89\x5a\x5b\x2e\x32\xb1\x63\x9b\x59\xb8\xa5\x2e\x49\x54\x65\xeb\x9e\xa9\xf1\x12\xa8\x9e\xbb\x1b\x42\x61\xad\x0e\x8d\x69\xcd\x45\x16\xfb\xe7\x58\x9f\x93\x7b\x7b\x3d\x1e\x4d\x65\xf9\x62\x79\x9e\xc7\xa8\xe1\xfa\x5f\xf4\x76\x9f\x3b\xf5\xa7\xde\xfc\x06\x00\x00\xff\xff\xae\x16\x62\xef\xdf\x00\x00\x00")

func configChainstorageEthereumMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumMainnetProductionYml,
		"config/chainstorage/ethereum/mainnet/production.yml",
	)
}

func configChainstorageEthereumMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageEthereumMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/mainnet/production.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageOptimismMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\xdf\x6f\xdb\x36\x10\x7e\xd7\x5f\x41\x64\xcf\x89\xed\xa4\xe9\x56\xbd\x75\x6d\xb1\x05\x5d\x93\x62\x0d\x30\x60\x2f\xc4\x89\x3c\x59\x84\x29\x52\x25\x4f\x8e\xbd\xbf\x7e\x38\x91\x8a\xec\xd4\xa9\x53\x14\x6d\xde\x6c\xf2\x78\x3f\xbe\xef\xe3\x1d\xf5\x8b\xb8\x6d\x4c\x14\xb5\xb1\x28\x4c\x14\x4b\x74\x18\x80\x50\x8b\x6a\x2b\x4e\x5a\x58\xa1\x50\xde\xd5\x66\x79\x72\x26\xde\xde\x88\xeb\x9b\x5b\xf1\xee\xed\xd5\xed\x59\x01\x9d\x29\x0b\x21\x5a\xd8\x48\xd7\xb7\xb2\xb2\x5e\xad\x24\x7b\x89\xa5\x58\xcc\xe7\xf3\x87\x7b\xb1\x14\x97\xbc\xc8\x0b\x77\x3e\xac\x30\x0c\x86\x85\x10\x91\x02\x42\x6b\xdc\x52\x56\x40\xaa\x91\xd1\xfc\x87\xd9\x78\xda\x32\x8e\x30\xac\xc1\x96\x62\x11\xf7\x36\x86\x20\x5e\xe2\x1a\x1d\x49\x32\x2d\xb2\xd7\xb6\x80\xbb\xc8\xe9\xc1\x5d\x94\xa0\x94\xef\x1d\x95\x42\xe3\x1a\xad\xef\x5a\x74\x54\x08\x51\xf5\x6a\x85\x54\x8a\x93\x93\x42\x08\x6d\x3f\xb3\xb9\x10\x1a\x2d\x6c\x65\x44\x15\x4b\xf1\x6a\xa8\x42\x08\x07\xec\x15\x37\xd0\x76\x16\xa5\x6a\xc0\xb8\x48\x3e\xc0\x12\x73\x69\xd2\x77\x64\x5a\x13\x5b\xd9\x82\x71\x0e\x49\x6a\xfb\x79\x38\xba\x36\xd1\x54\xc6\x1a\xda\x0e\xb9\xf9\x9e\xb2\xef\x97\x83\x6f\xbd\x75\xd0\x7a\x5d\xa5\xd8\x09\x43\x82\xca\x7e\x63\xb8\xe1\x74\x46\xe0\xd8\xe9\x84\xd4\x71\x1f\xb2\x41\xb3\x6c\x48\x1a\xa7\x71\xf3\x14\x87\xd5\x76\x3c\x72\xd0\xf5\x1a\x43\x34\xde\xa1\x96\xc7\x13\x9d\x6c\x8f\xa7\x7c\xd0\x6f\x3e\xf7\xb5\xdc\x1f\x89\x51\x6d\xc7\xb3\xfa\x50\xbc\x2e\x60\x34\x4b\x3e\xd5\x07\x2b\x71\xd3\x99\x00\x64\xbc\x2b\xc5\xc5\xbc\x2d\x84\x08\xb8\x1c\xfe\xf5\xf1\x14\x21\xd2\xe9\x62\xd0\xea\x10\x31\xeb\x0b\x08\xa4\xf2\x2d\x3b\x8a\x83\xe9\x1f\xff\x5e\x7d\x2c\x14\x68\x74\x6a\xb0\x01\xad\x79\x6f\x14\xa6\xe7\xe0\xa5\xd8\xcd\xfd\x74\x4c\xec\x74\x4a\x2c\x20\xa1\xe3\x4c\x64\x87\xc1\x78\x5d\x8a\x5f\x0b\x21\xc8\xc6\x14\x16\x1d\xc3\xa2\x4b\x41\xa1\xc7\x84\x1b\x58\xa3\x81\x50\x36\x3e\x52\x52\xf8\xb0\x37\x04\xe2\x43\x09\x86\x48\x10\x28\x13\x5b\x8a\x79\x31\xa9\x74\x99\x3c\x5b\x20\x8c\x54\x8a\xc5\xf0\x2f\x66\x5a\x17\x93\xe1\x70\x25\xcf\xdb\x71\x21\xf9\x17\xbf\xff\x75\xf3\xe6\xfd\x9b\x3f\x5f\x5f\x5d\xcb\x9b\x8f\xb7\x57\x1f\xae\x3e\x7d\x28\x84\x50\xd6\xa0\xa3\xe4\xb8\x85\x48\x18\xd2\x6f\x2e\x40\x77\xde\x38\x92\xcb\xe0\xfb\x2e\x83\x23\x44\xb4\xb0\xc6\x23\x36\xb9\x52\xff\x75\x5f\xa3\x7a\x8e\x96\x55\x23\x50\x1f\x72\xd0\xe0\x23\x12\x81\xec\x20\x44\x0c\xa5\xa8\xc1\x46\xc6\xd7\x84\x80\x83\xc2\x58\x8c\xda\x44\x02\x66\x97\x1b\x23\xb7\x40\x24\xee\x80\xa5\xb8\x7e\x77\xfb\xcf\xcd\xdf\xef\xef\x11\x90\x1f\x5e\x5f\x5d\x5f\xbf\xbb\x2d\x52\xcb\x95\x89\x96\x2f\x64\xa8\x82\xdf\x61\x28\x80\x5b\x62\x6e\x9a\x2f\x58\x31\x26\x0e\x57\x80\x43\xd4\xd6\xdf\x31\x85\xd4\xc7\x4c\x6f\xdd\x3b\xc5\x32\x01\x2b\x53\x81\x27\x27\x45\xd4\xab\x41\x78\x3d\x35\xb2\x41\xd0\x5c\xc8\x80\xc9\xb0\x42\x7e\x85\x2e\x2f\xec\xdd\xa0\x7b\xa1\x36\x44\x5d\x2c\x67\x33\x57\xd3\x29\x74\xe6\x4c\x79\xe3\x2a\x88\x78\xa6\x7c\x3b\x83\xce\xcc\x70\xd3\xcd\x76\x8f\xce\xc6\x92\x66\xb9\xa4\xd9\x7a\x71\x70\x34\x04\x8c\x54\xf7\x36\xe7\x1e\x31\xac\x93\x22\x2a\xe3\xf4\x14\xdf\x7a\x05\x96\x65\x5c\xbe\x9a\xbf\x9a\x17\xd1\xc2\x84\x4e\x6e\x49\x1a\x2d\xc1\x88\xff\x24\xcc\x71\xfd\x92\xe5\xc9\xcd\xd9\xd7\x32\x6e\x9d\x92\xce\xeb\x2f\x79\x23\xc3\xc8\x5c\x0c\xbf\x5a\x86\xdc\x29\x94\x16\x22\xa5\x96\x91\x06\xcf\x88\x0e\x6d\x3b\xcc\x69\x54\xa5\xf8\x74\x51\x8c\x7c\x0c\x37\xb2\x02\xb5\xaa\x8d\xb5\xa3\xc0\x41\x91\x59\xf3\x94\x08\x48\x61\xcb\x43\xcd\xb4\x7d\x2b\x81\x08\xdb\x8e\x62\x8a\xba\x63\x16\x55\x83\xba\xb7\x28\xc9\xe7\x2b\x9a\xc7\x4b\xae\x65\xd7\x34\x6d\x7b\xa9\xac\x8f\x38\xd9\x9d\xcf\x93\xe1\xee\xd0\x3d\xbf\xcc\x23\x4f\x35\xa8\x56\xe9\x92\x8c\xe3\x38\xef\xf0\xbc\x0d\xd8\x05\xaf\x30\x46\xd4\xdc\x6e\xd2\xdc\xe6\x16\x98\xc6\x65\xdf\x4a\xe5\x9d\xea\x43\xe0\x2b\x85\x1b\x0a\xa0\xc8\x27\x52\x93\x09\x41\x5c\x49\x6b\xe2\x30\x94\x6b\xe8\x6d\xea\xe5\xf7\x92\xd5\xa8\x0c\x77\xc7\x9d\x6c\xdb\x7d\x0b\xdc\xa0\xea\x69\xdf\xe4\x45\xb3\x6f\x63\x34\xb7\x44\xda\x96\xf7\x4b\x67\x13\xee\x4c\x02\x3a\xd5\xb4\xc0\x82\x7b\x36\x16\x16\x99\x05\xd5\x18\xab\xe5\x81\xf2\x1e\x3b\xf8\x32\x1f\x7c\x3e\x28\x27\xf4\xb8\x33\x04\x1f\xa3\x7c\xd0\x6a\x8f\xe2\x79\xf9\xc3\xf0\x64\xa2\x7d\x5d\x3f\x7c\x37\xee\xcb\x7d\xf1\x98\xda\x17\xa3\xda\x3b\x08\x60\x2d\x5a\x13\xdb\xd4\x5d\x1f\x05\x3c\x97\x9e\x27\xb0\x42\x47\x3c\xf3\x53\x1b\xfb\x19\x74\x3c\x20\x80\x9f\xdf\xde\x99\xa7\x53\xf1\xdb\xcf\xa4\x62\xfe\x25\x17\x97\x8f\x37\x9e\x6f\x64\xe2\xc7\x63\x9d\x91\xe5\xf7\xa0\x3f\xd0\xc3\x1b\x84\x40\x15\xc2\x57\x30\xfb\x7e\x16\xce\xbf\x9b\x85\x8b\x78\x44\xfc\x35\x8f\x36\x1e\x87\xd3\xbb\x26\xf5\xff\xfc\x19\xc2\x49\xf1\xb0\xe4\x11\xa0\xb6\xca\xee\xdc\xa8\x03\x6c\xc5\xf4\xe0\x95\x2a\x20\xd0\x21\x56\x46\x83\xfb\xb7\xea\x14\xf4\xd9\x98\x4e\xfc\xde\x7f\x70\x3e\x79\x50\x3c\xbd\xb1\x3d\x95\xc7\xf3\x23\x34\xee\xdf\xa5\x23\x97\xe9\xd9\xf0\x1c\x61\x2c\x92\x19\xbf\xf4\x0a\x21\x4e\x0f\x25\xf4\x7f\x00\x00\x00\xff\xff\x4a\x42\xd4\x80\x99\x10\x00\x00")

func configChainstorageOptimismMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageOptimismMainnetBaseYml,
		"config/chainstorage/optimism/mainnet/base.yml",
	)
}

func configChainstorageOptimismMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageOptimismMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/optimism/mainnet/base.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageOptimismMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x6f\x83\x30\x10\xc5\xf1\xdd\x9f\xe2\x94\xce\x20\x54\x86\x28\x9e\xd3\xa1\x4b\xb3\xb0\xa3\xc3\x7e\x01\x0b\x6c\x23\xdf\x85\xb4\xdf\xbe\x8a\x55\xf5\xbd\xf5\xaf\xdf\x1b\x0d\x4b\x10\xba\x87\x0d\x14\x84\x66\x24\x14\x56\x78\x9a\x7e\xe8\x14\x79\x05\xb9\x9c\xee\x61\x3e\xb5\x74\xbd\xd1\xd7\x6d\xa0\x8f\xeb\xe7\xd0\x1a\x7e\x8a\x35\x44\xfc\x94\x91\x9d\xcb\x8f\xa4\x96\x3c\x0e\x6c\x79\x8f\x48\x6a\x88\xa6\x87\x5b\xa1\x96\xf0\xcd\x71\xdf\xd0\xb8\x85\x43\x12\xcd\x85\x67\x34\x79\xd7\x10\x83\xc4\x26\x72\x48\x09\xda\x78\x1c\xc6\xb1\x47\x72\xa8\xae\xf7\x05\x22\x96\x14\x71\xcf\x85\xb7\x57\xd0\xfe\x51\xad\xcb\xd1\x9e\xdf\xfb\xde\x54\xf3\xd5\x4f\x5b\x76\xeb\x28\xca\x45\xc7\x05\x61\x5e\xd4\x52\x7f\xee\xea\x8c\xa0\x1c\x28\x35\x0b\xc9\x8f\xff\x76\xd7\xd6\xdb\x4b\x77\xe9\xcc\x6f\x00\x00\x00\xff\xff\x4b\x76\x14\xbe\x09\x01\x00\x00")

func configChainstorageOptimismMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageOptimismMainnetDevelopmentYml,
		"config/chainstorage/optimism/mainnet/development.yml",
	)
}

func configChainstorageOptimismMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageOptimismMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/optimism/mainnet/development.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageOptimismMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageOptimismMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageOptimismMainnetLocalYml,
		"config/chainstorage/optimism/mainnet/local.yml",
	)
}

func configChainstorageOptimismMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageOptimismMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/optimism/mainnet/local.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageOptimismMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x6e\xc3\x30\x0c\x84\xe1\x5d\x4f\x71\x48\x67\x1b\x46\x33\x14\xd1\x9c\x0e\x5d\x9a\xc5\x7b\x40\x53\x8c\x43\xc4\xa2\x0c\x51\x6e\xda\xb7\x2f\x12\x14\xc5\xad\xf7\x7f\x2f\x18\xaf\xea\xb8\xe8\x22\x50\xc7\x2c\x26\x95\x9a\x24\x4c\x3f\xd8\x65\xba\x09\xb8\xd8\x45\xe7\x5d\x8f\xe3\x09\x9f\xa7\x11\xef\xc7\x8f\xb1\x0f\x74\xf7\x18\x00\xba\xfb\x99\x98\xcb\x66\x2d\x62\xad\x25\x6d\xdc\xb4\x58\x00\xa6\x8d\x6f\xd2\x22\xe4\x9b\xf2\xba\x48\xc7\x57\x52\xf3\x56\x2a\xcd\xd2\x95\xb5\x69\x56\xcf\x5d\x26\x35\x93\xd6\x3d\xd2\xc0\x94\xc4\x58\x9e\x6e\x4a\x55\xdc\x23\x9a\xe4\xb5\x54\x5a\xfa\x3f\xa7\xe7\x92\xe3\xdb\xeb\x7e\x1f\x5c\xea\x97\xd4\xc7\x79\x52\x4b\xe7\xff\x62\xe8\x9f\x8b\x87\xe1\x30\x84\xdf\x00\x00\x00\xff\xff\x4c\x97\x1c\x66\xdf\x00\x00\x00")

func configChainstorageOptimismMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageOptimismMainnetProductionYml,
		"config/chainstorage/optimism/mainnet/production.yml",
	)
}

func configChainstorageOptimismMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageOptimismMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/optimism/mainnet/production.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstoragePolygonMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5b\x6f\xdb\x36\x14\x7e\xd7\xaf\x20\xb2\xe7\xc4\x97\xd4\xdb\x2a\xa0\x0f\x5d\x5b\x74\x41\xbb\xa4\xd8\x02\x0c\xdb\x0b\x71\x44\x1e\x59\x84\x29\x52\x25\x8f\x5c\x7b\xbf\x7e\xe0\x45\x96\xed\x5c\x9c\x62\xed\xf2\x66\x91\x87\xe7\xf6\x7d\xe7\xe2\x1f\xd8\x6d\xa3\x3c\xab\x95\x46\xa6\x3c\x5b\xa2\x41\x07\x84\x92\x55\x5b\x76\xd6\xc2\x0a\x99\xb0\xa6\x56\xcb\xb3\x0b\xf6\xf6\x86\x5d\xdf\xdc\xb2\x77\x6f\xaf\x6e\x2f\x0a\xe8\x54\x59\x30\xd6\xc2\x86\x9b\xbe\xe5\x95\xb6\x62\xc5\x83\x16\x5f\xb2\xd9\x74\x3a\x3d\xbe\xf3\x25\x5b\x84\xc3\x70\xf0\xc5\xba\x15\xba\x28\x58\x30\xe6\xc9\x21\xb4\xca\x2c\x79\x05\x24\x1a\xee\xd5\x3f\x98\x85\xc7\x2b\x65\x08\xdd\x1a\x74\xc9\x66\xfe\xe0\x22\x1a\xb1\x1c\xd7\x68\x88\x93\x6a\xb1\x64\xb3\x45\x5b\xc0\x17\x1f\xdc\x83\x2f\x9e\x83\x10\xb6\x37\x54\x32\x89\x6b\xd4\xb6\x6b\xd1\x50\xc1\x58\xd5\x8b\x15\x52\xc9\xce\xce\x0a\xc6\xa4\xfe\x1c\xc4\x19\x93\xa8\x61\xcb\x3d\x0a\x5f\xb2\x97\x31\x0a\xc6\x0c\x04\xad\xb8\x81\xb6\xd3\xc8\x45\x03\xca\x78\xb2\x0e\x96\x98\x43\xe3\x9d\xd5\xdb\xa5\x35\xbc\x05\x65\x0c\x12\x97\xfa\x73\x7c\xb9\x56\x5e\x55\x4a\x2b\xda\x46\xd7\x6c\x4f\x59\xf5\x8f\x51\xb5\xdc\x1a\x68\xad\xac\x92\xe9\x94\x42\x82\x4a\x7f\x9d\xb5\xf8\x38\xc7\x7f\xea\x71\xca\xd3\x49\x15\xbc\x41\xb5\x6c\x88\x2b\x23\x71\xf3\x14\x7d\xd5\x76\x78\x72\x9f\xe6\x35\x3a\xaf\xac\x41\xc9\x4f\xbb\x39\xca\x9e\x74\xf8\x5e\xb5\xf9\xd9\x63\x9e\x3f\x60\xa2\xda\x0e\x6f\xe5\x3d\xe6\x3a\x87\x5e\x2d\xc3\xa3\xde\x69\x8e\x9b\x4e\x39\x20\x65\x4d\xc9\x2e\xa7\x6d\xc1\x98\xc3\x65\xfc\xea\xfd\x39\x82\xa7\xf3\x59\x64\x69\x34\x98\x99\x05\x04\x5c\xd8\x36\x28\xf2\x51\xf4\xfd\xdf\x57\x9f\x0a\x01\x12\x8d\x88\x32\x20\x65\xb8\x1b\x28\x69\x83\xf1\x92\xed\xbb\x7e\x9e\xfd\x3a\x1f\xfd\x72\x48\x68\x82\x23\xbc\x43\xa7\xac\x2c\xd9\x4f\x05\x63\xa4\x7d\xb2\x8a\x26\x24\x45\x96\x8c\x5c\x8f\x29\x6b\xa0\x95\x04\x42\xde\x58\x4f\x89\xda\xf1\x2e\xda\x09\x8f\x52\x12\x3c\x81\xa3\x0c\x6a\xc9\xa6\xc5\xc8\xcf\x65\xd2\xac\x81\xd0\x53\xc9\xe6\xf1\xcb\x67\x4c\x67\xa3\x60\xac\xc5\xb9\x1f\x0e\x92\x7e\xf6\xcb\xc7\x9b\x37\x1f\xde\xfc\xfa\xfa\xea\x9a\x7f\xba\xf9\xf8\xd7\xfb\x9b\xeb\x82\x31\xa1\x15\x1a\x4a\x7a\x5b\xf0\x84\x2e\xfd\x0e\xfe\xcb\xce\x2a\x43\x7c\xe9\x6c\xdf\xe5\xd4\xc4\xa8\xdd\x76\x90\x09\x2d\x00\x88\xb0\xed\x28\x74\x99\xe4\x8f\x86\x35\x9e\x50\x92\x33\x61\x1f\x37\x36\x70\xeb\x28\xec\xe9\x41\xd8\xe1\xab\x46\xa0\xde\x65\xa3\xce\x7a\x24\x02\xde\x81\xf3\xe8\x76\xe9\x57\xce\x61\xa4\x5f\x60\xaa\x54\x9e\x20\x60\xcf\x2e\x63\x3b\x30\x48\xa1\x33\x96\xec\xfa\xdd\xed\x9f\x37\xbf\x7f\x18\x12\xc4\x7f\x7b\x7d\x75\x7d\xfd\xee\xb6\x48\x9d\x98\x27\xd0\x8e\x29\x2a\x9c\xdd\x83\xcf\x81\x59\x62\x6e\xa5\x2f\x8a\xba\x37\x22\x70\x04\x34\x4f\xde\x9f\x9d\x15\x5e\xae\x22\xe9\x7a\x6a\x78\x83\x20\x83\x97\x31\xe0\x78\x42\x76\x85\x26\x1f\x1c\x14\xcf\x8e\xa4\x0d\x51\xe7\xcb\xc9\xc4\xd4\x74\x0e\x9d\xba\x10\x56\x99\x0a\x3c\x5e\x08\xdb\x4e\xa0\x53\x13\xdc\x74\x93\xfd\xa7\x93\xec\xf1\x24\x7b\x3c\x59\xcf\xee\x9d\x07\x0e\x3d\xd5\xbd\xce\x39\xf3\xe8\xd6\x89\x0e\x95\x32\x72\x34\xaf\xad\x00\x1d\x28\x5c\xbe\x9c\xbe\x9c\x16\x5e\xc3\x18\x7c\x6e\x45\x12\x35\x41\x9c\x46\x07\xa4\x1c\xce\x17\xa1\x6c\x71\xd3\xa1\x20\x94\xd1\x87\x5a\xdb\x34\x36\xce\x59\x6b\x8d\x22\xeb\xe2\xef\xce\x6a\x8d\xe9\x67\x9a\x3b\x47\x1f\x93\x1d\x45\x5e\xcd\xe2\x45\x28\x75\x0d\x2b\x9c\xec\x4a\xe6\x55\xa8\x92\xd0\xfe\x6d\xcd\xfd\xd6\x08\x6e\xac\xdc\x27\x40\xf2\x91\x54\x00\x61\x1e\x7f\xb5\x01\x3d\x23\x90\x6b\xf0\x94\x1a\x53\x10\x6b\x8b\x01\x08\xda\x76\x98\x43\xae\x4a\xf6\xc7\x65\x71\x10\x41\x05\x62\x55\xab\xe0\x77\xe2\x23\x08\x52\xeb\x30\x87\x62\xe5\x84\xa9\xa9\xda\xbe\xdd\x2b\x9b\xcb\x43\x31\x2f\x1a\x94\xbd\x46\x4e\x36\xb7\x82\x3c\xc0\x72\xde\xf6\x45\xd3\xb5\xe5\x42\x5b\x8f\xa3\xdc\x6c\x9a\x04\xf7\xa7\xfa\x7c\x91\x67\xaa\x68\x50\xac\x52\xb1\x0d\xf3\x3e\xdf\xd4\xa0\xb4\x5d\xa3\xe3\x77\x5b\x57\x28\x74\x87\x9d\xb3\x02\xbd\x47\x19\x3a\x5e\xda\x19\x86\x04\x26\x3a\x09\x6b\x44\xef\x5c\xc0\x04\x37\xe4\x40\x90\x8d\xe4\x9a\x27\x11\x02\xbf\xe2\x5a\xf9\xb8\x11\xd4\xd0\xeb\x34\x4d\x86\xf4\x71\x89\x42\x85\x06\x3d\x46\x32\x6f\x0f\x25\x70\x83\xa2\xa7\x43\x91\x17\xcd\xa1\x8c\x92\xa1\x2d\xd3\xb6\xdc\x1d\x5d\x8c\x98\x04\x80\xd0\x88\xa6\x85\x40\xfc\x67\x47\x48\x34\x4a\x8f\x15\xb0\x17\xde\x43\x0f\xe7\xcd\x33\x67\x72\x4c\x5e\xe8\x4f\xce\x7a\xcf\x8f\xba\xf9\xc9\x74\x2e\xbe\x23\xe1\xc5\xca\xd6\xf5\xde\xce\xba\x98\x4e\x5b\x7f\xa7\x18\x66\xd3\x87\x8a\x61\x77\xd3\x81\x03\xad\x51\x2b\xdf\x86\x3e\xfe\x48\xd2\x73\xf8\x79\x11\x10\x68\x28\x6c\x1e\x71\x1e\x1f\x5c\x1e\xce\xf5\xcb\x50\x76\xd9\xd6\xf7\x87\xed\x08\xa8\xf0\x17\x21\xb5\xd9\x27\x42\xf6\xf3\xff\x08\xd9\xe5\x5d\xbc\x16\x0f\xb7\xae\x53\x9d\xeb\xe9\x38\x7e\x7f\x14\xc6\xd1\x96\x06\xdb\x51\xf2\x1b\x04\x47\x15\xc2\x23\xd9\xfc\xef\xf8\xcc\xbf\x61\x49\xdd\xc1\x63\xbe\x38\x89\x47\x1d\x86\x6a\x18\xc4\x25\xab\x41\xfb\x71\xbc\xe4\xbf\x58\xc1\xe3\x30\xa6\xc3\x84\x11\x5b\xa1\x77\x3b\xda\x11\x94\xf3\x84\xa5\x4f\x2b\x3d\x17\x0e\x81\xee\xc3\x6c\x10\xb8\xeb\xc9\xb3\xd1\x60\xb7\xd5\x0c\x6b\xcc\x37\xef\x9b\x4f\x05\x79\xfe\x75\x6d\xf3\xb1\x15\xe2\x79\x53\xba\xb7\x1d\x0e\x2b\x6d\xdc\x07\xef\x71\xe8\xdf\x00\x00\x00\xff\xff\x50\xea\xb5\xfe\x77\x11\x00\x00")

func configChainstoragePolygonMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstoragePolygonMainnetBaseYml,
		"config/chainstorage/polygon/mainnet/base.yml",
	)
}

func configChainstoragePolygonMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstoragePolygonMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/polygon/mainnet/base.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstoragePolygonMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8d\xb1\x6e\xc3\x30\x0c\x05\x77\x7d\x05\x91\xce\x36\x8c\x64\x28\xa2\x39\x1d\xba\x34\x8b\x77\x83\x96\x5e\x1c\xc1\x12\x65\x48\x8c\xd3\xfc\x7d\x61\xa3\x68\xc1\x89\xb8\xe3\xf1\x8d\xfa\x7b\xa8\x74\x0b\x11\x14\x2a\x4d\x10\x14\x56\x78\x1a\x5f\x74\x48\x3c\x83\x5c\x96\x5b\x98\x0e\x2d\x5d\xae\xf4\x75\xed\xe9\xe3\xf2\xd9\xb7\x86\x9f\xd5\x1a\x22\x7e\xd6\x81\x9d\xcb\x0f\x51\x4b\x1e\x2b\x62\x5e\x12\x44\x0d\xd1\xf8\x70\x33\xd4\x12\xbe\x39\x2d\x11\x8d\xbb\x73\x90\xaa\xb9\xf0\x84\x66\xc9\xf1\x35\x65\x69\x12\x07\x11\x68\xe3\xb1\x1a\xc7\x1e\xe2\xb0\x67\xbd\x2f\xa8\xd5\x92\x22\x2d\xb9\x70\xdc\x84\xf6\xb7\xd4\xba\x9c\xec\xfb\xf1\x74\x32\x7b\x72\xf3\xc7\x98\xdd\x3c\x28\x4f\xdb\x42\x54\x95\xc7\x08\x4b\x47\x43\x84\x15\xa2\xff\x28\xb2\xa2\xea\x86\x2a\xca\x8a\xb2\x5f\x07\xf1\xc3\xdf\xcb\xae\xdd\xc7\x9e\xbb\x73\x67\x7e\x02\x00\x00\xff\xff\x7d\xc2\x36\xaf\x1f\x01\x00\x00")

func configChainstoragePolygonMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstoragePolygonMainnetDevelopmentYml,
		"config/chainstorage/polygon/mainnet/development.yml",
	)
}

func configChainstoragePolygonMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstoragePolygonMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/polygon/mainnet/development.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstoragePolygonMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstoragePolygonMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstoragePolygonMainnetLocalYml,
		"config/chainstorage/polygon/mainnet/local.yml",
	)
}

func configChainstoragePolygonMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstoragePolygonMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/polygon/mainnet/local.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstoragePolygonMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\x31\x6f\x83\x30\x10\x46\x77\xff\x8a\x53\x3a\x83\x50\x33\x54\xf1\x9c\x0e\x5d\x9a\x85\x1d\x1d\xf6\x07\xb1\xb0\x7d\x96\x6d\x4a\xf2\xef\x2b\x48\x55\xdd\xf2\x0d\xef\x3d\xdd\x1b\xf5\x77\x57\x68\x72\x1e\xe4\x0a\xcd\x88\xc8\x5c\x61\x69\x7c\xd2\x29\xf0\x02\x32\x12\x27\x37\x9f\x5a\xba\xde\xe8\xfb\xd6\xd3\xe7\xf5\xab\x6f\x15\x6f\x45\x2b\x22\xde\xca\xc0\xc6\xc8\x1a\xab\xa6\x94\xc5\xae\xa6\x3a\x89\x8a\x68\x5c\xcd\x82\xaa\x09\x0f\x0e\xc9\xa3\x31\x77\x76\xb1\x54\xc9\x3c\xa3\x49\xe2\x9f\xb3\xc4\x26\xb0\x8b\x11\xb5\xd9\x4d\x65\xd8\x22\x1a\x1c\x59\x6b\x33\x4a\xd1\x54\x11\x92\x64\xf6\xed\x5f\xa6\x35\x12\xf4\xc7\xfb\xf9\xac\x0a\xf2\x0f\xf2\x0e\x8f\x2e\xda\xe1\xdf\xe8\xda\xe3\xf4\xa5\xbb\x74\xaa\x78\xde\x09\x3c\x12\x4c\x85\x1d\x36\xc9\xcb\xe4\xe5\xf5\x7b\x43\x41\xa2\xab\x92\x8f\x9d\xc4\x7b\xbc\x66\xa9\x19\x1c\x90\xd5\x6f\x00\x00\x00\xff\xff\x07\x1f\xc3\xfd\x1d\x01\x00\x00")

func configChainstoragePolygonMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstoragePolygonMainnetProductionYml,
		"config/chainstorage/polygon/mainnet/production.yml",
	)
}

func configChainstoragePolygonMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstoragePolygonMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/polygon/mainnet/production.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageSolanaMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\xdb\x6e\x1b\x37\x13\xbe\xdf\xa7\x20\xfc\x5f\xdb\x3a\xd8\xca\xdf\xec\x9d\x9b\x04\xad\x91\xd4\x2e\x1a\x03\x05\x7a\x43\xcc\x92\xb3\x5a\x42\x3c\x6c\xc8\x59\x45\xea\xd3\x17\x3c\xc8\x2b\xc9\x07\xa5\x48\x5b\xdf\x69\xc9\x39\xcf\xc7\xf9\x46\xff\x63\xf7\x9d\x0a\xac\x55\x1a\x99\x0a\x6c\x89\x16\x3d\x10\x4a\xd6\x6c\xd9\x99\x81\x15\x32\xe1\x6c\xab\x96\x67\x17\xec\xfd\x1d\xbb\xbd\xbb\x67\x1f\xde\xdf\xdc\x5f\x54\xd0\xab\xba\x62\xcc\xc0\x86\xdb\xc1\xf0\x46\x3b\xb1\xe2\xd1\x4a\xa8\xd9\x6c\x3a\x9d\x1e\xdf\x85\x9a\x2d\xe2\x61\x3c\xf8\xea\xfc\x0a\x7d\x12\xac\x18\x0b\xe4\x11\x8c\xb2\x4b\xde\x00\x89\x8e\x07\xf5\x27\x16\xe1\xf1\x4a\x59\x42\xbf\x06\x5d\xb3\xf9\x62\x6a\xc2\xc1\x5d\xf2\xe3\x38\xae\xd1\x12\x27\x65\x30\x1a\x36\x15\x7c\x0d\x31\x42\xf8\x1a\x38\x08\xe1\x06\x4b\x35\x93\xb8\x46\xed\x7a\x83\x96\x2a\xc6\x9a\x41\xac\x90\x6a\x76\x76\x56\x31\x26\xf5\x97\x28\xce\x98\x44\x0d\x5b\x1e\x50\x84\x9a\xbd\x4d\x89\x30\x66\x21\x5a\xc5\x0d\x98\x5e\x23\x17\x1d\x28\x1b\xc8\x79\x58\x62\xc9\x8e\x07\xa7\xc1\x02\x37\xa0\xac\x45\xe2\x52\x7f\x49\x8a\x6b\x15\x54\xa3\xb4\xa2\x6d\x8a\xcc\x0d\x54\x2c\xbf\x49\x96\xe5\xd6\x82\x71\xb2\xc9\x9e\x73\x11\x09\x1a\xfd\xb7\x9c\x25\xdd\x92\xfd\x29\xdd\x5c\xa5\x53\x16\x78\x87\x6a\xd9\x11\x57\x56\xe2\xe6\x5b\xcc\x35\xdb\x9d\xca\x13\x86\xd7\xe8\x83\x72\x16\x25\x3f\x1d\xe4\x28\x7b\x2a\xdc\x27\xad\x16\xad\x97\xe2\x7e\xc6\x43\xb3\xdd\xe9\xca\xc7\xde\x7a\x8f\x41\x2d\xa3\xce\xe0\x35\xc7\x4d\xaf\x3c\x90\x72\xb6\x66\x97\x53\x53\x31\xe6\x71\x99\xbe\x86\x70\x8e\x10\xe8\x7c\x96\xf0\x99\xfc\x15\x4c\x01\x01\x17\xce\x44\x43\x21\x89\xfe\xf4\xc7\xcd\xaf\x95\x00\x89\x56\x24\x19\x90\x32\xde\xed\xc0\xe8\xa2\xf3\x9a\xed\x47\x7e\x9e\xc3\x3a\x1f\xc3\xf2\x48\x68\x63\x1c\xbc\x47\xaf\x9c\xac\xd9\xff\x2b\xc6\x48\x87\xec\x14\x6d\x2c\x89\xac\x19\xf9\x01\x73\xcd\x40\x2b\x09\x84\xbc\x73\x81\x32\xa6\xd3\x5d\x72\x13\x95\x72\x09\x02\x81\xa7\xd2\xd0\x9a\x4d\xab\x11\x99\xcb\x6c\x59\x03\x61\xa0\x9a\xcd\xd2\x57\x28\x0d\x9d\x8d\x82\xe9\x11\x5e\x4d\xf3\x4b\x4d\x67\xd9\x05\xfb\xf1\xd3\xdd\xbb\x8f\xef\x7e\xbe\xbe\xb9\xe5\x9f\xef\x3e\x5d\xdf\x5e\x57\x8c\x09\xad\xd0\x52\xb6\x6c\x20\x10\xfa\xfc\x3b\x66\x20\x7b\xa7\x2c\xf1\xa5\x77\x43\x5f\x6a\xc3\x58\xd0\xb0\xc6\x13\x32\x25\x55\xf7\xb2\xad\x1d\x74\x8e\xf2\x9a\x1e\xe4\x15\xbf\x5a\x04\x1a\x7c\x71\xea\x5d\x40\x22\xe0\x3d\xf8\x80\xbe\x66\x2d\xe8\x10\x0b\xac\xbc\xc7\x04\xaf\x88\x44\xa9\x02\x41\x6c\x6e\x1c\x87\x71\xf0\x21\xc5\xb9\x57\xb3\xdb\x0f\xf7\xbf\xdf\xfd\xf6\xb1\xe4\xcf\x7f\xb9\xbe\xb9\xbd\xfd\x70\x5f\xe5\x31\xcb\x73\x57\x8e\x10\x28\xbc\xdb\x6b\x8f\x07\xbb\xc4\x32\x26\xaf\x22\x58\x54\x48\xd8\x97\xfa\x0b\xef\xbd\x13\x18\x82\xf3\xa5\xb3\xed\x60\x45\x44\x08\x68\x9e\x53\x3b\x3b\xab\x82\x5c\x25\xc4\x0d\xd4\xf1\x0e\x41\xc6\x14\x52\x35\xd2\x09\xb9\x15\xda\x72\x70\xf0\x70\x1e\x10\xda\x11\xf5\xa1\x9e\x4c\x6c\x4b\xe7\xd0\xab\x0b\xe1\x94\x6d\x20\xe0\x85\x70\x66\x02\xbd\x9a\xe0\xa6\x9f\xec\xab\x4e\x72\x3a\x93\x92\xce\x64\x3d\x7b\x92\x08\x3c\x06\x6a\x07\x5d\x22\x0f\xe8\xd7\x19\x09\x8d\xb2\x72\xf4\xae\x9d\x00\x1d\xf1\x5b\xbf\x9d\xbe\x9d\x56\x41\xc3\x58\x99\x32\x83\x24\x6a\x82\x9a\xcd\x16\xd3\x03\x44\x3e\x9c\x9b\xcb\x69\xc4\x25\x6e\x7a\x14\x84\x32\x85\xd1\x6a\x97\xf9\xe2\x9c\x19\x67\x15\x39\x9f\x7e\xf7\x4e\x6b\xcc\x3f\x33\xe1\xa4\x8f\x38\xc6\x5d\xcb\xc3\xd6\x0a\x6e\x9d\x3c\x68\x76\x72\x4a\x2a\x16\x75\x9e\x7e\x99\xd8\x2b\x2b\x90\x6b\x08\x94\x87\x4c\xcd\x2e\x4d\xb5\xab\x2b\x6d\x7b\x2c\x29\x34\x35\xfb\x7c\x59\x1d\x84\xd3\x80\x58\xb5\x2a\x06\x91\xb1\x07\x82\xd4\x3a\xd2\x89\x47\xf2\xdb\xc8\x7d\xca\x0c\x86\x03\x11\x9a\x9e\x42\xcd\x2e\x0f\xc5\x82\xe8\x50\x0e\x1a\x39\xb9\xf2\xae\x0b\x0f\xd5\x6c\x61\x8e\x44\xf3\xb5\xe3\x42\xbb\x80\xa3\xdc\x6c\x9a\x05\xf7\xe9\x79\xbe\x28\xcc\x28\x3a\x14\xab\xfc\xb0\x76\xc4\x5d\x6e\x22\x2d\x7b\x2c\x80\x44\x19\x67\x54\x66\xf8\x38\x35\x33\xab\x0e\x86\x0b\x67\xc5\xe0\x7d\x7c\x86\xb8\x21\x0f\x82\x5c\x04\xc4\x9b\xab\x24\x41\x10\x56\x5c\xab\x90\xa8\xbb\x85\x41\xe7\xd9\xbf\xab\x10\x97\x28\x54\x9c\xa7\x63\xb0\x73\x73\x28\x81\x1b\x14\x03\x1d\x8a\x5c\x75\x87\x32\x4a\xc6\x31\x4a\xdb\xfa\xe1\xe8\x62\x2c\x7b\xec\x01\x5a\xd1\x19\x88\x58\x7d\xf5\x26\x88\x4e\xe9\x11\xb1\x7b\xe9\x3d\xa7\xf8\xa6\x28\xbe\x5e\x29\xc7\xea\xc5\x91\xe2\x5d\x08\xfc\x68\x3a\x9f\xac\xe7\xe2\x5f\x04\xb5\x58\xb9\xb6\xdd\x5b\x30\x67\xe1\x11\xda\x67\xcf\x81\x7d\xb6\x03\x7b\x0f\x1e\xb4\x46\xad\x82\xc9\x43\xf9\xd9\x82\x97\xd4\x0b\x6b\x0b\xb4\x14\xb7\x84\x3c\x01\xff\x8b\x76\x1c\x35\x20\xee\xe9\x79\xde\x7d\x63\x2b\x7e\x78\xdd\x56\xcc\x17\xcf\x8e\x9d\xc7\x8d\x28\x45\x7d\x35\xe8\x8f\x4c\x92\x79\xe4\xa8\xc4\x1d\x82\xa7\x06\xe1\x85\x9a\x7d\x7f\x17\xe6\xdf\xdd\x85\x45\xd9\xe3\x5e\xc2\x7f\x1b\xb9\x2d\xf2\xe1\xde\xb6\x19\x09\xa0\xfc\x61\x89\x61\x45\xb2\x8c\x1c\x20\xb6\x22\x6e\x55\x97\x4f\x35\x6c\x9e\x9f\x4e\xc8\x5b\x32\x17\x1e\x81\x9e\x6a\xcc\x4e\xe0\xf1\x8a\xfb\x6a\xbd\x7e\xd8\x14\x76\x7b\xc2\x3f\x3e\xda\xbe\xb5\x93\xf3\xd3\x8d\x3c\xfc\xa7\xfd\x3c\x93\xbf\x6e\x49\xf7\x36\xae\xdd\xa6\x98\x36\xb1\x27\x02\xfa\x2b\x00\x00\xff\xff\xfa\x8f\xb9\x78\xc7\x10\x00\x00")

func configChainstorageSolanaMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageSolanaMainnetBaseYml,
		"config/chainstorage/solana/mainnet/base.yml",
	)
}

func configChainstorageSolanaMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageSolanaMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/solana/mainnet/base.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageSolanaMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xd0\xbf\x8e\xdc\x20\x10\x06\xf0\x9e\xa7\x18\x5d\x6a\x5b\xbe\xbb\x44\xb9\xa5\xde\x14\x69\xb2\xcd\xf6\x68\x0c\x63\x1b\x19\x86\x15\x33\xde\x3f\x6f\x1f\xd9\xce\x66\xa1\x41\xfa\x3e\x7e\x82\xf9\x06\xe7\x29\x0a\x0c\x31\x11\x44\x81\x91\x98\x2a\x2a\x05\xe8\x1f\xf0\x96\x71\x26\xf0\x85\x87\x38\xbe\xb5\x70\x3c\xc1\x9f\xd3\x19\x7e\x1d\x7f\x9f\x5b\x83\x37\xb1\x06\x00\x6f\xe2\xd0\xfb\xb2\xb0\x5a\x08\x74\xa5\x54\x2e\x99\x58\x0d\x40\xbf\xf8\x99\xd4\x02\xdd\x31\x5f\x12\x35\x7e\xc2\xc8\xa2\xa5\xe2\x48\x8d\x94\x84\x8c\x4d\xc6\xc8\x4c\xda\x04\xba\x1a\x8f\x81\xd8\xd3\xa6\x86\x50\x49\xc4\x82\x52\xbe\x94\x8a\x69\x2d\xb4\xff\xa0\xd6\x97\x6c\x7f\x7e\x7c\x7e\x9a\x4d\x5c\xfb\x7d\x2a\x7e\x76\xa2\x58\xd5\x4d\x14\xc7\x49\x2d\x7c\x75\xfb\x32\x42\xf5\x4a\x75\xab\x45\x0e\xee\xbf\xdd\xb5\xdb\xb6\x87\xee\xd0\x19\x49\xf8\x82\x76\xc2\x05\x4a\x8a\x16\xde\x57\xe4\x19\x69\xcc\xf4\x0a\xb2\x01\x28\x8b\xba\x32\x38\x79\xb0\x77\x5c\x02\xb9\x10\x45\x71\xfd\xc8\xf3\xa6\x46\xaa\x16\x3e\xb6\x53\x26\x27\x91\x3d\xb9\x84\xa2\x6e\x33\x2d\xbc\xff\xc8\xe6\x56\xea\x3c\xa4\xb2\x4f\xb5\x47\x3f\x0f\x31\xa5\xfd\xd9\x00\xbc\x64\xe7\x0b\xfb\xa5\x56\x62\x75\x74\xd7\x8a\x5e\x4b\x15\x0b\xdf\xbf\xcc\xdf\x00\x00\x00\xff\xff\x76\xe7\x46\xe6\xc3\x01\x00\x00")

func configChainstorageSolanaMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageSolanaMainnetDevelopmentYml,
		"config/chainstorage/solana/mainnet/development.yml",
	)
}

func configChainstorageSolanaMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageSolanaMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/solana/mainnet/development.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageSolanaMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageSolanaMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageSolanaMainnetLocalYml,
		"config/chainstorage/solana/mainnet/local.yml",
	)
}

func configChainstorageSolanaMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageSolanaMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/solana/mainnet/local.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageSolanaMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x4f\xc3\x30\x10\xc5\xf1\xdd\x9f\xe2\xa9\xcc\xb1\x22\x3a\xa0\x7a\x2e\x03\x0b\x5d\xb2\x57\x97\xf3\x35\xb5\x6a\x9f\x23\x9f\x43\xe1\xdb\xa3\x56\x08\xbd\xf5\xfd\x7f\x2f\x98\xae\xc9\x70\x49\x59\x90\x0c\x8b\xa8\x34\xea\x12\x31\xff\x60\x57\xe8\x26\xe0\xaa\x97\xb4\xec\x3c\x8e\x27\x7c\x9e\x26\xbc\x1f\x3f\x26\xef\xe8\x6e\xc1\x01\x74\xb7\x33\x31\xd7\x4d\x7b\xc0\xda\x6a\xdc\xb8\xa7\xaa\x0e\x98\x37\xbe\x49\x0f\x90\x6f\x2a\x6b\x96\x81\xaf\x94\xd4\x7a\x6d\xb4\xc8\x60\x35\x93\xd2\x50\x28\xa9\x4a\x1f\x1e\xa1\x63\x8a\xa2\x2c\x4f\x35\xc6\x26\x66\x01\x5d\xca\x5a\x1b\x65\xff\xa7\x78\xae\x25\xbc\xbd\xee\xf7\xce\xa4\x7d\x49\x7b\x9c\xe7\xa4\xf1\xfc\x5f\x8c\xfe\xb9\x70\x18\x0f\xa3\xfb\x0d\x00\x00\xff\xff\x65\xd1\xb9\x68\xdd\x00\x00\x00")

func configChainstorageSolanaMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageSolanaMainnetProductionYml,
		"config/chainstorage/solana/mainnet/production.yml",
	)
}

func configChainstorageSolanaMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageSolanaMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/solana/mainnet/production.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"config/chainstorage/arbitrum/mainnet/base.yml":         configChainstorageArbitrumMainnetBaseYml,
	"config/chainstorage/arbitrum/mainnet/development.yml":  configChainstorageArbitrumMainnetDevelopmentYml,
	"config/chainstorage/arbitrum/mainnet/local.yml":        configChainstorageArbitrumMainnetLocalYml,
	"config/chainstorage/arbitrum/mainnet/production.yml":   configChainstorageArbitrumMainnetProductionYml,
	"config/chainstorage/avacchain/mainnet/base.yml":        configChainstorageAvacchainMainnetBaseYml,
	"config/chainstorage/avacchain/mainnet/development.yml": configChainstorageAvacchainMainnetDevelopmentYml,
	"config/chainstorage/avacchain/mainnet/production.yml":  configChainstorageAvacchainMainnetProductionYml,
	"config/chainstorage/bitcoin/mainnet/base.yml":          configChainstorageBitcoinMainnetBaseYml,
	"config/chainstorage/bitcoin/mainnet/development.yml":   configChainstorageBitcoinMainnetDevelopmentYml,
	"config/chainstorage/bitcoin/mainnet/local.yml":         configChainstorageBitcoinMainnetLocalYml,
	"config/chainstorage/bitcoin/mainnet/production.yml":    configChainstorageBitcoinMainnetProductionYml,
	"config/chainstorage/bsc/mainnet/base.yml":              configChainstorageBscMainnetBaseYml,
	"config/chainstorage/bsc/mainnet/development.yml":       configChainstorageBscMainnetDevelopmentYml,
	"config/chainstorage/bsc/mainnet/local.yml":             configChainstorageBscMainnetLocalYml,
	"config/chainstorage/bsc/mainnet/production.yml":        configChainstorageBscMainnetProductionYml,
	"config/chainstorage/dogecoin/mainnet/base.yml":         configChainstorageDogecoinMainnetBaseYml,
	"config/chainstorage/dogecoin/mainnet/development.yml":  configChainstorageDogecoinMainnetDevelopmentYml,
	"config/chainstorage/dogecoin/mainnet/local.yml":        configChainstorageDogecoinMainnetLocalYml,
	"config/chainstorage/dogecoin/mainnet/production.yml":   configChainstorageDogecoinMainnetProductionYml,
	"config/chainstorage/ethereum/goerli/base.yml":          configChainstorageEthereumGoerliBaseYml,
	"config/chainstorage/ethereum/goerli/development.yml":   configChainstorageEthereumGoerliDevelopmentYml,
	"config/chainstorage/ethereum/goerli/local.yml":         configChainstorageEthereumGoerliLocalYml,
	"config/chainstorage/ethereum/goerli/production.yml":    configChainstorageEthereumGoerliProductionYml,
	"config/chainstorage/ethereum/mainnet/base.yml":         configChainstorageEthereumMainnetBaseYml,
	"config/chainstorage/ethereum/mainnet/development.yml":  configChainstorageEthereumMainnetDevelopmentYml,
	"config/chainstorage/ethereum/mainnet/local.yml":        configChainstorageEthereumMainnetLocalYml,
	"config/chainstorage/ethereum/mainnet/production.yml":   configChainstorageEthereumMainnetProductionYml,
	"config/chainstorage/optimism/mainnet/base.yml":         configChainstorageOptimismMainnetBaseYml,
	"config/chainstorage/optimism/mainnet/development.yml":  configChainstorageOptimismMainnetDevelopmentYml,
	"config/chainstorage/optimism/mainnet/local.yml":        configChainstorageOptimismMainnetLocalYml,
	"config/chainstorage/optimism/mainnet/production.yml":   configChainstorageOptimismMainnetProductionYml,
	"config/chainstorage/polygon/mainnet/base.yml":          configChainstoragePolygonMainnetBaseYml,
	"config/chainstorage/polygon/mainnet/development.yml":   configChainstoragePolygonMainnetDevelopmentYml,
	"config/chainstorage/polygon/mainnet/local.yml":         configChainstoragePolygonMainnetLocalYml,
	"config/chainstorage/polygon/mainnet/production.yml":    configChainstoragePolygonMainnetProductionYml,
	"config/chainstorage/solana/mainnet/base.yml":           configChainstorageSolanaMainnetBaseYml,
	"config/chainstorage/solana/mainnet/development.yml":    configChainstorageSolanaMainnetDevelopmentYml,
	"config/chainstorage/solana/mainnet/local.yml":          configChainstorageSolanaMainnetLocalYml,
	"config/chainstorage/solana/mainnet/production.yml":     configChainstorageSolanaMainnetProductionYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"config": &bintree{nil, map[string]*bintree{
		"chainstorage": &bintree{nil, map[string]*bintree{
			"arbitrum": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageArbitrumMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageArbitrumMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageArbitrumMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageArbitrumMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"avacchain": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageAvacchainMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageAvacchainMainnetDevelopmentYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageAvacchainMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"bitcoin": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageBitcoinMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageBitcoinMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageBitcoinMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageBitcoinMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"bsc": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageBscMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageBscMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageBscMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageBscMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"dogecoin": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageDogecoinMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageDogecoinMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageDogecoinMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageDogecoinMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"ethereum": &bintree{nil, map[string]*bintree{
				"goerli": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageEthereumGoerliBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageEthereumGoerliDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageEthereumGoerliLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageEthereumGoerliProductionYml, map[string]*bintree{}},
				}},
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageEthereumMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageEthereumMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageEthereumMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageEthereumMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"optimism": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageOptimismMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageOptimismMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageOptimismMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageOptimismMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"polygon": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstoragePolygonMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstoragePolygonMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstoragePolygonMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstoragePolygonMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"solana": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageSolanaMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageSolanaMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageSolanaMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageSolanaMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
