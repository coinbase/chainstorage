// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/coinbase/chainstorage/internal/blockchain/parser (interfaces: Parser)

// Package parsermocks is a generated GoMock package.
package parsermocks

import (
	context "context"
	reflect "reflect"

	chainstorage "github.com/coinbase/chainstorage/protos/coinbase/chainstorage"
	gomock "github.com/golang/mock/gomock"
)

// MockParser is a mock of Parser interface.
type MockParser struct {
	ctrl     *gomock.Controller
	recorder *MockParserMockRecorder
}

// MockParserMockRecorder is the mock recorder for MockParser.
type MockParserMockRecorder struct {
	mock *MockParser
}

// NewMockParser creates a new mock instance.
func NewMockParser(ctrl *gomock.Controller) *MockParser {
	mock := &MockParser{ctrl: ctrl}
	mock.recorder = &MockParserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockParser) EXPECT() *MockParserMockRecorder {
	return m.recorder
}

// ParseNativeBlock mocks base method.
func (m *MockParser) ParseNativeBlock(arg0 context.Context, arg1 *chainstorage.Block) (*chainstorage.NativeBlock, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseNativeBlock", arg0, arg1)
	ret0, _ := ret[0].(*chainstorage.NativeBlock)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ParseNativeBlock indicates an expected call of ParseNativeBlock.
func (mr *MockParserMockRecorder) ParseNativeBlock(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseNativeBlock", reflect.TypeOf((*MockParser)(nil).ParseNativeBlock), arg0, arg1)
}

// ParseRosettaBlock mocks base method.
func (m *MockParser) ParseRosettaBlock(arg0 context.Context, arg1 *chainstorage.Block) (*chainstorage.RosettaBlock, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseRosettaBlock", arg0, arg1)
	ret0, _ := ret[0].(*chainstorage.RosettaBlock)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ParseRosettaBlock indicates an expected call of ParseRosettaBlock.
func (mr *MockParserMockRecorder) ParseRosettaBlock(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseRosettaBlock", reflect.TypeOf((*MockParser)(nil).ParseRosettaBlock), arg0, arg1)
}
