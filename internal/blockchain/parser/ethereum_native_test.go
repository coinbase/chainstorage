package parser

import (
	"context"
	"encoding/json"
	"fmt"
	"math"
	"math/big"
	"testing"

	"github.com/golang/protobuf/ptypes/timestamp"
	"go.uber.org/fx"

	"github.com/coinbase/chainstorage/internal/utils/fixtures"

	"github.com/coinbase/chainstorage/internal/utils/testapp"
	"github.com/coinbase/chainstorage/internal/utils/testutil"
	"github.com/coinbase/chainstorage/protos/coinbase/c3/common"
	api "github.com/coinbase/chainstorage/protos/coinbase/chainstorage"
)

const (
	ethereumTag          uint32 = 1
	ethereumHeight       uint64 = 0xacc290
	ethereumParentHeight uint64 = 0xacc28f
	ethereumHash                = "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b"
	ethereumParentHash          = "0xb91edf64c8c47f199398050a1d18efc3b00725d866b875e340198f563a000575"
)

var (
	ethereumMetadata = &api.BlockMetadata{
		Tag:          ethereumTag,
		Hash:         ethereumHash,
		ParentHash:   ethereumParentHash,
		Height:       ethereumHeight,
		ParentHeight: ethereumParentHeight,
	}

	fixtureHeader = []byte(`
	{
		"difficulty": "0xc7ad271a33ba1",
		"extraData": "0x7575706f6f6c2e636e2d3333",
		"gasLimit": "0xbe2d22",
		"gasUsed": "0xbe252d",
		"hash": "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
		"logsBloom": "0xfdf668a334802d0164a3e3cab8f79d6bab99b9800f565fa9dea9138b2192371768c4d8f83681bb0647e07d000807499cca14bcd05d1202c180e0e2a0f2777225f4990de285aa8086d82acd2c5653c46fe8943c0e50e6521a879a5144c14f57125c064c122e730c959509992ac09588e9c648da88a6eac64805fe9132d280772abd048d16428227c6c0d8c57a460c8281e0203f8791e402cdba21c5ea0430a282a2b3a7e593a2392a2523b7961b2fd0a06752631744001311b4a9ad111d20ec7d4c2d4e02892ed5023b12126442a219ac16400e40051900d250a3b7e6adc2e13053393130810561402181040301ca492fdb24320064c43a50c42c31ea259f4820",
		"miner": "0xd224ca0c819e8e97ba0136b3b95ceff503b79f53",
		"mixHash": "0x7cfd7be6442751ccf7019016fc6e0fcebe2734fd3456e7a2b65fb48e3723a9f9",
		"nonce": "0xc83f6d8ab7e58888",
		"number": "0xacc290",
		"parentHash": "0xb91edf64c8c47f199398050a1d18efc3b00725d866b875e340198f563a000575",
		"receiptsRoot": "0x18b4e30527b17d9e1e8f0dc129c828a28a2a32b43a651b4f9302a2686f7a5963",
		"sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
		"size": "0xb8ec",
		"stateRoot": "0xf7135b656a6513846894dad825c7a2403ee2f93ea9e3fe0e8cd846ba0df2fd7d",
		"timestamp": "0x5fbd2fb9",
		"totalDifficulty": "0x40232fbfb0a219668dc",
		"transactions": [
			{
				"accessList": [
				  	{
						"address": "0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae",
						"storageKeys": [
						  "0x0000000000000000000000000000000000000000000000000000000000000003",
						  "0x0000000000000000000000000000000000000000000000000000000000000007"
						]
				  	},
				  	{
						"address": "0xbb9bc244d798123fde783fcc1c72d3bb8c189413",
						"storageKeys": []
				  	}
				],
				"blockHash": "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
				"blockNumber": "0xacc290",
				"from": "0x4823cc90c145fd6a16ab7668043dbba5ce79cdfc",
				"gas": "0x15f90",
				"gasPrice": "0x22cee4f700",
				"hash": "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
				"input": "0xa9059cbb00000000000000000000000022852cdfdda5eb9b0e25d6581bdb82a156ac4c400000000000000000000000000000000000000000000000000000000162598040",
				"nonce": "0x1f0",
				"r": "0x5f2ba54bcb85a3a3de43dd80ab4905247c8e898ec892b83e133fc9edbb3a9586",
				"s": "0x6de1025cf859b6bc635fae85e6c460e4ccb6f05a74fa42164f14a409fb28a957",
				"to": "0xdac17f958d2ee523a2206206994597c13d831ec7",
				"transactionIndex": "0x0",
				"type": "0x0",
				"v": "0x26",
				"value": "0xa"
			}
		],
        "transactionsRoot": "0x8fcfe4d75266508496020675b9c3acfdf0074bf2d177c6366b40f669306310db"
	}`)

	fixtureHeaderOptimism = []byte(`
	{
	    "difficulty": "0x2",
		"extraData": "0xd98301090a846765746889676f312e31352e3133856c696e75780000000000009c3827892825f0825a7e329b6913b84c9e4f89168350aff0939e0e6609629f2e7f07f2aeb62acbf4b16a739cab68866f4880ea406583a4b28a59d4f55dc2314e00",
	  	"gasLimit": "0xe4e1c0",
	  	"gasUsed": "0x3183d",
	  	"hash": "0xbee7192e575af30420cae0c7776304ac196077ee72b048970549e4f08e875453",
	  	"logsBloom": "0x
	  	"miner": "0x0000000000000000000000000000000000000000",
	  	"mixHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
	  	"nonce": "0x0000000000000000",
	  	"number": "0x1",
	  	"parentHash": "0x7ca38a1916c42007829c55e69d3e9a73265554b586a499015373241b8a3fa48b",
	  	"receiptsRoot": "0xf4c97b1186b690ad3318f907c0cdaf46f4598f27f711a5609064b2690a767287",
	  	"sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
	  	"size": "0x30c",
	  	"stateRoot": "0xd3ac40854cd2ac17d8effeae6065cea990b04be714f7061544973feeb2f1c95f",
	  	"timestamp": "0x618d8837",
	  	"totalDifficulty": "0x3",
	  	"transactions": [
			{
			    "blockHash": "0xbee7192e575af30420cae0c7776304ac196077ee72b048970549e4f08e875453",
			  	"blockNumber": "0x1",
			  	"from": "0x70b17c0fe982ab4a7ac17a4c25485643151a1f2d",
			  	"gas": "0x7a120",
			  	"gasPrice": "0x1",
			  	"hash": "0x5e77a04531c7c107af1882d76cbff9486d0a9aa53701c30888509d4f5f2b003a",
			  	"input": "0x202ee0ed000000000000000000000000000000000000000000000000000000000001421800000000000000000000000000000000000000000000000000000000d0e3ebf0",
			  	"nonce": "0x28972",
			  	"to": "0x8ce8c13d816fe6daf12d6fd9e4952e1fc88850af",
			  	"transactionIndex": "0x0",
			 	 "value": "0x0",
			  	"v": "0x38",
			  	"r": "0xc878d22e771004beb73e7a4268fd4f447735812b94b217f6807412efcec90d61",
			  	"s": "0x3588018735fb361c49e5de54b266b8b157c1ba3d6ee08e3bcbdee7cd725c16e8",
			  	"queueOrigin": "sequencer",
			  	"l1TxOrigin": null,
			  	"l1BlockNumber": "0xcf7a45",
			  	"l1Timestamp": "0x618d8837",
			  	"index": "0x0",
			  	"queueIndex": null,
			  	"rawTransaction": "0xf8a883028972018307a120948ce8c13d816fe6daf12d6fd9e4952e1fc88850af80b844202ee0ed000000000000000000000000000000000000000000000000000000000001421800000000000000000000000000000000000000000000000000000000d0e3ebf038a0c878d22e771004beb73e7a4268fd4f447735812b94b217f6807412efcec90d61a03588018735fb361c49e5de54b266b8b157c1ba3d6ee08e3bcbdee7cd725c16e8"
			}
	  	],
	  	"transactionsRoot": "0x19f5efd0d94386e72fcb3f296f1cb2936d017c37487982f76f09c591129f561f",
	  	"uncles": []
	}`)

	fixtureHeaderArbitrum = []byte(`
	{
   		"baseFeePerGas":"0x5f5e100",
   		"difficulty":"0x1",
        "extraData":"0xc9e8ac1498b67eb1b6146d45200732408801569883d2dc824902c280b00a0542",
   		"gasLimit":"0x4000000000000",
   		"gasUsed":"0x6b90f",
   		"hash":"0x550e1099d4049e048f12c4bb6b19292bf9c6cc15f0f384003b318b9b3258b519",
   		"l1BlockNumber":"0xfd6304",
   		"logsBloom":"0x
   		"miner":"0xa4b000000000000000000073657175656e636572",
   		"mixHash":"0x000000000000b08a0000000000fd6304000000000000000a0000000000000000",
   		"nonce":"0x000000000007483f",
   		"number":"0x3938700",
   		"parentHash":"0x0e0045e45209dc804d0d94638cb5894884bce84c007c1119cab2123c3ca497b1",
   		"receiptsRoot":"0x0fd071fc5a20b101c0840b2ca6b05eaf35f6c1c327aaf2f55d73d1069fd830fd",
   		"sendCount":"0xb08a",
   		"sendRoot":"0xc9e8ac1498b67eb1b6146d45200732408801569883d2dc824902c280b00a0542",
   		"sha3Uncles":"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
   		"size":"0x3d5",
   		"stateRoot":"0x85757572d117f7139e90f8c0832e93cc8a176ab7aa823892af7cf8f09047de0b",
   		"timestamp":"0x63e79ea6",
   		"totalDifficulty":"0x240a9b8",
   		"transactions":[
      		{
				"blockHash":"0x550e1099d4049e048f12c4bb6b19292bf9c6cc15f0f384003b318b9b3258b519",
				"blockNumber":"0x3938700",	
				"from":"0x23be9230b9f470b94a0a5952dd40f9ef6b67344c",
         		"gas":"0x8db3c",
         		"gasPrice":"0x5f5e100",
         		"maxFeePerGas":"0x5f5e100",
         		"maxPriorityFeePerGas":"0x5f5e100",
         		"hash":"0x299e5d56538897f3c4906844a7ead0d1d17362a963010624f5dc6f13c5953225",
         		"input":"0xa397ea540000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000155ee13fb4b72a6cf027b45bb6c000000000000000000000000000000000000004b0bfb49c90c0b0f999e500000000000000000000000000000000000000000000000000000000000000000000000",
         		"nonce":"0x3c",
         		"to":"0x09f77e8a13de9a35a7231028187e9fd5db8a2acb",
         		"transactionIndex":"0x1",
         		"value":"0x0",
         		"type":"0x2",
         		"accessList":[],
         		"chainId":"0xa4b1",
         		"v":"0x1",
         		"r":"0x3d971af90fe50a748a8b962706e6b0348664f738146cd1fb3cb635fad28996c1",
         		"s":"0x6ce0cf2da788587ac430bab10d61561c1810bfdf14622ae98b7cee9b3bf3ac30"
      		}
   		],
   		"transactionsRoot":"0x2fc880b4a7c8bcc23c06221cda9c6dcf19ecb5c60472b7cef7af6729833b9997",
   		"uncles":[]
	}`)

	fixtureHeaderProofOfStake = []byte(`
	{
		"difficulty": "0x0",
		"extraData": "0x7575706f6f6c2e636e2d3333",
		"gasLimit": "0xbe2d22",
		"gasUsed": "0xbe252d",
		"hash": "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
		"logsBloom": "0xfdf668a334802d0164a3e3cab8f79d6bab99b9800f565fa9dea9138b2192371768c4d8f83681bb0647e07d000807499cca14bcd05d1202c180e0e2a0f2777225f4990de285aa8086d82acd2c5653c46fe8943c0e50e6521a879a5144c14f57125c064c122e730c959509992ac09588e9c648da88a6eac64805fe9132d280772abd048d16428227c6c0d8c57a460c8281e0203f8791e402cdba21c5ea0430a282a2b3a7e593a2392a2523b7961b2fd0a06752631744001311b4a9ad111d20ec7d4c2d4e02892ed5023b12126442a219ac16400e40051900d250a3b7e6adc2e13053393130810561402181040301ca492fdb24320064c43a50c42c31ea259f4820",
		"miner": "0xd224ca0c819e8e97ba0136b3b95ceff503b79f53",
		"mixHash": "0x7cfd7be6442751ccf7019016fc6e0fcebe2734fd3456e7a2b65fb48e3723a9f9",
		"nonce": "0xc83f6d8ab7e58888",
		"number": "0xacc290",
		"parentHash": "0xb91edf64c8c47f199398050a1d18efc3b00725d866b875e340198f563a000575",
		"receiptsRoot": "0x18b4e30527b17d9e1e8f0dc129c828a28a2a32b43a651b4f9302a2686f7a5963",
		"sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
		"size": "0xb8ec",
		"stateRoot": "0xf7135b656a6513846894dad825c7a2403ee2f93ea9e3fe0e8cd846ba0df2fd7d",
		"timestamp": "0x5fbd2fb9",
		"totalDifficulty": "0x40232fbfb0a219668dc",
		"transactions": [
			{
				"accessList": [
				  	{
						"address": "0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae",
						"storageKeys": [
						  "0x0000000000000000000000000000000000000000000000000000000000000003",
						  "0x0000000000000000000000000000000000000000000000000000000000000007"
						]
				  	},
				  	{
						"address": "0xbb9bc244d798123fde783fcc1c72d3bb8c189413",
						"storageKeys": []
				  	}
				],
				"blockHash": "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
				"blockNumber": "0xacc290",
				"from": "0x4823cc90c145fd6a16ab7668043dbba5ce79cdfc",
				"gas": "0x15f90",
				"gasPrice": "0x22cee4f700",
				"hash": "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
				"input": "0xa9059cbb00000000000000000000000022852cdfdda5eb9b0e25d6581bdb82a156ac4c400000000000000000000000000000000000000000000000000000000162598040",
				"nonce": "0x1f0",
				"r": "0x5f2ba54bcb85a3a3de43dd80ab4905247c8e898ec892b83e133fc9edbb3a9586",
				"s": "0x6de1025cf859b6bc635fae85e6c460e4ccb6f05a74fa42164f14a409fb28a957",
				"to": "0xdac17f958d2ee523a2206206994597c13d831ec7",
				"transactionIndex": "0x0",
				"type": "0x0",
				"v": "0x26",
				"value": "0xa"
			}
		],
        "transactionsRoot": "0x8fcfe4d75266508496020675b9c3acfdf0074bf2d177c6366b40f669306310db"
	}`)

	ethereumMetadataPostLondon = &api.BlockMetadata{
		Tag:          ethereumTag,
		Hash:         "0x75ba53b1d5e77b849c669880a4c1bb758a3ffefe9410c6bc1c61306312c9ee61",
		ParentHash:   "0x938e07a85b9903c5ddb49181b6bf6a35352f7726c4bd879ab8543b7e68000db2",
		Height:       uint64(0xc5d824),
		ParentHeight: uint64(0xc5d823),
	}

	fixtureHeaderPostLondon = []byte(`
	{
		"difficulty": "0x1ac98fe2d7d4a9",
		"extraData": "0xe4b883e5bda9e7a59ee4bb99e9b1bc000b21",
		"gasLimit": "0x1aae90d",
		"gasUsed": "0x1a3e6ec",
		"baseFeePerGas": "0x1265627422",
		"hash": "0x75ba53b1d5e77b849c669880a4c1bb758a3ffefe9410c6bc1c61306312c9ee61",
		"logsBloom": "0x
		"miner": "0x829bd824b016326a401d083b33d092293333a830",
		"mixHash": "0xd2ba5b42126aa518f6aaf6403220373bd7c25834796fdff20e49e82a477b9d87",
		"nonce": "0x2682202d6780632a",
		"number": "0xc5d824",
		"parentHash": "0x938e07a85b9903c5ddb49181b6bf6a35352f7726c4bd879ab8543b7e68000db2",
		"receiptsRoot": "0xa0511bd1e7aba087b4c722d666265d805b1e24263b36c3d2423013b944163566",
		"sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
		"size": "0x1f0af",
		"stateRoot": "0x5cb53f982489f776f134c40653d781eb62c54a185ad02a2733fae41c7961c279",
		"timestamp": "0x610c0c89",
		"totalDifficulty": "0x609111e435963af2b58",
		"transactions": [
			{
				"accessList": [
				  {
					"address": "0xde0b295669a9fd93d5f28d9ec68e40f4cb697bae",
					"storageKeys": [
					  "0x0000000000000000000000000000000000000000000000000000000000000004",
					  "0x0000000000000000000000000000000000000000000000000000000000000002"
					]
				  }
				],
				"blockHash": "0x75ba53b1d5e77b849c669880a4c1bb758a3ffefe9410c6bc1c61306312c9ee61",
				"blockNumber": "0xc5d824",
				"chainId": "0x1",
				"from": "0x94dd7d29aecc6cfba801fd95becc2f9808bcdf7d",
				"gas": "0x12f7f",
				"gasPrice": "0x1353cd9c22",
				"hash": "0x256697702d7a60ef603e5261d6bc8f1916de05bebafa79e8519e2e360d02bfa2",
				"input": "0x",
				"maxFeePerGas": "0x1e5d85f6cc",
				"maxPriorityFeePerGas": "0xee6b2800",
				"nonce": "0x8",
				"r": "0x1e705ccb2f408395fa459ca89f919a0c51ab873fb7af28eacd6a9312c21e22bf",
				"s": "0x3fa953e37bdc892f8262a58482f0021ade66a40be01f508049070e36743afd65",
				"to": "0x8b0e42f366ba502d787bb134478adfae966c8798",
				"transactionIndex": "0x177",
				"type": "0x2",
				"v": "0x0",
				"value": "0x1"
			}
		],
		"transactionsRoot": "0xa51bb99d8781b463f59eee11c403a7a03ecc0154a52745ade4faec521fa9cb7d",
    	"uncles": []
	}`)

	fixtureHeaderPostLondon_Legacy = []byte(`
	{
		"difficulty": "0x1ac98fe2d7d4a9",
		"extraData": "0xe4b883e5bda9e7a59ee4bb99e9b1bc000b21",
		"gasLimit": "0x1aae90d",
		"gasUsed": "0x1a3e6ec",
		"baseFeePerGas": "0x2d920f77e3",
		"hash": "0x6d39744339b781ecaa5a86732c8db2b81a24ddb2f0b74f0e08e39ccab765abdb",
		"logsBloom": "0x0",
		"miner": "0x829bd824b016326a401d083b33d092293333a830",
		"mixHash": "0xd2ba5b42126aa518f6aaf6403220373bd7c25834796fdff20e49e82a477b9d87",
		"nonce": "0x2682202d6780632a",
		"number": "0xce19cf",
		"parentHash": "0x3dbb07f300342df11c0db6ada1720be2a2945c4e3f1e31ce47ad03286049d6b2",
		"receiptsRoot": "0xa0511bd1e7aba087b4c722d666265d805b1e24263b36c3d2423013b944163566",
		"sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
		"size": "0x1f0af",
		"stateRoot": "0x5cb53f982489f776f134c40653d781eb62c54a185ad02a2733fae41c7961c279",
		"timestamp": "0x617ada65",
		"totalDifficulty": "0x609111e435963af2b58",
		"transactions": [
			{
				"blockHash": "0x6d39744339b781ecaa5a86732c8db2b81a24ddb2f0b74f0e08e39ccab765abdb",
				"blockNumber": "0xce19cf",
				"from": "0xb816e619cc051fb1e1ddc10d6574456741105fea",
				"gas": "0x12f7f",
				"gasPrice": "0x2dc3b2e7ae",
				"hash": "0x389fc3e9b76a2a873f3bd6068286cc0f60b4a39791d9c55a36f91887d5b69106",
				"input": "0x",
				"nonce": "0x8",
				"r": "0x1e705ccb2f408395fa459ca89f919a0c51ab873fb7af28eacd6a9312c21e22bf",
				"s": "0x3fa953e37bdc892f8262a58482f0021ade66a40be01f508049070e36743afd65",
				"to": "0x8b0e42f366ba502d787bb134478adfae966c8798",
				"transactionIndex": "0xb3",
				"type": "0x0",
				"v": "0x0",
				"value": "0x0"
			}
		],
		"transactionsRoot": "0xa51bb99d8781b463f59eee11c403a7a03ecc0154a52745ade4faec521fa9cb7d",
    	"uncles": []
	}`)

	fixtureReceiptOptimism = []byte(`
	{
	    "blockHash": "0xbee7192e575af30420cae0c7776304ac196077ee72b048970549e4f08e875453",
	    "blockNumber": "0x1",
	    "contractAddress": null,
	    "cumulativeGasUsed": "0x3183d",
	  	"from": "0x70b17c0fe982ab4a7ac17a4c25485643151a1f2d",
	  	"gasUsed": "0x3183d",
	  	"l1Fee": "0x1c23",
	  	"l1FeeScalar": "1.5",
	  	"l1GasPrice": "0x1",
	  	"l1GasUsed": "0x12c2",
	  	"logs": [
			{
		  		"address": "0x8ce8c13d816fe6daf12d6fd9e4952e1fc88850af",
		  		"topics": [
					"0x0109fc6f55cf40689f02fbaad7af7fe7bbac8a3d2186600afc7d3e10cac60271",
					"0x0000000000000000000000000000000000000000000000000000000000014218",
					"0x00000000000000000000000070b17c0fe982ab4a7ac17a4c25485643151a1f2d"
		  		],
		  		"data": "0x00000000000000000000000000000000000000000000000000000000618d8837",
		  		"blockNumber": "0x1",
		  		"transactionHash": "0x5e77a04531c7c107af1882d76cbff9486d0a9aa53701c30888509d4f5f2b003a",
		  		"transactionIndex": "0x0",
		  		"blockHash": "0xbee7192e575af30420cae0c7776304ac196077ee72b048970549e4f08e875453",
		  		"logIndex": "0x0",
		  		"removed": false
			},
			{
			  	"address": "0x8ce8c13d816fe6daf12d6fd9e4952e1fc88850af",
			  	"topics": [
					"0x92e98423f8adac6e64d0608e519fd1cefb861498385c6dee70d58fc926ddc68c",
					"0x00000000000000000000000000000000000000000000000000000000d0e3ebf0",
					"0x0000000000000000000000000000000000000000000000000000000000014218",
					"0x00000000000000000000000070b17c0fe982ab4a7ac17a4c25485643151a1f2d"
			  	],
			  	"data": "0x",
			  	"blockNumber": "0x1",
			  	"transactionHash": "0x5e77a04531c7c107af1882d76cbff9486d0a9aa53701c30888509d4f5f2b003a",
			  	"transactionIndex": "0x0",
			  	"blockHash": "0xbee7192e575af30420cae0c7776304ac196077ee72b048970549e4f08e875453",
			  	"logIndex": "0x1",
			  	"removed": false
			},
			{
		  		"address": "0x8ce8c13d816fe6daf12d6fd9e4952e1fc88850af",
		  		"topics": [
					"0xfe25c73e3b9089fac37d55c4c7efcba6f04af04cebd2fc4d6d7dbb07e1e5234f",
					"0x00000000000000000000000000000000000000000000007edc6ca0bb68348000"
		 		 ],
		  		"data": "0x",
		  		"blockNumber": "0x1",
		  		"transactionHash": "0x5e77a04531c7c107af1882d76cbff9486d0a9aa53701c30888509d4f5f2b003a",
		  		"transactionIndex": "0x0",
		  		"blockHash": "0xbee7192e575af30420cae0c7776304ac196077ee72b048970549e4f08e875453",
		  		"logIndex": "0x2",
		  		"removed": false
			}
	  	],
	  	"logsBloom": "0x
	  	"status": "0x1",
	  	"to": "0x8ce8c13d816fe6daf12d6fd9e4952e1fc88850af",
	  	"transactionHash": "0x5e77a04531c7c107af1882d76cbff9486d0a9aa53701c30888509d4f5f2b003a",
	  	"transactionIndex": "0x0"
	}`)

	fixtureReceiptArbitrum = []byte(`
	{
   		"blockHash":"0x550e1099d4049e048f12c4bb6b19292bf9c6cc15f0f384003b318b9b3258b519",
   		"blockNumber":"0x3938700",
   		"contractAddress":null,
   		"cumulativeGasUsed":"0x6b90f",
   		"effectiveGasPrice":"0x5f5e100",
   		"from":"0x23be9230b9f470b94a0a5952dd40f9ef6b67344c",
   		"gasUsed":"0x6b90f",
   		"gasUsedForL1":"0x5fa8f",
   		"l1BlockNumber":"0xfd6304",
   		"logs":[
      		{
         		"address":"0x09f77e8a13de9a35a7231028187e9fd5db8a2acb",
         		"topics":[
            		"0x75781255bc71c83f89f29e5a2599f2c174a562d2cd8f2e818a47f132e7280498",
            		"0x00000000000000000000000023be9230b9f470b94a0a5952dd40f9ef6b67344c"
         		],
         		"data":"0x0000000000000000000000000000000000000000000000000000000000000006000000000000000000000000ff970a61a04b1ca14834a43f5de4533ebddb5cc8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000082af49447d8a07e3bd95bd0d56f35241523fbab100000000000000000000000000000000000155ee13fb4b72a6cf027b45bb6c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004b0bfb49c90c0b0f999e500000000000000000000000000000000000000000000000000000000000000000000000",
         		"blockNumber":"0x3938700",
         		"transactionHash":"0x299e5d56538897f3c4906844a7ead0d1d17362a963010624f5dc6f13c5953225",
         		"transactionIndex":"0x1",
         		"blockHash":"0x550e1099d4049e048f12c4bb6b19292bf9c6cc15f0f384003b318b9b3258b519",
         		"logIndex":"0x0",
         		"removed":false
      		}
   		],
   		"logsBloom":"0x
   		"status":"0x1",
   		"to":"0x09f77e8a13de9a35a7231028187e9fd5db8a2acb",
   		"transactionHash":"0x299e5d56538897f3c4906844a7ead0d1d17362a963010624f5dc6f13c5953225",
   		"transactionIndex":"0x1",
   		"type":"0x2"
	}`)

	fixtureLargeLogDataReceipt = []byte(`
	{
		"blockHash": "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
		"blockNumber": "0xacc290",
		"contractAddress": null,
		"cumulativeGasUsed": "0xbca58c",
		"from": "0x98265d92b016df8758f361fb8d2f9a813c82494a",
		"gasUsed": "0x1b889",
		"logs": [
			{
				"address": "0xe5caef4af8780e59df925470b050fb23c43ca68c",
				"blockHash": "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
				"blockNumber": "0xacc290",
				"data": "0x0000000000000000000000004c5f0f90a2d4b518afba11e22ac9b8f6b031d2040000000000000000000000004c5f0f90a2d4b518afba11e22ac9b8f6b031d2040000000000000000000000000000000000000000000000000000000000000005",
				"logIndex": "0x120",
				"removed": false,
				"topics": [
					"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
					"0x00000000000000000000000098265d92b016df8758f361fb8d2f9a813c82494a",
					"0x00000000000000000000000092330d8818e8a3b50f027c819fa46031ffba2c8c"
				],
				"transactionHash": "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
				"transactionIndex": "0x0"
			}
		],
		"logsBloom": "0x
		"status": "0x1",
		"to": "0x7a250d5630b4cf539739df2c5dacb4c659f2488d",
		"transactionHash": "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
		"transactionIndex": "0x0",
		"type": "0x0"
	}`)

	fixtureOrphanedReceipt = []byte(`
	{
		"blockHash": "0xb91edf64c8c47f199398050a1d18efc3b00725d866b875e340198f563a000575",
		"blockNumber": "0xacc290",
		"contractAddress": null,
		"cumulativeGasUsed": "0xbca58c",
		"from": "0x98265d92b016df8758f361fb8d2f9a813c82494a",
		"gasUsed": "0x1b889",
		"logs": [
			{
				"address": "0xe5caef4af8780e59df925470b050fb23c43ca68c",
				"blockHash": "0xb91edf64c8c47f199398050a1d18efc3b00725d866b875e340198f563a000575",
				"blockNumber": "0xacc290",
				"data": "0x0000000000000000000000000000000000000000000000000000000715d435c0",
				"logIndex": "0x119",
				"removed": false,
				"topics": [
					"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
					"0x00000000000000000000000098265d92b016df8758f361fb8d2f9a813c82494a",
					"0x00000000000000000000000092330d8818e8a3b50f027c819fa46031ffba2c8c"
				],
				"transactionHash": "0xf5365847bff6e48d0c6bc23eee276343d2987efd9876c3c1bf597225e3d69991",
				"transactionIndex": "0xd6"
			},
			{
				"address": "0xe5caef4af8780e59df925470b050fb23c43ca68c",
				"blockHash": "0xb91edf64c8c47f199398050a1d18efc3b00725d866b875e340198f563a000575",
				"blockNumber": "0xacc290",
				"data": "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000e029ae811464737200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000033b2e3cbfa3d80192847e1a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
				"logIndex": "0x120",
				"removed": false,
				"topics": [
				  "0x29ae811400000000000000000000000000000000000000000000000000000000",
				  "0x000000000000000000000000be8e3e3618f7474f8cb1d074a26affef007e98fb",
				  "0x6473720000000000000000000000000000000000000000000000000000000000",
				  "0x0000000000000000000000000000000000000000033b2e3cbfa3d80192847e1a"
				],
				"transactionHash": "0xf5365847bff6e48d0c6bc23eee276343d2987efd9876c3c1bf597225e3d69991",
				"transactionIndex": "0xd6"
			},
			{
				"address": "0xad72c532d9fe5c51292d950dd0a160c76ff3fa30",
				"blockHash": "0xb91edf64c8c47f199398050a1d18efc3b00725d866b875e340198f563a000575",
				"blockNumber": "0xacc290",
				"data": "0x00000000000000000000000000000000000000000000000000000000000000c8",
				"logIndex": "0x121",
				"removed": false,
				"topics": [
					"0xc1405953cccdad6b442e266c84d66ad671e2534c6584f8e6ef92802f7ad294d5",
					"0x000000000000000000000000be8e3e3618f7474f8cb1d074a26affef007e98fb",
					"0x0000000000000000000000000000000000000000033b2e3cbfa3d80192847e1a",
					"0x0000000000000000000000001fe16de955718cfab7a44605458ab023838c2793"
				],
				"transactionHash": "0xf5365847bff6e48d0c6bc23eee276343d2987efd9876c3c1bf597225e3d69991",
				"transactionIndex": "0xd6"
			}
		],
		"logsBloom": "0x
		"status": "0x1",
		"to": "0x7a250d5630b4cf539739df2c5dacb4c659f2488d",
		"transactionHash": "0xf5365847bff6e48d0c6bc23eee276343d2987efd9876c3c1bf597225e3d69991",
		"transactionIndex": "0x1",
		"type": "0x0"
	}`)

	fixtureReceiptPostLondon = []byte(`
	{
		"blockHash": "0x75ba53b1d5e77b849c669880a4c1bb758a3ffefe9410c6bc1c61306312c9ee61",
		"blockNumber": "0xc5d824",
		"contractAddress": null,
		"cumulativeGasUsed": "0x1db62",
		"from": "0x94dd7d29aecc6cfba801fd95becc2f9808bcdf7d",
		"gasUsed": "0xb795",
		"effectiveGasPrice": "0x1353cd9c22",
		"logs": [
		{
		  "address": "0x8b0e42f366ba502d787bb134478adfae966c8798",
		  "blockHash": "0x75ba53b1d5e77b849c669880a4c1bb758a3ffefe9410c6bc1c61306312c9ee61",
		  "blockNumber": "0xc5d824",
		  "data": "0x0000000000000000000000000000000000000000000000000000000000000000",
		  "logIndex": "0x2",
		  "removed": false,
		  "topics": [
			"0xf382320ca3328eca73b923efa9b8df7bd6ea405d6d4fa855a00db3ee406361c9"
		  ],
		  "transactionHash": "0x256697702d7a60ef603e5261d6bc8f1916de05bebafa79e8519e2e360d02bfa2",
		  "transactionIndex": "0x177",
		  "transactionLogIndex": "0x0"
		}
		],
		"logsBloom": "0x
		"status": "0x1",
		"to": "0x8b0e42f366ba502d787bb134478adfae966c8798",
		"transactionHash": "0x256697702d7a60ef603e5261d6bc8f1916de05bebafa79e8519e2e360d02bfa2",
		"transactionIndex": "0x177",
		"type": "0x2"
	}`)

	fixtureReceiptPostLondon_Legacy = []byte(`
	{
		"blockHash": "0x6d39744339b781ecaa5a86732c8db2b81a24ddb2f0b74f0e08e39ccab765abdb",
		"blockNumber": "0xce19cf",
		"contractAddress": null,
		"cumulativeGasUsed": "0x1db62",
		"from": "0x94dd7d29aecc6cfba801fd95becc2f9808bcdf7d",
		"gasUsed": "0xb795",
		"effectiveGasPrice": "0x2dc3b2e7ae",
		"logs": [
		{
		  "address": "0x8b0e42f366ba502d787bb134478adfae966c8798",
		  "blockHash": "0x6d39744339b781ecaa5a86732c8db2b81a24ddb2f0b74f0e08e39ccab765abdb",
		  "blockNumber": "0xce19cf",
		  "data": "0x0000000000000000000000000000000000000000000000000000000000000000",
		  "logIndex": "0x2",
		  "removed": false,
		  "topics": [
			"0xf382320ca3328eca73b923efa9b8df7bd6ea405d6d4fa855a00db3ee406361c9"
		  ],
		  "transactionHash": "0x389fc3e9b76a2a873f3bd6068286cc0f60b4a39791d9c55a36f91887d5b69106",
		  "transactionIndex": "0xb3",
		  "transactionLogIndex": "0x0"
		}
		],
		"logsBloom": "0x0",
		"status": "0x1",
		"to": "0x8b0e42f366ba502d787bb134478adfae966c8798",
		"transactionHash": "0x389fc3e9b76a2a873f3bd6068286cc0f60b4a39791d9c55a36f91887d5b69106",
		"transactionIndex": "0xb3",
		"type": "0x0"
	}`)

	fixtureReceiptWithoutStatus = []byte(`
	{
		"blockHash": "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
		"blockNumber": "0xacc290",
		"contractAddress": null,
		"cumulativeGasUsed": "0xbca58c",
		"from": "0x98265d92b016df8758f361fb8d2f9a813c82494a",
		"gasUsed": "0x1b889",
		"logsBloom": "0x
		"to": "0x7a250d5630b4cf539739df2c5dacb4c659f2488d",
		"transactionHash": "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
		"transactionIndex": "0x0",
		"type": "0x0"
	}`)

	fixtureTransactionTraceWithGasAsNumber = []byte(`
    {
         "gas": 0,
         "failed": false,
         "returnValue": "",
         "structLogs": []
    }`)

	fixtureNestedTraces = []byte(`
	{
		"type": "CALL",
		"from": "0x4823cc90c145fd6a16ab7668043dbba5ce79cdfc",
		"to": "0xdac17f958d2ee523a2206206994597c13d831ec7",
		"value": "0x0",
		"gas": "0x10b1c",
		"gasUsed": "0x4c91",
		"input": "0xa9059cbb00000000000000000000000022852cdfdda5eb9b0e25d6581bdb82a156ac4c400000000000000000000000000000000000000000000000000000000162598040",
		"output": "0x",
		"time": "41.567024ms",
		"calls": [
			{
				"from": "0x61c86828fd30ca479c51413abc03f0f8dcec2120",
				"gas": "0x7207e",
				"gasUsed": "0x2fd4",
				"input": "0x70a0823100000000000000000000000061c86828fd30ca479c51413abc03f0f8dcec2120",
				"output": "0x00000000000000000000000000000000000000000000000b94174e1c4d4a9288",
				"to": "0xba630d3ba20502ba07975b15c719beecc8e4ebb0",
				"type": "CALL",
				"value": "0x1"
			},
			{
			    "type": "CALL",
			    "from": "0x7be8076f4ea4a4ad08075c2508e481d6c946d12b",
			    "to": "0x017a09f0fa471a4e4eb857070938b3684ac43f47",
			    "value": "0x0",
			    "gas": "0x90477",
			    "gasUsed": "0x83854",
			    "input": "0x1",
			    "output": "0x0000000000000000000000000000000000000000000000000000000000000001",
			    "calls": [
					{
						"type": "DELEGATECALL",
						"from": "0x017a09f0fa471a4e4eb857070938b3684ac43f47",
						"to": "0xf9e266af4bca5890e2781812cc6a6e89495a79f2",
						"value": "0x0",
						"gas": "0x85899",
						"gasUsed": "0x80594",
						"input": "0x1b",
						"output": "0x"
					}
				]
			},
			{
                "type": "SELFDESTRUCT",
                "from": "0x7be8076f4ea4a4ad08075c2508e481d6c946d12b",
                "to": "0xa5409ec958c83c3f309868babaca7c86dcb077c1",
                "value": "0x0",
                "gas": "0x140822",
                "gasUsed": "0x2613",
                "input": "0x97204d8e",
                "output": "0x000000000000000000000000f9e266af4bca5890e2781812cc6a6e89495a79f2"
			}
		]
	}`)

	fixtureNestedTracesWithParentError = []byte(`{
		"error": "execution reverted",
		"type": "CALL",
		"from": "0x4823cc90c145fd6a16ab7668043dbba5ce79cdfc",
		"to": "0xdac17f958d2ee523a2206206994597c13d831ec7",
		"value": "0x0",
		"gas": "0x10b1c",
		"gasUsed": "0x4c91",
		"input": "0xa9059cbb00000000000000000000000022852cdfdda5eb9b0e25d6581bdb82a156ac4c400000000000000000000000000000000000000000000000000000000162598040",
		"output": "0x",
		"time": "41.567024ms",
		"calls": [
			{
				"from": "0x61c86828fd30ca479c51413abc03f0f8dcec2120",
				"gas": "0x7207e",
				"gasUsed": "0x2fd4",
				"input": "0x70a0823100000000000000000000000061c86828fd30ca479c51413abc03f0f8dcec2120",
				"output": "0x00000000000000000000000000000000000000000000000b94174e1c4d4a9288",
				"to": "0xba630d3ba20502ba07975b15c719beecc8e4ebb0",
				"type": "CALL",
				"value": "0x1"
			},
			{
				"error": "error",
                "type": "STATICCALL",
                "from": "0x7be8076f4ea4a4ad08075c2508e481d6c946d12b",
                "to": "0xa5409ec958c83c3f309868babaca7c86dcb077c1",
                "value": "0x0",
                "gas": "0x140822",
                "gasUsed": "0x2613",
                "input": "0x97204d8e",
                "output": "0x000000000000000000000000f9e266af4bca5890e2781812cc6a6e89495a79f2"
			}
		]
	}`)

	fixtureTracesPostLondon = []byte(`
	{
		"type": "CALL",
		"from": "0x94dd7d29aecc6cfba801fd95becc2f9808bcdf7d",
		"to": "0x8b0e42f366ba502d787bb134478adfae966c8798",
		"value": "0x0",
		"gas": "0xdacf",
		"gasUsed": "0x75a5",
		"input": "0x2e1a7d4d00000000000000000000000000000000000000000000000014d1120d7b160000",
		"output": "0x",
		"time": "1.26343ms",
		"calls": []
	}`)

	fixtureTracesWithError = []byte(`{
		"error": "execution reverted",
		"type": "CALL",
		"from": "0x4823cc90c145fd6a16ab7668043dbba5ce79cdfc",
		"to": "0xdac17f958d2ee523a2206206994597c13d831ec7",
		"value": "0x0",
		"gas": "0x10b1c",
		"gasUsed": "0x4c91",
		"input": "0xa9059cbb00000000000000000000000022852cdfdda5eb9b0e25d6581bdb82a156ac4c400000000000000000000000000000000000000000000000000000000162598040",
		"output": "0x",
		"time": "41.567024ms",
		"calls": [
			{
				"from": "0x61c86828fd30ca479c51413abc03f0f8dcec2120",
				"gas": "0x7207e",
				"gasUsed": "0x2fd4",
				"input": "0x70a0823100000000000000000000000061c86828fd30ca479c51413abc03f0f8dcec2120",
				"output": "0x00000000000000000000000000000000000000000000000b94174e1c4d4a9288",
				"to": "0xba630d3ba20502ba07975b15c719beecc8e4ebb0",
				"type": "CALL",
				"value": "0x1"
			}
		]
	}`)

	fixtureTracesOptimism = []byte(`{
		"type":"CALL",
		"from":"0x70b17c0fe982ab4a7ac17a4c25485643151a1f2d",
		"to":"0x8ce8c13d816fe6daf12d6fd9e4952e1fc88850af",
		"value":"0x0",
		"gas":"0x74d84",
		"gasUsed":"0x2c4a1",
		"input":"0x202ee0ed000000000000000000000000000000000000000000000000000000000001421800000000000000000000000000000000000000000000000000000000d0e3ebf0",
		"output":"0x",
		"time":"18.589746ms",
		"calls":[
	   		{
		  		"type":"DELEGATECALL",
		  		"from":"0x8ce8c13d816fe6daf12d6fd9e4952e1fc88850af",
		  		"to":"0x971dc14055cbc313a536f9ffd048e07530bd75df",
		  		"gas":"0x71b1d",
		  		"gasUsed":"0x2aef3",
		  		"input":"0x202ee0ed000000000000000000000000000000000000000000000000000000000001421800000000000000000000000000000000000000000000000000000000d0e3ebf0",
		  		"output":"0x"
	   		}
		]
 	}`)

	fixtureTracesArbitrum = []byte(`{
   		"beforeEVMTransfers":[
      		{
        		 "purpose":"feePayment",
         		"from":"0x23bE9230B9F470B94A0a5952DD40f9Ef6B67344c",
         		"to":null,
         		"value":"0x34c9c51bbc00"
      		}
   		],
   		"afterEVMTransfers":[
     		 {
         		"purpose":"gasRefund",
         		"from":null,
        		 "to":"0x23bE9230B9F470B94A0a5952DD40f9Ef6B67344c",
         		"value":"0xcb7761a8d00"
      		},
      		{
        		 "purpose":"feeCollection",
         		"from":null,
         		"to":"0xD345e41aE2cb00311956aA7109fC801Ae8c81a52",
         		"value":"0x46f77ee8000"
      		},
      		{
         		"purpose":"feeCollection",
         		"from":null,
         		"to":"0xa4B00000000000000000000000000000000000F6",
         		"value":"0x23a2d712af00"
      		}
   		],
   		"type":"CALL",
   		"from":"0x23be9230b9f470b94a0a5952dd40f9ef6b67344c",
   		"to":"0x09f77e8a13de9a35a7231028187e9fd5db8a2acb",
   		"value":"0x0",
   		"gas":"0x28aad",
   		"gasUsed":"0x7370",
   		"input":"0xa397ea540000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000155ee13fb4b72a6cf027b45bb6c000000000000000000000000000000000000004b0bfb49c90c0b0f999e500000000000000000000000000000000000000000000000000000000000000000000000",
   		"output":"0x"
	}`)

	fixtureInvalidHeader = []byte(`
	{
		"difficulty": "0xc7ad271a33ba1",
		"extraData": "0x7575706f6f6c2e636e2d3333",
		"gasLimit": "0xbe2d22",
		"gasUsed": "0xbe252d",
		"logsBloom": "0xfdf668a334802d0164a3e3cab8f79d6bab99b9800f565fa9dea9138b2192371768c4d8f83681bb0647e07d000807499cca14bcd05d1202c180e0e2a0f2777225f4990de285aa8086d82acd2c5653c46fe8943c0e50e6521a879a5144c14f57125c064c122e730c959509992ac09588e9c648da88a6eac64805fe9132d280772abd048d16428227c6c0d8c57a460c8281e0203f8791e402cdba21c5ea0430a282a2b3a7e593a2392a2523b7961b2fd0a06752631744001311b4a9ad111d20ec7d4c2d4e02892ed5023b12126442a219ac16400e40051900d250a3b7e6adc2e13053393130810561402181040301ca492fdb24320064c43a50c42c31ea259f4820",
		"miner": "0xd224ca0c819e8e97ba0136b3b95ceff503b79f53",
		"mixHash": "0x7cfd7be6442751ccf7019016fc6e0fcebe2734fd3456e7a2b65fb48e3723a9f9",
		"nonce": "0xc83f6d8ab7e58888",
		"number": "0xacc290",
		"parentHash": "0xb91edf64c8c47f199398050a1d18efc3b00725d866b875e340198f563a000575",
		"receiptsRoot": "0x18b4e30527b17d9e1e8f0dc129c828a28a2a32b43a651b4f9302a2686f7a5963",
		"sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
		"size": "0xb8ec",
		"stateRoot": "0xf7135b656a6513846894dad825c7a2403ee2f93ea9e3fe0e8cd846ba0df2fd7d",
		"totalDifficulty": "0x40232fbfb0a219668dc"
	}`)

	fixtureHeaderOfBlockZero = []byte(`{
		"difficulty": "0xc7ad271a33ba1",
		"extraData": "0x7575706f6f6c2e636e2d3333",
		"gasLimit": "0xbe2d22",
		"gasUsed": "0xbe252d",
		"hash": "0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3",
		"logsBloom": "0xfdf668a334802d0164a3e3cab8f79d6bab99b9800f565fa9dea9138b2192371768c4d8f83681bb0647e07d000807499cca14bcd05d1202c180e0e2a0f2777225f4990de285aa8086d82acd2c5653c46fe8943c0e50e6521a879a5144c14f57125c064c122e730c959509992ac09588e9c648da88a6eac64805fe9132d280772abd048d16428227c6c0d8c57a460c8281e0203f8791e402cdba21c5ea0430a282a2b3a7e593a2392a2523b7961b2fd0a06752631744001311b4a9ad111d20ec7d4c2d4e02892ed5023b12126442a219ac16400e40051900d250a3b7e6adc2e13053393130810561402181040301ca492fdb24320064c43a50c42c31ea259f4820",
		"miner": "0xd224ca0c819e8e97ba0136b3b95ceff503b79f53",
		"mixHash": "0x7cfd7be6442751ccf7019016fc6e0fcebe2734fd3456e7a2b65fb48e3723a9f9",
		"nonce": "0xc83f6d8ab7e58888",
		"parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
		"receiptsRoot": "0x18b4e30527b17d9e1e8f0dc129c828a28a2a32b43a651b4f9302a2686f7a5963",
		"sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
		"size": "0xb8ec",
		"stateRoot": "0xf7135b656a6513846894dad825c7a2403ee2f93ea9e3fe0e8cd846ba0df2fd7d",
		"timestamp": "",
		"totalDifficulty": "0x40232fbfb0a219668dc"
	}`)

	fixtureHeaderOfLargeGasPrice = []byte(`
	{
		"difficulty": "0xc7ad271a33ba1",
		"extraData": "0x7575706f6f6c2e636e2d3333",
		"gasLimit": "0xbe2d22",
		"gasUsed": "0xbe252d",
		"hash": "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
		"logsBloom": "0xfdf668a334802d0164a3e3cab8f79d6bab99b9800f565fa9dea9138b2192371768c4d8f83681bb0647e07d000807499cca14bcd05d1202c180e0e2a0f2777225f4990de285aa8086d82acd2c5653c46fe8943c0e50e6521a879a5144c14f57125c064c122e730c959509992ac09588e9c648da88a6eac64805fe9132d280772abd048d16428227c6c0d8c57a460c8281e0203f8791e402cdba21c5ea0430a282a2b3a7e593a2392a2523b7961b2fd0a06752631744001311b4a9ad111d20ec7d4c2d4e02892ed5023b12126442a219ac16400e40051900d250a3b7e6adc2e13053393130810561402181040301ca492fdb24320064c43a50c42c31ea259f4820",
		"miner": "0xd224ca0c819e8e97ba0136b3b95ceff503b79f53",
		"mixHash": "0x7cfd7be6442751ccf7019016fc6e0fcebe2734fd3456e7a2b65fb48e3723a9f9",
		"nonce": "0xc83f6d8ab7e58888",
		"number": "0xacc290",
		"parentHash": "0xb91edf64c8c47f199398050a1d18efc3b00725d866b875e340198f563a000575",
		"receiptsRoot": "0x18b4e30527b17d9e1e8f0dc129c828a28a2a32b43a651b4f9302a2686f7a5963",
		"sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
		"size": "0xb8ec",
		"stateRoot": "0xf7135b656a6513846894dad825c7a2403ee2f93ea9e3fe0e8cd846ba0df2fd7d",
		"timestamp": "0x5fbd2fb9",
		"totalDifficulty": "0x40232fbfb0a219668dc",
		"transactions": [
			{
				"blockHash": "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
				"blockNumber": "0xacc290",
				"from": "0x4823cc90c145fd6a16ab7668043dbba5ce79cdfc",
				"gas": "0x15f90",
				"gasPrice": "0x20000000000000000",
				"hash": "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
				"input": "0xa9059cbb00000000000000000000000022852cdfdda5eb9b0e25d6581bdb82a156ac4c400000000000000000000000000000000000000000000000000000000162598040",
				"nonce": "0x1f0",
				"r": "0x5f2ba54bcb85a3a3de43dd80ab4905247c8e898ec892b83e133fc9edbb3a9586",
				"s": "0x6de1025cf859b6bc635fae85e6c460e4ccb6f05a74fa42164f14a409fb28a957",
				"to": "0xdac17f958d2ee523a2206206994597c13d831ec7",
				"transactionIndex": "0x0",
				"type": "0x0",
				"v": "0x26",
				"value": "0xa"
			}
		],
        "transactionsRoot": "0x8fcfe4d75266508496020675b9c3acfdf0074bf2d177c6366b40f669306310db"
	}`)

	fixtureHeaderAfterMerge = []byte(`{
	  "baseFeePerGas": "0x102cd42874",
	  "difficulty": "0x0",
	  "extraData": "0x",
	  "gasLimit": "0x1c9c380",
	  "gasUsed": "0x1c9bba0",
	  "hash": "0x9797d65f12465ada68cdacf7e6b7c22fe43a4d09671187c1cb819e9b0e0dedf6",
	  "logsBloom": "0x10000905a11025401e40204209111c0d8401a63a20024102066201864f8000081001004812102b4200400a0080001710666011200f48a08824201c0092a3e170d03e1800d65080186d21000908a00621100a260408d06384008711449148111002880a00e2002a1089491810a00249d80100113c04a506ccb69003b1a00c00c0009c8520012632848b090500012000889816342101cdc14d0512278204308004424061ca18107c08000882e084606902218042290a11122a58688e50184a0a0169820b436048301005180243488a040480249060802800582004451b1404212a141930280214d8140421110024a14e4816048703025147c48208499420a10328",
	  "miner": "0xe688b84b23f322a994a53dbf8e15fa82cdb71127",
	  "mixHash": "0x314347f2c9e35686c6e62dc10c232b911a34b9f25db0f925a1b2207014fb67c5",
	  "nonce": "0x0000000000000000",
	  "number": "0xed14f5",
	  "parentHash": "0x98c735877f2f30bad54fc46ba8bcd93a54da32a60b2905cb23ad6c7a70ebaa40",
	  "receiptsRoot": "0x20cebf97b0024253e3e959ed681c5c659d44a13e94eef442a23667efcba0ed67",
	  "sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
	  "size": "0xab08",
	  "stateRoot": "0x2c1728ed8e5d59c813fae703638b359fd13f0c58270f8f179f82478e72097684",
	  "timestamp": "0x6322c997",
	  "totalDifficulty": "0xc70d815d562d3cfa955",
	  "transactions": [{
			"blockHash": "0x9797d65f12465ada68cdacf7e6b7c22fe43a4d09671187c1cb819e9b0e0dedf6",
			"blockNumber": "0xed14f5",
			"from": "0xe3af47627add841122439d0c93264fc541ea9a13",
			"gas": "0x5208",
			"gasPrice": "0xe9103fda00",
			"hash": "0x01fe380329722ca826d409be5ef4e959afa24f0a998517048b42cde4883d757a",
			"input": "0x",
			"nonce": "0x5e8",
			"to": "0xe3af47627add841122439d0c93264fc541ea9a13",
			"transactionIndex": "0x0",
			"value": "0x0",
			"type": "0x0",
			"chainId": "0x1",
			"v": "0x25",
			"r": "0x589e176d6ccf9bae25cb7cbbc7c5311feb717bd6d05f61599195f1307f2bb4d9",
			"s": "0x728d137a596df311e8ecc96a0181d9830c95479187424d389b678b8b28ad9159"
		}]
	}`)

	fixtureReceiptAfterMerge = []byte(`{
		"blockHash": "0x9797d65f12465ada68cdacf7e6b7c22fe43a4d09671187c1cb819e9b0e0dedf6",
		"blockNumber": "0xed14f5",
		"contractAddress": null,
		"cumulativeGasUsed": "0x5208",
		"effectiveGasPrice": "0xe9103fda00",
		"from": "0xe3af47627add841122439d0c93264fc541ea9a13",
		"gasUsed": "0x5208",
		"logs":[],
		"logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"status": "0x1",
		"to": "0xe3af47627add841122439d0c93264fc541ea9a13",
		"transactionHash": "0x01fe380329722ca826d409be5ef4e959afa24f0a998517048b42cde4883d757a",
		"transactionIndex": "0x0",
		"type": "0x0"
	}`)

	fixtureTracesAfterMerge = []byte(`{
		"type": "CALL",
		"from": "0xe3af47627add841122439d0c93264fc541ea9a13",
		"to": "0xe3af47627add841122439d0c93264fc541ea9a13",
		"value": "0x0",
		"gas": "0x0",
		"gasUsed": "0x0",
		"input": "0x",
		"output": "0x"
	}`)

	fixtureHeaderBeforeMergeGoerli = []byte(`{
		"baseFeePerGas": "0x8",
		"difficulty": "0x1",
		"extraData": "0xd883010a13846765746888676f312e31372e32856c696e7578000000000000007f6e4d1544d7c6b375366ec6369f561834d7f7debe7471577b3dd94aed5f479802e556a2960a55ddcd4cdd96f277aaaa3fabf8c7bee9c7fe1596cb6c209ff77900",
		"gasLimit": "0x1c950f4",
		"gasUsed": "0x11a295a",
		"hash": "0x4e696218c1242173a429fa1822fe5569a839b3d7232b0e22aedc3629724bb81e",
		"logsBloom": "0x00100001020008000100000200005800100000000401000010c0080050000a00000000002000600480040800011000000000000000000200000000008000000400100000000000000000002800000000000184000008000000203000000000200100180102000008000608000000080000000000000000000020001000023040100000018000020000000000000000424082000010100010400000000000000a9000010000000000000000000000000010200000000000001000000020200000200000021000000000000000008000000024000000020080000840008040a1038000000048008000000000200000000000000420000000000000a10000400080",
		"miner": "0x0000000000000000000000000000000000000000",
		"mixHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
		"nonce": "0x0000000000000000",
		"number": "0x6ec6ca",
		"parentHash": "0x15d9a21992cace9a18810b456533c05e653213e6efc1faec3ee32a039f640c6f",
		"receiptsRoot": "0x7571661965428bb5306d5bdb09869e7818d2ae84714114010694943f844f138b",
		"sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
		"size": "0x1f77b",
		"stateRoot": "0xf0f5805bd32aaf5c6d4f164f40973cb6b922ca7fe9495577aca0bf5937b76479",
		"timestamp": "0x62d80868",
		"totalDifficulty": "0xa2037b",
		"transactions": [{
			"blockHash": "0x4e696218c1242173a429fa1822fe5569a839b3d7232b0e22aedc3629724bb81e",
			"blockNumber": "0x6ec6ca",
			"from": "0xd05526a73bf45dadf7f9a99dcceac23c2d43c6c7",
			"gas": "0x7a120",
			"gasPrice": "0xac30f244",
			"hash": "0x51732e74481d8ce17111ebb506e229ce25556b9d41650694d00d5e7142ad870c",
			"input": "0x67a5cd0600000000000000000000000051a9a3df0b784eb45f32de3bd266444b0dcbf062",
			"nonce": "0x2b166",
			"to": "0xf5de760f2e916647fd766b4ad9e85ff943ce3a2b",
			"transactionIndex": "0x0",
			"value": "0x0",
			"type": "0x0",
			"v": "0x2e",
			"r": "0x5cfc985d46cddada136b8d8b5fad9e8bc4a0410b954d96e59a9f97d6a5f5a574",
			"s": "0x175193493e6b337551954ec6248ec66b3629d0a70b6287b9bbe59b10540d44eb"
		}]
	}`)

	fixtureReceiptBeforeMergeGoerli = []byte(`{
		"blockHash": "0x4e696218c1242173a429fa1822fe5569a839b3d7232b0e22aedc3629724bb81e",
		"blockNumber": "0x6ec6ca",
		"contractAddress": null,
		"cumulativeGasUsed": "0x8b4e",
		"effectiveGasPrice": "0xac30f244",
		"from": "0xd05526a73bf45dadf7f9a99dcceac23c2d43c6c7",
		"gasUsed": "0x8b4e",
		"logs": [],
		"logsBloom": "0x
		"status": "0x0",
		"to": "0xf5de760f2e916647fd766b4ad9e85ff943ce3a2b",
		"transactionHash": "0x51732e74481d8ce17111ebb506e229ce25556b9d41650694d00d5e7142ad870c",
		"transactionIndex": "0x0",
		"type": "0x0"
	}`)

	fixtureTracesBeforeMergeGoerli = []byte(`{
		"type": "CALL",
		"from": "0xd05526a73bf45dadf7f9a99dcceac23c2d43c6c7",
		"to": "0xf5de760f2e916647fd766b4ad9e85ff943ce3a2b",
		"value": "0x0",
		"gas": "0x74d68",
		"gasUsed": "0x3796",
		"input": "0x67a5cd0600000000000000000000000051a9a3df0b784eb45f32de3bd266444b0dcbf062",
		"output": "0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000134661696c6564206472697070696e672045544800000000000000000000000000",
		"error": "execution reverted"
	}`)

	fixtureHeaderAfterMergeGoerli = []byte(`{
		"baseFeePerGas": "0xd",
		"difficulty": "0x0",
		"extraData": "0x",
		"gasLimit": "0x1c9c380",
		"gasUsed": "0x71198f",
		"hash": "0x0bc53d91a95fc38da860d9d258d86191f9b482931aec031164642b90b5b14547",
		"logsBloom": "0x45e00000094048016448801283300100609ca4442022420200c10108d800841640300cc23300260040200200020000000003a028021530c0026006842036205b04004019843092894800101d00082a200003b200864498406246480080900100000050050a0040820000200001800840a000a00040442c8004828010202800501c0105200c40c002c05c010120128a12042092011d0e0008040100c1500008044200a90a188204481ac0e502050801003046200002ac02088087420c406061a4403040660000250900860800008041044580224111022010006111024800e442001018020004060010200020112488c00860102000c020400040402400806a03",
		"miner": "0xf97e180c050e5ab072211ad2c213eb5aee4df134",
		"mixHash": "0x75d1def3b6f538498bd0e65e59c0ae2ca66367fd76a9bcff5a501884f83a9c5c",
		"nonce": "0x0000000000000000",
		"number": "0x735aaa",
		"parentHash": "0x2bacc15a5b498bb5160c2291a158278ddd6ed842548266ebf7a1a6b30242edd6",
		"receiptsRoot": "0x1ba481da773e22bdbea35dbc564b97d150d118dc4314b4f5b42241df9b4e8872",
		"sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
		"size": "0x976a",
		"stateRoot": "0xa63ddf1a405a5ebd5cf194b16a8342c5744e37aca9602b5e7d1fc7bd58c5ff52",
		"timestamp": "0x631b4ca4",
		"totalDifficulty": "0xa4a470",
		"transactions": [{
			"blockHash": "0x0bc53d91a95fc38da860d9d258d86191f9b482931aec031164642b90b5b14547",
			"blockNumber": "0x735aaa",
			"from": "0x9c3f1f7507305e10370d885e73a1b6a7bf9b932f",
			"gas": "0x5208",
			"gasPrice": "0xb2d05e14",
			"hash": "0xce146abb8776ec7f2a8fa10dc83e57d9ff0e7226cbce90f7065d47a316b99fd9",
			"input": "0x",
			"nonce": "0x31",
			"to": "0xa4fdcf1d9e84fbd97e7d71316805be7a7f3b196d",
			"transactionIndex": "0x0",
			"value": "0x9184e72a000",
			"type": "0x0",
			"chainId": "0x5",
			"v": "0x2d",
			"r": "0xed257c41cfef9f8ecff44e6c68ca450f3e2cc15a4ff05cc734f70e30761e64b",
			"s": "0xd4444777b0a2ef1db3fde4cb802e87d826976a641ba2f91339d2683f5e2757f"
		}]
	}`)

	fixtureReceiptAfterMergeGoerli = []byte(`{
		"blockHash": "0x0bc53d91a95fc38da860d9d258d86191f9b482931aec031164642b90b5b14547",
		"blockNumber": "0x735aaa",
		"contractAddress": null,
		"cumulativeGasUsed": "0x5208",
		"effectiveGasPrice": "0xb2d05e14",
		"from": "0x9c3f1f7507305e10370d885e73a1b6a7bf9b932f",
		"gasUsed": "0x5208",
		"logs": [],
		"logsBloom": "0x
		"status": "0x1",
		"to": "0xa4fdcf1d9e84fbd97e7d71316805be7a7f3b196d",
		"transactionHash": "0xce146abb8776ec7f2a8fa10dc83e57d9ff0e7226cbce90f7065d47a316b99fd9",
		"transactionIndex": "0x0",
		"type": "0x0"
	}`)

	fixtureTracesAfterMergeGoerli = []byte(`{
		"type": "CALL",
		"from": "0x9c3f1f7507305e10370d885e73a1b6a7bf9b932f",
		"to": "0xa4fdcf1d9e84fbd97e7d71316805be7a7f3b196d",
		"value": "0x9184e72a000",
		"gas": "0x0",
		"gasUsed": "0x0",
		"input": "0x",
		"output": "0x"
	}`)
)

func TestMarshalEthereumHexString(t *testing.T) {
	require := testutil.Require(t)
	type Envelope struct {
		Hash EthereumHexString
	}

	envelope := Envelope{
		Hash: "0x123",
	}
	data, err := json.Marshal(envelope)
	require.NoError(err)
	require.Equal(`{"Hash":"0x123"}`, string(data))
}

func TestParseEthereumHexString(t *testing.T) {
	type Envelope struct {
		Hash EthereumHexString
	}

	tests := []struct {
		name     string
		expected string
		input    string
		err      bool
	}{
		{
			name:     "happy",
			expected: "0xf5365847bff6e48d0c6bc23eee276343d2987efd9876c3c1bf597225e3d69991",
			input:    "0xf5365847bff6e48d0c6bc23eee276343d2987efd9876c3c1bf597225e3d69991",
		},
		{
			name:     "upperCase",
			expected: "0xf5365847bff6e48d0c6bc23eee276343d2987efd9876c3c1bf597225e3d69991",
			input:    "0XF5365847BFF6E48D0C6BC23EEE276343D2987EFD9876C3C1BF597225E3D69991",
		},
		{
			name:     "mixedCase",
			expected: "0xf5365847bff6e48d0c6bc23eee276343d2987efd9876c3c1bf597225e3d69991",
			input:    "0xF5365847BFF6e48d0c6bc23eee276343d2987efd9876c3c1bf597225e3d69991",
		},
	}
	for _, test := range tests {
		t.Run(test.name, func(t *testing.T) {
			require := testutil.Require(t)

			data := fmt.Sprintf(`{"hash": "%v"}`, test.input)
			var envelope Envelope
			err := json.Unmarshal([]byte(data), &envelope)
			require.NoError(err)
			require.Equal(test.expected, envelope.Hash.Value())
		})
	}
}

func TestParseEthereumHexString_InvalidInput(t *testing.T) {
	require := testutil.Require(t)

	type Envelope struct {
		Hash EthereumHexString
	}

	data := `{"hash": true}`
	var envelope Envelope
	err := json.Unmarshal([]byte(data), &envelope)
	require.Error(err)
}

func TestMarshalEthereumQuantity(t *testing.T) {
	require := testutil.Require(t)
	type Envelope struct {
		Gas EthereumQuantity
	}

	envelope := Envelope{
		Gas: 0x123,
	}
	data, err := json.Marshal(envelope)
	require.NoError(err)
	require.Equal(`{"Gas":"0x123"}`, string(data))
}

func TestParseEthereumQuantity(t *testing.T) {
	type Envelope struct {
		Gas EthereumQuantity
	}

	tests := []struct {
		name     string
		expected uint64
		input    string
	}{
		{
			name:     "happy",
			expected: 0x1ed3,
			input:    "0x1ed3",
		},
		{
			name:     "upperCase",
			expected: 0x1ed3,
			input:    "0x1ED3",
		},
		{
			name:     "mixedCase",
			expected: 0x1ed3,
			input:    "0x1Ed3",
		},
		{
			name:     "empty",
			expected: 0,
			input:    "",
		},
		{
			name:     "zero",
			expected: 0,
			input:    "0x0",
		},
	}
	for _, test := range tests {
		t.Run(test.name, func(t *testing.T) {
			require := testutil.Require(t)

			data := fmt.Sprintf(`{"gas": "%v"}`, test.input)
			var envelope Envelope
			err := json.Unmarshal([]byte(data), &envelope)
			require.NoError(err)
			require.Equal(test.expected, envelope.Gas.Value())
		})
	}
}

func TestParseEthereumQuantity_InvalidInput(t *testing.T) {
	type Envelope struct {
		Gas EthereumQuantity
	}

	tests := []struct {
		name  string
		input string
	}{
		{
			name:  "without0x",
			input: `"1234"`,
		},
		{
			name:  "nan",
			input: `"0x12GF"`,
		},
		{
			name:  "negative",
			input: `"-0x1234"`,
		},
		{
			name:  "overflow",
			input: `"0x12345678123456789"`,
		},
	}
	for _, test := range tests {
		t.Run(test.name, func(t *testing.T) {
			require := testutil.Require(t)

			data := fmt.Sprintf(`{"gas": %v}`, test.input)
			var envelope Envelope
			err := json.Unmarshal([]byte(data), &envelope)
			require.Error(err, envelope.Gas.Value())
		})
	}
}

func TestMarshalEthereumBigQuantity(t *testing.T) {
	require := testutil.Require(t)
	type Envelope struct {
		Value EthereumBigQuantity
	}

	value := big.NewInt(0x123456)
	envelope := Envelope{
		Value: EthereumBigQuantity(*value),
	}
	data, err := json.Marshal(envelope)
	require.NoError(err)
	require.Equal(`{"Value":"0x123456"}`, string(data))
}

func TestParseEthereumBigQuantity(t *testing.T) {
	type Envelope struct {
		Value EthereumBigQuantity
	}

	tests := []struct {
		name     string
		expected string
		input    string
	}{
		{
			name:     "smallNumber",
			expected: "7891",
			input:    "0x1ed3",
		},
		{
			name:     "bigNumber",
			expected: "22007822882198265844645086",
			input:    "0x12345678123456789abcde",
		},
		{
			name:     "upperCase",
			expected: "22007822882198265844645086",
			input:    "0x12345678123456789ABCDE",
		},
		{
			name:     "empty",
			expected: "0",
			input:    "",
		},
		{
			name:     "zero",
			expected: "0",
			input:    "0x0",
		},
	}
	for _, test := range tests {
		t.Run(test.name, func(t *testing.T) {
			require := testutil.Require(t)

			data := fmt.Sprintf(`{"value": "%v"}`, test.input)
			var envelope Envelope
			err := json.Unmarshal([]byte(data), &envelope)
			require.NoError(err)
			require.Equal(test.expected, envelope.Value.Value())
		})
	}
}

func TestParseEthereumBigQuantity_InvalidInput(t *testing.T) {
	type Envelope struct {
		Gas EthereumBigQuantity
	}

	tests := []struct {
		name  string
		input string
	}{
		{
			name:  "without0x",
			input: `"1234"`,
		},
		{
			name:  "nan",
			input: `"0x12GF"`,
		},
		{
			name:  "negative",
			input: `"-0x1234"`,
		},
	}
	for _, test := range tests {
		t.Run(test.name, func(t *testing.T) {
			require := testutil.Require(t)

			data := fmt.Sprintf(`{"gas": %v}`, test.input)
			var envelope Envelope
			err := json.Unmarshal([]byte(data), &envelope)
			require.Error(err, envelope.Gas.Value())
		})
	}
}

func TestMarshalEthereumBigFloat(t *testing.T) {
	require := testutil.Require(t)
	type Envelope struct {
		L1FeeScalar EthereumBigFloat `json:"l1FeeScalar"`
	}

	envelope := Envelope{
		L1FeeScalar: EthereumBigFloat(*big.NewFloat(1.23)),
	}
	data, err := json.Marshal(envelope)
	require.NoError(err)
	require.Equal(`{"l1FeeScalar":"1.23"}`, string(data))
}

func TestParseEthereumBigFloat(t *testing.T) {
	type Envelope struct {
		L1FeeScalar EthereumBigFloat `json:"l1FeeScalar"`
	}

	tests := []struct {
		name          string
		expected      string
		input         string
		expectedError bool
	}{
		{
			name:     "happy",
			expected: "1.234",
			input:    "1.234",
		},
		{
			name:     "happyNegative",
			expected: "-1.234",
			input:    "-1.234",
		},
		{
			name:     "empty",
			expected: "0",
			input:    "",
		},
		{
			name:     "zero",
			expected: "0",
			input:    "0",
		},
		{
			name:     "losePrecision",
			expected: "1.23456789",
			input:    "1.2345678901234567890",
		},
		{
			name:          "notFloat",
			input:         `"abc"`,
			expectedError: true,
		},
	}
	for _, test := range tests {
		t.Run(test.name, func(t *testing.T) {
			require := testutil.Require(t)

			data := fmt.Sprintf(`{"l1FeeScalar": "%v"}`, test.input)
			var envelope Envelope
			err := json.Unmarshal([]byte(data), &envelope)
			if test.expectedError {
				require.Error(err, envelope.L1FeeScalar.Value())
			} else {
				require.NoError(err)
				require.Equal(test.expected, envelope.L1FeeScalar.Value())
			}
		})
	}
}

func TestParseEthereumBlockLit(t *testing.T) {
	tests := []struct {
		name            string
		hasTransactions bool
		input           string
	}{
		{
			name:            "transactionStruct",
			hasTransactions: true,
			input: `{
				"hash": "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
				"number": "0xacc290",
				"parentHash": "0xb91edf64c8c47f199398050a1d18efc3b00725d866b875e340198f563a000575",
				"timestamp": "0x5fbd2fb9",
				"transactions": [
					{
						"hash": "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
						"from": "0x4823cc90c145fd6a16ab7668043dbba5ce79cdfc"
					},
					{
						"hash": "0xf5365847bff6e48d0c6bc23eee276343d2987efd9876c3c1bf597225e3d69991",
						"from": "0x4823cc90c145fd6a16ab7668043dbba5ce79cdfc"
					}
				]
			}`,
		},
		{
			name:            "transactionHash",
			hasTransactions: true,
			input: `	{
				"hash": "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
				"number": "0xacc290",
				"parentHash": "0xb91edf64c8c47f199398050a1d18efc3b00725d866b875e340198f563a000575",
				"timestamp": "0x5fbd2fb9",
				"transactions": [
					"0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
					"0xf5365847bff6e48d0c6bc23eee276343d2987efd9876c3c1bf597225e3d69991"
				]
			}`,
		},
		{
			name:            "noTransaction",
			hasTransactions: false,
			input: `{
				"hash": "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
				"number": "0xacc290",
				"parentHash": "0xb91edf64c8c47f199398050a1d18efc3b00725d866b875e340198f563a000575",
				"timestamp": "0x5fbd2fb9"
			}`,
		},
		{
			name:            "emptyTransaction",
			hasTransactions: false,
			input: `{
				"hash": "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
				"number": "0xacc290",
				"parentHash": "0xb91edf64c8c47f199398050a1d18efc3b00725d866b875e340198f563a000575",
				"timestamp": "0x5fbd2fb9",
				"transactions": []
			}`,
		},
	}
	for _, test := range tests {
		t.Run(test.name, func(t *testing.T) {
			require := testutil.Require(t)

			var block EthereumBlockLit
			err := json.Unmarshal([]byte(test.input), &block)
			require.NoError(err)

			require.Equal("0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b", block.Hash.Value())
			require.Equal(uint64(0xacc290), block.Number.Value())
			require.Equal("0xb91edf64c8c47f199398050a1d18efc3b00725d866b875e340198f563a000575", block.ParentHash.Value())
			if test.hasTransactions {
				require.Equal(2, len(block.Transactions))
				require.Equal("0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b", block.Transactions[0].Hash.Value())
				require.Equal("0xf5365847bff6e48d0c6bc23eee276343d2987efd9876c3c1bf597225e3d69991", block.Transactions[1].Hash.Value())
			} else {
				require.Equal(0, len(block.Transactions))
			}
		})
	}
}

func TestParseEthereumHeaderWithdrawals(t *testing.T) {
	tests := []struct {
		name           string
		hasWithdrawals bool
		input          string
	}{
		{
			name:           "headerWithdrawals",
			hasWithdrawals: true,
			input: `{
				"hash": "0x38d41d2096a98d2e1afe42b0cb1eaad33dce00916cbd3443dcb05016f362fb45",
				"withdrawals": [
					{
						"index":"0x1c198",
						"validatorIndex":"0xc2d0",
						"address":"0xf97e180c050e5ab072211ad2c213eb5aee4df134",
						"amount":"0x2ebb0"
					},
					{
						"index":"0x1c199",
						"validatorIndex":"0xc2d1",
						"address":"0xf97e180c050e5ab072211ad2c213eb5aee4df134",
						"amount":"0x2ebb0"
					 }
				],
				"withdrawalsRoot": "0x3dedde670f7fb1c5825b11964c975e496f02e6b2f1917bd09465dba52eb31063"
			}`,
		},
		{
			name:           "noWithdrawals",
			hasWithdrawals: false,
			input: `{
				"hash": "0x38d41d2096a98d2e1afe42b0cb1eaad33dce00916cbd3443dcb05016f362fb45"
			}`,
		},
		{
			name:           "emptyWithdrawals",
			hasWithdrawals: false,
			input: `{
				"hash": "0x38d41d2096a98d2e1afe42b0cb1eaad33dce00916cbd3443dcb05016f362fb45",
				"withdrawals": [],
				"withdrawalsRoot": ""
			}`,
		},
	}
	for _, test := range tests {
		t.Run(test.name, func(t *testing.T) {
			require := testutil.Require(t)

			var block EthereumBlock
			err := json.Unmarshal([]byte(test.input), &block)
			require.NoError(err)

			require.Equal("0x38d41d2096a98d2e1afe42b0cb1eaad33dce00916cbd3443dcb05016f362fb45", block.Hash.Value())
			if test.hasWithdrawals {
				require.Equal("0x3dedde670f7fb1c5825b11964c975e496f02e6b2f1917bd09465dba52eb31063", block.WithdrawalsRoot.Value())
				require.Equal(2, len(block.Withdrawals))
			} else {
				require.Empty(block.WithdrawalsRoot)
				require.Equal(0, len(block.Withdrawals))
			}
		})
	}
}

func TestParseEthereumBlock(t *testing.T) {
	require := testutil.Require(t)

	fixtureReceipt := fixtures.MustReadFile("parser/ethereum/raw_block_receipt.json")
	fixtureTraces := fixtures.MustReadFile("parser/ethereum/raw_block_traces.json")
	block := &api.Block{
		Blockchain: common.Blockchain_BLOCKCHAIN_ETHEREUM,
		Network:    common.Network_NETWORK_ETHEREUM_MAINNET,
		Metadata:   ethereumMetadata,
		Blobdata: &api.Block_Ethereum{
			Ethereum: &api.EthereumBlobdata{
				Header:              fixtureHeader,
				TransactionReceipts: [][]byte{fixtureReceipt},
				TransactionTraces:   [][]byte{fixtureTraces},
			},
		},
	}

	expected := &api.EthereumBlock{
		Header: &api.EthereumHeader{
			Hash:             "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
			ParentHash:       "0xb91edf64c8c47f199398050a1d18efc3b00725d866b875e340198f563a000575",
			Number:           0xacc290,
			Timestamp:        &timestamp.Timestamp{Seconds: int64(1606234041)},
			Transactions:     []string{"0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8"},
			Nonce:            "0xc83f6d8ab7e58888",
			Sha3Uncles:       "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
			LogsBloom:        "0xfdf668a334802d0164a3e3cab8f79d6bab99b9800f565fa9dea9138b2192371768c4d8f83681bb0647e07d000807499cca14bcd05d1202c180e0e2a0f2777225f4990de285aa8086d82acd2c5653c46fe8943c0e50e6521a879a5144c14f57125c064c122e730c959509992ac09588e9c648da88a6eac64805fe9132d280772abd048d16428227c6c0d8c57a460c8281e0203f8791e402cdba21c5ea0430a282a2b3a7e593a2392a2523b7961b2fd0a06752631744001311b4a9ad111d20ec7d4c2d4e02892ed5023b12126442a219ac16400e40051900d250a3b7e6adc2e13053393130810561402181040301ca492fdb24320064c43a50c42c31ea259f4820",
			TransactionsRoot: "0x8fcfe4d75266508496020675b9c3acfdf0074bf2d177c6366b40f669306310db",
			StateRoot:        "0xf7135b656a6513846894dad825c7a2403ee2f93ea9e3fe0e8cd846ba0df2fd7d",
			ReceiptsRoot:     "0x18b4e30527b17d9e1e8f0dc129c828a28a2a32b43a651b4f9302a2686f7a5963",
			Miner:            "0xd224ca0c819e8e97ba0136b3b95ceff503b79f53",
			Difficulty:       0xc7ad271a33ba1,
			TotalDifficulty:  "18930033225567982479580",
			ExtraData:        "0x7575706f6f6c2e636e2d3333",
			Size:             0xb8ec,
			GasLimit:         0xbe2d22,
			GasUsed:          0xbe252d,
			Uncles:           []string{},
		},
		Transactions: []*api.EthereumTransaction{
			{
				BlockHash:      "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
				BlockNumber:    0xacc290,
				From:           "0x4823cc90c145fd6a16ab7668043dbba5ce79cdfc",
				Gas:            0x15f90,
				GasPrice:       0x22cee4f700,
				Hash:           "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
				Input:          "0xa9059cbb00000000000000000000000022852cdfdda5eb9b0e25d6581bdb82a156ac4c400000000000000000000000000000000000000000000000000000000162598040",
				Nonce:          0x1f0,
				To:             "0xdac17f958d2ee523a2206206994597c13d831ec7",
				Index:          0,
				Value:          "10",
				Type:           uint64(0),
				BlockTimestamp: &timestamp.Timestamp{Seconds: int64(1606234041)},
				OptionalTransactionAccessList: &api.EthereumTransaction_TransactionAccessList{
					TransactionAccessList: &api.EthereumTransactionAccessList{
						AccessList: []*api.EthereumTransactionAccess{
							{
								Address: "0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae",
								StorageKeys: []string{
									"0x0000000000000000000000000000000000000000000000000000000000000003",
									"0x0000000000000000000000000000000000000000000000000000000000000007",
								},
							},
							{
								Address:     "0xbb9bc244d798123fde783fcc1c72d3bb8c189413",
								StorageKeys: []string{},
							},
						},
					},
				},
				Receipt: &api.EthereumTransactionReceipt{
					TransactionHash:   "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
					TransactionIndex:  0x0,
					BlockHash:         "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
					BlockNumber:       0xacc290,
					From:              "0x98265d92b016df8758f361fb8d2f9a813c82494a",
					To:                "0x7a250d5630b4cf539739df2c5dacb4c659f2488d",
					CumulativeGasUsed: 0xbca58c,
					GasUsed:           0x1b889,
					EffectiveGasPrice: 0x22cee4f700,
					ContractAddress:   "",
					LogsBloom:         "0x
					Root:              "",
					OptionalStatus: &api.EthereumTransactionReceipt_Status{
						Status: 1,
					},
					Type: uint64(0),
					Logs: []*api.EthereumEventLog{
						{
							Removed:          false,
							LogIndex:         0x119,
							TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
							TransactionIndex: 0x0,
							BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
							BlockNumber:      0xacc290,
							Address:          "0xe5caef4af8780e59df925470b050fb23c43ca68c",
							Data:             "0x0000000000000000000000000000000000000000000000000000000715d435c0",
							Topics: []string{
								"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
								"0x00000000000000000000000098265d92b016df8758f361fb8d2f9a813c82494a",
								"0x00000000000000000000000092330d8818e8a3b50f027c819fa46031ffba2c8c",
							},
						},
						{
							Removed:          false,
							LogIndex:         0x120,
							TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
							TransactionIndex: 0x0,
							BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
							BlockNumber:      0xacc290,
							Address:          "0xe5caef4af8780e59df925470b050fb23c43ca68c",
							Data:             "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000e029ae811464737200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000033b2e3cbfa3d80192847e1a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
							Topics: []string{
								"0x29ae811400000000000000000000000000000000000000000000000000000000",
								"0x000000000000000000000000be8e3e3618f7474f8cb1d074a26affef007e98fb",
								"0x6473720000000000000000000000000000000000000000000000000000000000",
								"0x0000000000000000000000000000000000000000033b2e3cbfa3d80192847e1a",
							},
						},
						{
							Removed:          false,
							LogIndex:         0x121,
							TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
							TransactionIndex: 0x0,
							BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
							BlockNumber:      0xacc290,
							Address:          "0xad72c532d9fe5c51292d950dd0a160c76ff3fa30",
							Data:             "0x00000000000000000000000000000000000000000000000000000000000000c8",
							Topics: []string{
								"0xc1405953cccdad6b442e266c84d66ad671e2534c6584f8e6ef92802f7ad294d5",
								"0x000000000000000000000000be8e3e3618f7474f8cb1d074a26affef007e98fb",
								"0x0000000000000000000000000000000000000000033b2e3cbfa3d80192847e1a",
								"0x0000000000000000000000001fe16de955718cfab7a44605458ab023838c2793",
							},
						},
						{
							Removed:          false,
							LogIndex:         0x122,
							TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
							TransactionIndex: 0x0,
							BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
							BlockNumber:      0xacc290,
							Address:          "0x518ba36f1ca6dfe3bb1b098b8dd0444030e79d9f",
							Data:             "0x",
							Topics: []string{
								"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
								"0x0000000000000000000000000000000000000000",
								"0x05379b307e6ae02e522fb134fad1254a4e7fbac1",
								"0x0000000000000000000000000000000000000000000000000000000000001950",
							},
						},
					},
				},
				FlattenedTraces: []*api.EthereumTransactionFlattenedTrace{
					{
						BlockNumber:      0xacc290,
						BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
						TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
						TransactionIndex: 0,
						Type:             "CALL",
						TraceType:        "CALL",
						CallType:         "CALL",
						TraceId:          "CALL_0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
						From:             "0x4823cc90c145fd6a16ab7668043dbba5ce79cdfc",
						To:               "0xdac17f958d2ee523a2206206994597c13d831ec7",
						Value:            "0",
						Gas:              0x10b1c,
						GasUsed:          0x4c91,
						Input:            "0xa9059cbb00000000000000000000000022852cdfdda5eb9b0e25d6581bdb82a156ac4c400000000000000000000000000000000000000000000000000000000162598040",
						Output:           "0x",
						Subtraces:        uint64(1),
						TraceAddress:     []uint64{},
						Status:           1,
					},
					{
						BlockNumber:      0xacc290,
						BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
						TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
						TransactionIndex: 0,
						Type:             "CALL",
						TraceType:        "CALL",
						CallType:         "CALL",
						TraceId:          "CALL_0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8_0",
						From:             "0x61c86828fd30ca479c51413abc03f0f8dcec2120",
						To:               "0xba630d3ba20502ba07975b15c719beecc8e4ebb0",
						Value:            "1",
						Gas:              0x7207e,
						GasUsed:          0x2fd4,
						Input:            "0x70a0823100000000000000000000000061c86828fd30ca479c51413abc03f0f8dcec2120",
						Output:           "0x00000000000000000000000000000000000000000000000b94174e1c4d4a9288",
						Subtraces:        uint64(0),
						TraceAddress:     []uint64{0},
						Status:           1,
					},
				},
				TokenTransfers: []*api.EthereumTokenTransfer{
					{
						TokenAddress:     "0xe5caef4af8780e59df925470b050fb23c43ca68c",
						FromAddress:      "0x98265d92b016df8758f361fb8d2f9a813c82494a",
						ToAddress:        "0x92330d8818e8a3b50f027c819fa46031ffba2c8c",
						Value:            "30431000000",
						TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
						TransactionIndex: 0x0,
						LogIndex:         0x119,
						BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
						BlockNumber:      11322000,
						TokenTransfer: &api.EthereumTokenTransfer_Erc20{
							Erc20: &api.ERC20TokenTransfer{
								FromAddress: "0x98265d92b016df8758f361fb8d2f9a813c82494a",
								ToAddress:   "0x92330d8818e8a3b50f027c819fa46031ffba2c8c",
								Value:       "30431000000",
							},
						},
					},
					{
						TokenAddress:     "0x518ba36f1ca6dfe3bb1b098b8dd0444030e79d9f",
						FromAddress:      "0x0000000000000000000000000000000000000000",
						ToAddress:        "0x05379b307e6ae02e522fb134fad1254a4e7fbac1",
						Value:            "",
						TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
						TransactionIndex: 0x0,
						LogIndex:         0x122,
						BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
						BlockNumber:      11322000,
						TokenTransfer: &api.EthereumTokenTransfer_Erc721{
							Erc721: &api.ERC721TokenTransfer{
								FromAddress: "0x0000000000000000000000000000000000000000",
								ToAddress:   "0x05379b307e6ae02e522fb134fad1254a4e7fbac1",
								TokenId:     "6480",
							},
						},
					},
				},
			},
		},
	}

	var parser Parser
	app := testapp.New(
		t,
		Module,
		fx.Populate(&parser),
	)
	defer app.Close()
	require.NotNil(parser)

	nativeBlock, err := parser.ParseNativeBlock(context.Background(), block)
	require.NoError(err)
	require.Equal(common.Blockchain_BLOCKCHAIN_ETHEREUM, nativeBlock.Blockchain)
	require.Equal(common.Network_NETWORK_ETHEREUM_MAINNET, nativeBlock.Network)
	require.Equal(ethereumTag, nativeBlock.Tag)
	require.Equal(ethereumHash, nativeBlock.Hash)
	require.Equal(ethereumParentHash, nativeBlock.ParentHash)
	require.Equal(ethereumHeight, nativeBlock.Height)
	require.Equal(ethereumParentHeight, nativeBlock.ParentHeight)
	require.Equal(testutil.MustTimestamp("2020-11-24T16:07:21Z"), nativeBlock.Timestamp)
	require.Equal(uint64(1), nativeBlock.NumTransactions)

	actual := nativeBlock.GetEthereum()
	require.NotNil(actual)
	require.Equal(expected.Header, actual.Header)
	require.Equal(expected.Transactions, actual.Transactions)
}

func TestParseEthereumBlock_PostShanghai(t *testing.T) {
	require := testutil.Require(t)

	fixtureHeaderPostShanghai := fixtures.MustReadFile("parser/ethereum/raw_block_header_post_shanghai.json")
	fixtureReceipt := fixtures.MustReadFile("parser/ethereum/raw_block_receipt.json")
	fixtureTraces := fixtures.MustReadFile("parser/ethereum/raw_block_traces.json")

	block := &api.Block{
		Blockchain: common.Blockchain_BLOCKCHAIN_ETHEREUM,
		Network:    common.Network_NETWORK_ETHEREUM_MAINNET,
		Metadata:   ethereumMetadata,
		Blobdata: &api.Block_Ethereum{
			Ethereum: &api.EthereumBlobdata{
				Header:              fixtureHeaderPostShanghai,
				TransactionReceipts: [][]byte{fixtureReceipt},
				TransactionTraces:   [][]byte{fixtureTraces},
			},
		},
	}

	var expectedHeader api.EthereumHeader
	err := fixtures.UnmarshalPB("parser/ethereum/native_block_header_post_shanghai.json", &expectedHeader)
	require.NoError(err)

	var parser Parser
	app := testapp.New(
		t,
		Module,
		fx.Populate(&parser),
	)
	defer app.Close()
	require.NotNil(parser)

	nativeBlock, err := parser.ParseNativeBlock(context.Background(), block)
	require.NoError(err)
	require.Equal(common.Blockchain_BLOCKCHAIN_ETHEREUM, nativeBlock.Blockchain)
	require.Equal(common.Network_NETWORK_ETHEREUM_MAINNET, nativeBlock.Network)
	require.Equal(ethereumTag, nativeBlock.Tag)
	require.Equal(ethereumHash, nativeBlock.Hash)
	require.Equal(ethereumParentHash, nativeBlock.ParentHash)
	require.Equal(ethereumHeight, nativeBlock.Height)
	require.Equal(ethereumParentHeight, nativeBlock.ParentHeight)
	require.Equal(testutil.MustTimestamp("2020-11-24T16:07:21Z"), nativeBlock.Timestamp)
	require.Equal(uint64(1), nativeBlock.NumTransactions)

	actual := nativeBlock.GetEthereum()
	require.NotNil(actual)
	require.Equal(&expectedHeader, actual.Header)
}

func TestParseEthereumBlock_LargeEventLogData(t *testing.T) {
	require := testutil.Require(t)

	fixtureTraces := fixtures.MustReadFile("parser/ethereum/raw_block_traces.json")
	block := &api.Block{
		Blockchain: common.Blockchain_BLOCKCHAIN_ETHEREUM,
		Network:    common.Network_NETWORK_ETHEREUM_MAINNET,
		Metadata:   ethereumMetadata,
		Blobdata: &api.Block_Ethereum{
			Ethereum: &api.EthereumBlobdata{
				Header:              fixtureHeader,
				TransactionReceipts: [][]byte{fixtureLargeLogDataReceipt},
				TransactionTraces:   [][]byte{fixtureTraces},
			},
		},
	}

	expected := &api.EthereumBlock{
		Header: &api.EthereumHeader{
			Hash:             "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
			ParentHash:       "0xb91edf64c8c47f199398050a1d18efc3b00725d866b875e340198f563a000575",
			Number:           0xacc290,
			Timestamp:        &timestamp.Timestamp{Seconds: int64(1606234041)},
			Transactions:     []string{"0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8"},
			Nonce:            "0xc83f6d8ab7e58888",
			Sha3Uncles:       "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
			LogsBloom:        "0xfdf668a334802d0164a3e3cab8f79d6bab99b9800f565fa9dea9138b2192371768c4d8f83681bb0647e07d000807499cca14bcd05d1202c180e0e2a0f2777225f4990de285aa8086d82acd2c5653c46fe8943c0e50e6521a879a5144c14f57125c064c122e730c959509992ac09588e9c648da88a6eac64805fe9132d280772abd048d16428227c6c0d8c57a460c8281e0203f8791e402cdba21c5ea0430a282a2b3a7e593a2392a2523b7961b2fd0a06752631744001311b4a9ad111d20ec7d4c2d4e02892ed5023b12126442a219ac16400e40051900d250a3b7e6adc2e13053393130810561402181040301ca492fdb24320064c43a50c42c31ea259f4820",
			TransactionsRoot: "0x8fcfe4d75266508496020675b9c3acfdf0074bf2d177c6366b40f669306310db",
			StateRoot:        "0xf7135b656a6513846894dad825c7a2403ee2f93ea9e3fe0e8cd846ba0df2fd7d",
			ReceiptsRoot:     "0x18b4e30527b17d9e1e8f0dc129c828a28a2a32b43a651b4f9302a2686f7a5963",
			Miner:            "0xd224ca0c819e8e97ba0136b3b95ceff503b79f53",
			Difficulty:       0xc7ad271a33ba1,
			TotalDifficulty:  "18930033225567982479580",
			ExtraData:        "0x7575706f6f6c2e636e2d3333",
			Size:             0xb8ec,
			GasLimit:         0xbe2d22,
			GasUsed:          0xbe252d,
			Uncles:           []string{},
		},
		Transactions: []*api.EthereumTransaction{
			{
				BlockHash:      "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
				BlockNumber:    0xacc290,
				From:           "0x4823cc90c145fd6a16ab7668043dbba5ce79cdfc",
				Gas:            0x15f90,
				GasPrice:       0x22cee4f700,
				Hash:           "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
				Input:          "0xa9059cbb00000000000000000000000022852cdfdda5eb9b0e25d6581bdb82a156ac4c400000000000000000000000000000000000000000000000000000000162598040",
				Nonce:          0x1f0,
				To:             "0xdac17f958d2ee523a2206206994597c13d831ec7",
				Index:          0,
				Value:          "10",
				Type:           uint64(0),
				BlockTimestamp: &timestamp.Timestamp{Seconds: int64(1606234041)},
				OptionalTransactionAccessList: &api.EthereumTransaction_TransactionAccessList{
					TransactionAccessList: &api.EthereumTransactionAccessList{
						AccessList: []*api.EthereumTransactionAccess{
							{
								Address: "0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae",
								StorageKeys: []string{
									"0x0000000000000000000000000000000000000000000000000000000000000003",
									"0x0000000000000000000000000000000000000000000000000000000000000007",
								},
							},
							{
								Address:     "0xbb9bc244d798123fde783fcc1c72d3bb8c189413",
								StorageKeys: []string{},
							},
						},
					},
				},
				Receipt: &api.EthereumTransactionReceipt{
					TransactionHash:   "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
					TransactionIndex:  0x0,
					BlockHash:         "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
					BlockNumber:       0xacc290,
					From:              "0x98265d92b016df8758f361fb8d2f9a813c82494a",
					To:                "0x7a250d5630b4cf539739df2c5dacb4c659f2488d",
					CumulativeGasUsed: 0xbca58c,
					EffectiveGasPrice: 0x22cee4f700,
					GasUsed:           0x1b889,
					ContractAddress:   "",
					LogsBloom:         "0x
					Root:              "",
					OptionalStatus: &api.EthereumTransactionReceipt_Status{
						Status: 1,
					},
					Logs: []*api.EthereumEventLog{
						{
							Removed:          false,
							LogIndex:         0x120,
							TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
							TransactionIndex: 0x0,
							BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
							BlockNumber:      0xacc290,
							Address:          "0xe5caef4af8780e59df925470b050fb23c43ca68c",
							Data:             "0x0000000000000000000000004c5f0f90a2d4b518afba11e22ac9b8f6b031d2040000000000000000000000004c5f0f90a2d4b518afba11e22ac9b8f6b031d2040000000000000000000000000000000000000000000000000000000000000005",
							Topics: []string{
								"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
								"0x00000000000000000000000098265d92b016df8758f361fb8d2f9a813c82494a",
								"0x00000000000000000000000092330d8818e8a3b50f027c819fa46031ffba2c8c",
							},
						},
					},
					Type: uint64(0),
				},
				FlattenedTraces: []*api.EthereumTransactionFlattenedTrace{
					{
						BlockNumber:      0xacc290,
						BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
						TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
						TransactionIndex: 0,
						Type:             "CALL",
						TraceType:        "CALL",
						CallType:         "CALL",
						TraceId:          "CALL_0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
						From:             "0x4823cc90c145fd6a16ab7668043dbba5ce79cdfc",
						To:               "0xdac17f958d2ee523a2206206994597c13d831ec7",
						Value:            "0",
						Gas:              0x10b1c,
						GasUsed:          0x4c91,
						Input:            "0xa9059cbb00000000000000000000000022852cdfdda5eb9b0e25d6581bdb82a156ac4c400000000000000000000000000000000000000000000000000000000162598040",
						Output:           "0x",
						Subtraces:        uint64(1),
						TraceAddress:     []uint64{},
						Status:           1,
					},
					{
						BlockNumber:      0xacc290,
						BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
						TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
						TransactionIndex: 0,
						Type:             "CALL",
						TraceType:        "CALL",
						CallType:         "CALL",
						TraceId:          "CALL_0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8_0",
						From:             "0x61c86828fd30ca479c51413abc03f0f8dcec2120",
						To:               "0xba630d3ba20502ba07975b15c719beecc8e4ebb0",
						Value:            "1",
						Gas:              0x7207e,
						GasUsed:          0x2fd4,
						Input:            "0x70a0823100000000000000000000000061c86828fd30ca479c51413abc03f0f8dcec2120",
						Output:           "0x00000000000000000000000000000000000000000000000b94174e1c4d4a9288",
						Subtraces:        uint64(0),
						TraceAddress:     []uint64{0},
						Status:           1,
					},
				},
			},
		},
	}

	var parser Parser
	app := testapp.New(
		t,
		Module,
		fx.Populate(&parser),
	)
	defer app.Close()
	require.NotNil(parser)

	nativeBlock, err := parser.ParseNativeBlock(context.Background(), block)
	require.NoError(err)
	require.Equal(common.Blockchain_BLOCKCHAIN_ETHEREUM, nativeBlock.Blockchain)
	require.Equal(common.Network_NETWORK_ETHEREUM_MAINNET, nativeBlock.Network)

	actual := nativeBlock.GetEthereum()
	require.NotNil(actual)
	require.Equal(expected.Header, actual.Header)
	require.Equal(expected.Transactions, actual.Transactions)
}

func TestParseEthereumBlock_EmptyStatus(t *testing.T) {
	require := testutil.Require(t)

	fixtureTraces := fixtures.MustReadFile("parser/ethereum/raw_block_traces.json")
	block := &api.Block{
		Blockchain: common.Blockchain_BLOCKCHAIN_ETHEREUM,
		Network:    common.Network_NETWORK_ETHEREUM_MAINNET,
		Metadata:   ethereumMetadata,
		Blobdata: &api.Block_Ethereum{
			Ethereum: &api.EthereumBlobdata{
				Header:              fixtureHeader,
				TransactionReceipts: [][]byte{fixtureReceiptWithoutStatus},
				TransactionTraces:   [][]byte{fixtureTraces},
			},
		},
	}

	expected := &api.EthereumBlock{
		Header: &api.EthereumHeader{
			Hash:             "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
			ParentHash:       "0xb91edf64c8c47f199398050a1d18efc3b00725d866b875e340198f563a000575",
			Number:           0xacc290,
			Timestamp:        &timestamp.Timestamp{Seconds: int64(1606234041)},
			Transactions:     []string{"0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8"},
			Nonce:            "0xc83f6d8ab7e58888",
			Sha3Uncles:       "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
			LogsBloom:        "0xfdf668a334802d0164a3e3cab8f79d6bab99b9800f565fa9dea9138b2192371768c4d8f83681bb0647e07d000807499cca14bcd05d1202c180e0e2a0f2777225f4990de285aa8086d82acd2c5653c46fe8943c0e50e6521a879a5144c14f57125c064c122e730c959509992ac09588e9c648da88a6eac64805fe9132d280772abd048d16428227c6c0d8c57a460c8281e0203f8791e402cdba21c5ea0430a282a2b3a7e593a2392a2523b7961b2fd0a06752631744001311b4a9ad111d20ec7d4c2d4e02892ed5023b12126442a219ac16400e40051900d250a3b7e6adc2e13053393130810561402181040301ca492fdb24320064c43a50c42c31ea259f4820",
			TransactionsRoot: "0x8fcfe4d75266508496020675b9c3acfdf0074bf2d177c6366b40f669306310db",
			StateRoot:        "0xf7135b656a6513846894dad825c7a2403ee2f93ea9e3fe0e8cd846ba0df2fd7d",
			ReceiptsRoot:     "0x18b4e30527b17d9e1e8f0dc129c828a28a2a32b43a651b4f9302a2686f7a5963",
			Miner:            "0xd224ca0c819e8e97ba0136b3b95ceff503b79f53",
			Difficulty:       0xc7ad271a33ba1,
			TotalDifficulty:  "18930033225567982479580",
			ExtraData:        "0x7575706f6f6c2e636e2d3333",
			Size:             0xb8ec,
			GasLimit:         0xbe2d22,
			GasUsed:          0xbe252d,
			Uncles:           []string{},
		},
		Transactions: []*api.EthereumTransaction{
			{
				BlockHash:      "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
				BlockNumber:    0xacc290,
				From:           "0x4823cc90c145fd6a16ab7668043dbba5ce79cdfc",
				Gas:            0x15f90,
				GasPrice:       0x22cee4f700,
				Hash:           "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
				Input:          "0xa9059cbb00000000000000000000000022852cdfdda5eb9b0e25d6581bdb82a156ac4c400000000000000000000000000000000000000000000000000000000162598040",
				Nonce:          0x1f0,
				To:             "0xdac17f958d2ee523a2206206994597c13d831ec7",
				Index:          0,
				Value:          "10",
				Type:           uint64(0),
				BlockTimestamp: &timestamp.Timestamp{Seconds: int64(1606234041)},
				OptionalTransactionAccessList: &api.EthereumTransaction_TransactionAccessList{
					TransactionAccessList: &api.EthereumTransactionAccessList{
						AccessList: []*api.EthereumTransactionAccess{
							{
								Address: "0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae",
								StorageKeys: []string{
									"0x0000000000000000000000000000000000000000000000000000000000000003",
									"0x0000000000000000000000000000000000000000000000000000000000000007",
								},
							},
							{
								Address:     "0xbb9bc244d798123fde783fcc1c72d3bb8c189413",
								StorageKeys: []string{},
							},
						},
					},
				},
				Receipt: &api.EthereumTransactionReceipt{
					TransactionHash:   "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
					TransactionIndex:  0x0,
					BlockHash:         "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
					BlockNumber:       0xacc290,
					From:              "0x98265d92b016df8758f361fb8d2f9a813c82494a",
					To:                "0x7a250d5630b4cf539739df2c5dacb4c659f2488d",
					CumulativeGasUsed: 0xbca58c,
					EffectiveGasPrice: 0x22cee4f700,
					GasUsed:           0x1b889,
					ContractAddress:   "",
					LogsBloom:         "0x00200000000000000000000080000000000080000200000000010000000000000000000000000000000000000000000002000000080000000000000000200001000000000000000010000008000000200000000000400000000000000000000000000000000000000000000000000000000000002000040000000010000000000000000000000000004000000000000000002000000000088000004000000000020000000000000000000000000000000400000000000000000000000000800000000002000001000000000000000000000000000000001000000002000020000010200000000000000000000000000000000000000000000000008004000000",
					Root:              "",
					OptionalStatus:    nil,
					Logs:              []*api.EthereumEventLog{},
					Type:              uint64(0),
				},
				FlattenedTraces: []*api.EthereumTransactionFlattenedTrace{
					{
						BlockNumber:      0xacc290,
						BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
						TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
						TransactionIndex: 0,
						Type:             "CALL",
						TraceType:        "CALL",
						CallType:         "CALL",
						TraceId:          "CALL_0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
						From:             "0x4823cc90c145fd6a16ab7668043dbba5ce79cdfc",
						To:               "0xdac17f958d2ee523a2206206994597c13d831ec7",
						Value:            "0",
						Gas:              0x10b1c,
						GasUsed:          0x4c91,
						Input:            "0xa9059cbb00000000000000000000000022852cdfdda5eb9b0e25d6581bdb82a156ac4c400000000000000000000000000000000000000000000000000000000162598040",
						Output:           "0x",
						Subtraces:        uint64(1),
						TraceAddress:     []uint64{},
						Status:           1,
					},
					{
						BlockNumber:      0xacc290,
						BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
						TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
						TransactionIndex: 0,
						Type:             "CALL",
						TraceType:        "CALL",
						CallType:         "CALL",
						TraceId:          "CALL_0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8_0",
						From:             "0x61c86828fd30ca479c51413abc03f0f8dcec2120",
						To:               "0xba630d3ba20502ba07975b15c719beecc8e4ebb0",
						Value:            "1",
						Gas:              0x7207e,
						GasUsed:          0x2fd4,
						Input:            "0x70a0823100000000000000000000000061c86828fd30ca479c51413abc03f0f8dcec2120",
						Output:           "0x00000000000000000000000000000000000000000000000b94174e1c4d4a9288",
						Subtraces:        uint64(0),
						TraceAddress:     []uint64{0},
						Status:           1,
					},
				},
			},
		},
	}

	var parser Parser
	app := testapp.New(
		t,
		Module,
		fx.Populate(&parser),
	)
	defer app.Close()
	require.NotNil(parser)

	nativeBlock, err := parser.ParseNativeBlock(context.Background(), block)
	require.NoError(err)
	require.Equal(common.Blockchain_BLOCKCHAIN_ETHEREUM, nativeBlock.Blockchain)
	require.Equal(common.Network_NETWORK_ETHEREUM_MAINNET, nativeBlock.Network)

	actual := nativeBlock.GetEthereum()
	require.NotNil(actual)
	require.Equal(expected.Header, actual.Header)
	require.Equal(expected.Transactions, actual.Transactions)
}

func TestParseEthereumBlock_InvalidChain(t *testing.T) {
	require := testutil.Require(t)

	var parser Parser
	app := testapp.New(
		t,
		Module,
		fx.Populate(&parser),
	)
	defer app.Close()
	require.NotNil(parser)

	block := &api.Block{
		Metadata: ethereumMetadata,
		Blobdata: &api.Block_Ethereum{
			Ethereum: &api.EthereumBlobdata{
				Header: fixtureHeader,
			},
		},
	}

	_, err := parser.ParseNativeBlock(context.Background(), block)
	require.Error(err)
}

func TestParseEthereumBlock_InvalidHeader(t *testing.T) {
	require := testutil.Require(t)

	block := &api.Block{
		Blockchain: common.Blockchain_BLOCKCHAIN_ETHEREUM,
		Network:    common.Network_NETWORK_ETHEREUM_MAINNET,
		Metadata:   ethereumMetadata,
		Blobdata: &api.Block_Ethereum{
			Ethereum: &api.EthereumBlobdata{
				Header: fixtureInvalidHeader,
			},
		},
	}

	var parser Parser
	app := testapp.New(
		t,
		Module,
		fx.Populate(&parser),
	)
	defer app.Close()
	require.NotNil(parser)

	_, err := parser.ParseNativeBlock(context.Background(), block)
	require.Error(err)
	require.Contains(err.Error(), "Field validation for 'Hash' failed")
	require.Contains(err.Error(), "Field validation for 'Timestamp' failed")
	require.NotContains(err.Error(), "Field validation for 'Transactions' failed")
}

func TestParseEthereumBlock_BlockZero(t *testing.T) {
	require := testutil.Require(t)

	block := &api.Block{
		Blockchain: common.Blockchain_BLOCKCHAIN_ETHEREUM,
		Network:    common.Network_NETWORK_ETHEREUM_MAINNET,
		Metadata:   ethereumMetadata,
		Blobdata: &api.Block_Ethereum{
			Ethereum: &api.EthereumBlobdata{
				Header: fixtureHeaderOfBlockZero,
			},
		},
	}

	var parser Parser
	app := testapp.New(
		t,
		Module,
		fx.Populate(&parser),
	)
	defer app.Close()
	require.NotNil(parser)

	_, err := parser.ParseNativeBlock(context.Background(), block)
	require.NoError(err)
}

func TestParseEthereumBlock_InvalidTransactionReceipt(t *testing.T) {
	require := testutil.Require(t)

	fixtureTraces := fixtures.MustReadFile("parser/ethereum/raw_block_traces.json")
	block := &api.Block{
		Blockchain: common.Blockchain_BLOCKCHAIN_ETHEREUM,
		Network:    common.Network_NETWORK_ETHEREUM_MAINNET,
		Metadata:   ethereumMetadata,
		Blobdata: &api.Block_Ethereum{
			Ethereum: &api.EthereumBlobdata{
				Header:              fixtureHeader,
				TransactionReceipts: [][]byte{fixtureOrphanedReceipt},
				TransactionTraces:   [][]byte{fixtureTraces},
			},
		},
	}

	var parser Parser
	app := testapp.New(
		t,
		Module,
		fx.Populate(&parser),
	)
	defer app.Close()
	require.NotNil(parser)

	_, err := parser.ParseNativeBlock(context.Background(), block)
	require.Error(err)
	require.Contains(err.Error(), "unexpected transaction receipt")
}

func TestParseEthereumBlock_PostLondon(t *testing.T) {
	require := testutil.Require(t)

	block := &api.Block{
		Blockchain: common.Blockchain_BLOCKCHAIN_ETHEREUM,
		Network:    common.Network_NETWORK_ETHEREUM_MAINNET,
		Metadata:   ethereumMetadataPostLondon,
		Blobdata: &api.Block_Ethereum{
			Ethereum: &api.EthereumBlobdata{
				Header:              fixtureHeaderPostLondon,
				TransactionReceipts: [][]byte{fixtureReceiptPostLondon},
				TransactionTraces:   [][]byte{fixtureTracesPostLondon},
			},
		},
	}

	expected := &api.EthereumBlock{
		Header: &api.EthereumHeader{
			Hash:             "0x75ba53b1d5e77b849c669880a4c1bb758a3ffefe9410c6bc1c61306312c9ee61",
			ParentHash:       "0x938e07a85b9903c5ddb49181b6bf6a35352f7726c4bd879ab8543b7e68000db2",
			Number:           0xc5d824,
			Timestamp:        &timestamp.Timestamp{Seconds: int64(1628179593)},
			Transactions:     []string{"0x256697702d7a60ef603e5261d6bc8f1916de05bebafa79e8519e2e360d02bfa2"},
			Nonce:            "0x2682202d6780632a",
			Sha3Uncles:       "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
			LogsBloom:        "0x
			TransactionsRoot: "0xa51bb99d8781b463f59eee11c403a7a03ecc0154a52745ade4faec521fa9cb7d",
			StateRoot:        "0x5cb53f982489f776f134c40653d781eb62c54a185ad02a2733fae41c7961c279",
			ReceiptsRoot:     "0xa0511bd1e7aba087b4c722d666265d805b1e24263b36c3d2423013b944163566",
			Miner:            "0x829bd824b016326a401d083b33d092293333a830",
			Difficulty:       0x1ac98fe2d7d4a9,
			TotalDifficulty:  "28501453091280406915928",
			ExtraData:        "0xe4b883e5bda9e7a59ee4bb99e9b1bc000b21",
			Size:             0x1f0af,
			GasLimit:         0x1aae90d,
			GasUsed:          0x1a3e6ec,
			OptionalBaseFeePerGas: &api.EthereumHeader_BaseFeePerGas{
				BaseFeePerGas: 0x1265627422,
			},
			Uncles: []string{},
		},
		Transactions: []*api.EthereumTransaction{
			{
				BlockHash:      "0x75ba53b1d5e77b849c669880a4c1bb758a3ffefe9410c6bc1c61306312c9ee61",
				BlockNumber:    0xc5d824,
				From:           "0x94dd7d29aecc6cfba801fd95becc2f9808bcdf7d",
				Gas:            0x12f7f,
				GasPrice:       0x1353cd9c22,
				Hash:           "0x256697702d7a60ef603e5261d6bc8f1916de05bebafa79e8519e2e360d02bfa2",
				Input:          "0x",
				Nonce:          0x8,
				To:             "0x8b0e42f366ba502d787bb134478adfae966c8798",
				Index:          0x177,
				Value:          "1",
				Type:           uint64(2),
				BlockTimestamp: &timestamp.Timestamp{Seconds: int64(1628179593)},
				OptionalMaxFeePerGas: &api.EthereumTransaction_MaxFeePerGas{
					MaxFeePerGas: 0x1e5d85f6cc,
				},
				OptionalMaxPriorityFeePerGas: &api.EthereumTransaction_MaxPriorityFeePerGas{
					MaxPriorityFeePerGas: 0xee6b2800,
				},
				OptionalPriorityFeePerGas: &api.EthereumTransaction_PriorityFeePerGas{
					PriorityFeePerGas: 0xee6b2800,
				},
				OptionalTransactionAccessList: &api.EthereumTransaction_TransactionAccessList{
					TransactionAccessList: &api.EthereumTransactionAccessList{
						AccessList: []*api.EthereumTransactionAccess{
							{
								Address: "0xde0b295669a9fd93d5f28d9ec68e40f4cb697bae",
								StorageKeys: []string{
									"0x0000000000000000000000000000000000000000000000000000000000000004",
									"0x0000000000000000000000000000000000000000000000000000000000000002",
								},
							},
						},
					},
				},
				Receipt: &api.EthereumTransactionReceipt{
					TransactionHash:   "0x256697702d7a60ef603e5261d6bc8f1916de05bebafa79e8519e2e360d02bfa2",
					TransactionIndex:  375,
					BlockHash:         "0x75ba53b1d5e77b849c669880a4c1bb758a3ffefe9410c6bc1c61306312c9ee61",
					BlockNumber:       12965924,
					From:              "0x94dd7d29aecc6cfba801fd95becc2f9808bcdf7d",
					To:                "0x8b0e42f366ba502d787bb134478adfae966c8798",
					CumulativeGasUsed: 121698,
					GasUsed:           46997,
					EffectiveGasPrice: 0x1353cd9c22,
					ContractAddress:   "",
					LogsBloom:         "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
					Root:              "",
					OptionalStatus: &api.EthereumTransactionReceipt_Status{
						Status: 1,
					},
					Type: uint64(2),
					Logs: []*api.EthereumEventLog{
						{
							Removed:          false,
							LogIndex:         0x2,
							TransactionHash:  "0x256697702d7a60ef603e5261d6bc8f1916de05bebafa79e8519e2e360d02bfa2",
							TransactionIndex: 0x177,
							BlockHash:        "0x75ba53b1d5e77b849c669880a4c1bb758a3ffefe9410c6bc1c61306312c9ee61",
							BlockNumber:      0xc5d824,
							Address:          "0x8b0e42f366ba502d787bb134478adfae966c8798",
							Data:             "0x0000000000000000000000000000000000000000000000000000000000000000",
							Topics: []string{
								"0xf382320ca3328eca73b923efa9b8df7bd6ea405d6d4fa855a00db3ee406361c9",
							},
						},
					},
				},
				FlattenedTraces: []*api.EthereumTransactionFlattenedTrace{
					{
						BlockNumber:      0xc5d824,
						BlockHash:        "0x75ba53b1d5e77b849c669880a4c1bb758a3ffefe9410c6bc1c61306312c9ee61",
						TransactionHash:  "0x256697702d7a60ef603e5261d6bc8f1916de05bebafa79e8519e2e360d02bfa2",
						TransactionIndex: 0x177,
						Type:             "CALL",
						TraceType:        "CALL",
						CallType:         "CALL",
						TraceId:          "CALL_0x256697702d7a60ef603e5261d6bc8f1916de05bebafa79e8519e2e360d02bfa2",
						From:             "0x94dd7d29aecc6cfba801fd95becc2f9808bcdf7d",
						To:               "0x8b0e42f366ba502d787bb134478adfae966c8798",
						Value:            "0",
						Gas:              0xdacf,
						GasUsed:          0x75a5,
						Input:            "0x2e1a7d4d00000000000000000000000000000000000000000000000014d1120d7b160000",
						Output:           "0x",
						Subtraces:        uint64(0),
						TraceAddress:     []uint64{},
						Status:           1,
					},
				},
			},
		},
	}

	var parser Parser
	app := testapp.New(
		t,
		Module,
		fx.Populate(&parser),
	)
	defer app.Close()
	require.NotNil(parser)

	nativeBlock, err := parser.ParseNativeBlock(context.Background(), block)
	require.NoError(err)
	require.Equal(common.Blockchain_BLOCKCHAIN_ETHEREUM, nativeBlock.Blockchain)
	require.Equal(common.Network_NETWORK_ETHEREUM_MAINNET, nativeBlock.Network)

	actual := nativeBlock.GetEthereum()
	require.NotNil(actual)
	require.Equal(expected.Header, actual.Header)
	require.Equal(expected.Transactions, actual.Transactions)
}

func TestParseEthereumBlock_PostLondon_LegacyTransaction(t *testing.T) {
	require := testutil.Require(t)

	block := &api.Block{
		Blockchain: common.Blockchain_BLOCKCHAIN_ETHEREUM,
		Network:    common.Network_NETWORK_ETHEREUM_MAINNET,
		Metadata: &api.BlockMetadata{
			Tag:        ethereumTag,
			Hash:       "0x6d39744339b781ecaa5a86732c8db2b81a24ddb2f0b74f0e08e39ccab765abdb",
			ParentHash: "0x3dbb07f300342df11c0db6ada1720be2a2945c4e3f1e31ce47ad03286049d6b2",
			Height:     0xce19cf,
		},
		Blobdata: &api.Block_Ethereum{
			Ethereum: &api.EthereumBlobdata{
				Header:              fixtureHeaderPostLondon_Legacy,
				TransactionReceipts: [][]byte{fixtureReceiptPostLondon_Legacy},
				TransactionTraces:   [][]byte{fixtureTracesPostLondon},
			},
		},
	}

	expected := &api.EthereumBlock{
		Header: &api.EthereumHeader{
			Hash:             "0x6d39744339b781ecaa5a86732c8db2b81a24ddb2f0b74f0e08e39ccab765abdb",
			ParentHash:       "0x3dbb07f300342df11c0db6ada1720be2a2945c4e3f1e31ce47ad03286049d6b2",
			Number:           0xce19cf,
			Timestamp:        &timestamp.Timestamp{Seconds: int64(1635441253)},
			Transactions:     []string{"0x389fc3e9b76a2a873f3bd6068286cc0f60b4a39791d9c55a36f91887d5b69106"},
			Nonce:            "0x2682202d6780632a",
			Sha3Uncles:       "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
			LogsBloom:        "0x0",
			TransactionsRoot: "0xa51bb99d8781b463f59eee11c403a7a03ecc0154a52745ade4faec521fa9cb7d",
			StateRoot:        "0x5cb53f982489f776f134c40653d781eb62c54a185ad02a2733fae41c7961c279",
			ReceiptsRoot:     "0xa0511bd1e7aba087b4c722d666265d805b1e24263b36c3d2423013b944163566",
			Miner:            "0x829bd824b016326a401d083b33d092293333a830",
			Difficulty:       0x1ac98fe2d7d4a9,
			TotalDifficulty:  "28501453091280406915928",
			ExtraData:        "0xe4b883e5bda9e7a59ee4bb99e9b1bc000b21",
			Size:             0x1f0af,
			GasLimit:         0x1aae90d,
			GasUsed:          0x1a3e6ec,
			OptionalBaseFeePerGas: &api.EthereumHeader_BaseFeePerGas{
				BaseFeePerGas: 0x2d920f77e3,
			},
			Uncles: []string{},
		},
		Transactions: []*api.EthereumTransaction{
			{
				BlockHash:      "0x6d39744339b781ecaa5a86732c8db2b81a24ddb2f0b74f0e08e39ccab765abdb",
				BlockNumber:    0xce19cf,
				From:           "0xb816e619cc051fb1e1ddc10d6574456741105fea",
				Gas:            0x12f7f,
				GasPrice:       0x2dc3b2e7ae,
				Hash:           "0x389fc3e9b76a2a873f3bd6068286cc0f60b4a39791d9c55a36f91887d5b69106",
				Input:          "0x",
				Nonce:          0x8,
				To:             "0x8b0e42f366ba502d787bb134478adfae966c8798",
				Index:          0xb3,
				Value:          "0",
				Type:           uint64(0),
				BlockTimestamp: &timestamp.Timestamp{Seconds: int64(1635441253)},
				OptionalPriorityFeePerGas: &api.EthereumTransaction_PriorityFeePerGas{
					PriorityFeePerGas: 0x31a36fcb,
				},
				Receipt: &api.EthereumTransactionReceipt{
					TransactionHash:   "0x389fc3e9b76a2a873f3bd6068286cc0f60b4a39791d9c55a36f91887d5b69106",
					TransactionIndex:  0xb3,
					BlockHash:         "0x6d39744339b781ecaa5a86732c8db2b81a24ddb2f0b74f0e08e39ccab765abdb",
					BlockNumber:       0xce19cf,
					From:              "0x94dd7d29aecc6cfba801fd95becc2f9808bcdf7d",
					To:                "0x8b0e42f366ba502d787bb134478adfae966c8798",
					CumulativeGasUsed: 121698,
					GasUsed:           46997,
					EffectiveGasPrice: 0x2dc3b2e7ae,
					ContractAddress:   "",
					LogsBloom:         "0x0",
					Root:              "",
					OptionalStatus: &api.EthereumTransactionReceipt_Status{
						Status: 1,
					},
					Type: uint64(0),
					Logs: []*api.EthereumEventLog{
						{
							Removed:          false,
							LogIndex:         0x2,
							TransactionHash:  "0x389fc3e9b76a2a873f3bd6068286cc0f60b4a39791d9c55a36f91887d5b69106",
							TransactionIndex: 0xb3,
							BlockHash:        "0x6d39744339b781ecaa5a86732c8db2b81a24ddb2f0b74f0e08e39ccab765abdb",
							BlockNumber:      0xce19cf,
							Address:          "0x8b0e42f366ba502d787bb134478adfae966c8798",
							Data:             "0x0000000000000000000000000000000000000000000000000000000000000000",
							Topics: []string{
								"0xf382320ca3328eca73b923efa9b8df7bd6ea405d6d4fa855a00db3ee406361c9",
							},
						},
					},
				},
				FlattenedTraces: []*api.EthereumTransactionFlattenedTrace{
					{
						BlockNumber:      0xce19cf,
						BlockHash:        "0x6d39744339b781ecaa5a86732c8db2b81a24ddb2f0b74f0e08e39ccab765abdb",
						TransactionHash:  "0x389fc3e9b76a2a873f3bd6068286cc0f60b4a39791d9c55a36f91887d5b69106",
						TransactionIndex: 0xb3,
						Type:             "CALL",
						TraceType:        "CALL",
						CallType:         "CALL",
						TraceId:          "CALL_0x389fc3e9b76a2a873f3bd6068286cc0f60b4a39791d9c55a36f91887d5b69106",
						From:             "0x94dd7d29aecc6cfba801fd95becc2f9808bcdf7d",
						To:               "0x8b0e42f366ba502d787bb134478adfae966c8798",
						Value:            "0",
						Gas:              0xdacf,
						GasUsed:          0x75a5,
						Input:            "0x2e1a7d4d00000000000000000000000000000000000000000000000014d1120d7b160000",
						Output:           "0x",
						Subtraces:        uint64(0),
						TraceAddress:     []uint64{},
						Status:           1,
					},
				},
			},
		},
	}

	var parser Parser
	app := testapp.New(
		t,
		Module,
		fx.Populate(&parser),
	)
	defer app.Close()
	require.NotNil(parser)

	nativeBlock, err := parser.ParseNativeBlock(context.Background(), block)
	require.NoError(err)
	require.Equal(common.Blockchain_BLOCKCHAIN_ETHEREUM, nativeBlock.Blockchain)
	require.Equal(common.Network_NETWORK_ETHEREUM_MAINNET, nativeBlock.Network)
	require.Equal("0x6d39744339b781ecaa5a86732c8db2b81a24ddb2f0b74f0e08e39ccab765abdb", nativeBlock.Hash)
	require.Equal(uint64(0xce19cf), nativeBlock.Height)

	actual := nativeBlock.GetEthereum()
	require.NotNil(actual)
	require.Equal(expected.Header, actual.Header)
	require.Equal(expected.Transactions, actual.Transactions)
}

func TestParseEthereumBlock_FlattenedTraces(t *testing.T) {
	require := testutil.Require(t)

	fixtureReceipt := fixtures.MustReadFile("parser/ethereum/raw_block_receipt.json")
	block := &api.Block{
		Blockchain: common.Blockchain_BLOCKCHAIN_ETHEREUM,
		Network:    common.Network_NETWORK_ETHEREUM_MAINNET,
		Metadata:   ethereumMetadata,
		Blobdata: &api.Block_Ethereum{
			Ethereum: &api.EthereumBlobdata{
				Header:              fixtureHeader,
				TransactionReceipts: [][]byte{fixtureReceipt},
				TransactionTraces:   [][]byte{fixtureNestedTraces},
			},
		},
	}

	expectedFlattenedTraces := []*api.EthereumTransactionFlattenedTrace{
		{
			BlockNumber:      0xacc290,
			BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
			TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
			TransactionIndex: 0,
			Type:             "CALL",
			TraceType:        "CALL",
			CallType:         "CALL",
			TraceId:          "CALL_0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
			From:             "0x4823cc90c145fd6a16ab7668043dbba5ce79cdfc",
			To:               "0xdac17f958d2ee523a2206206994597c13d831ec7",
			Value:            "0",
			Gas:              0x10b1c,
			GasUsed:          0x4c91,
			Input:            "0xa9059cbb00000000000000000000000022852cdfdda5eb9b0e25d6581bdb82a156ac4c400000000000000000000000000000000000000000000000000000000162598040",
			Output:           "0x",
			Subtraces:        uint64(3),
			TraceAddress:     []uint64{},
			Status:           1,
		},
		{
			BlockNumber:      0xacc290,
			BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
			TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
			TransactionIndex: 0,
			Type:             "CALL",
			TraceType:        "CALL",
			CallType:         "CALL",
			TraceId:          "CALL_0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8_0",
			From:             "0x61c86828fd30ca479c51413abc03f0f8dcec2120",
			To:               "0xba630d3ba20502ba07975b15c719beecc8e4ebb0",
			Value:            "1",
			Gas:              0x7207e,
			GasUsed:          0x2fd4,
			Input:            "0x70a0823100000000000000000000000061c86828fd30ca479c51413abc03f0f8dcec2120",
			Output:           "0x00000000000000000000000000000000000000000000000b94174e1c4d4a9288",
			Subtraces:        uint64(0),
			TraceAddress:     []uint64{0},
			Status:           1,
		},
		{
			BlockNumber:      0xacc290,
			BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
			TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
			TransactionIndex: 0,
			Type:             "CALL",
			TraceType:        "CALL",
			CallType:         "CALL",
			TraceId:          "CALL_0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8_1",
			From:             "0x7be8076f4ea4a4ad08075c2508e481d6c946d12b",
			To:               "0x017a09f0fa471a4e4eb857070938b3684ac43f47",
			Value:            "0",
			Gas:              0x90477,
			GasUsed:          0x83854,
			Input:            "0x1",
			Output:           "0x0000000000000000000000000000000000000000000000000000000000000001",
			Subtraces:        uint64(1),
			TraceAddress:     []uint64{1},
			Status:           1,
		},
		{
			BlockNumber:      0xacc290,
			BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
			TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
			TransactionIndex: 0,
			Type:             "DELEGATECALL",
			TraceType:        "CALL",
			CallType:         "DELEGATECALL",
			TraceId:          "CALL_0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8_1_0",
			From:             "0x017a09f0fa471a4e4eb857070938b3684ac43f47",
			To:               "0xf9e266af4bca5890e2781812cc6a6e89495a79f2",
			Value:            "0",
			Gas:              0x85899,
			GasUsed:          0x80594,
			Input:            "0x1b",
			Output:           "0x",
			Subtraces:        uint64(0),
			TraceAddress:     []uint64{1, 0},
			Status:           1,
		},
		{
			BlockNumber:      0xacc290,
			BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
			TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
			TransactionIndex: 0,
			Type:             "SELFDESTRUCT",
			TraceType:        "SELFDESTRUCT",
			CallType:         "",
			TraceId:          "SELFDESTRUCT_0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8_2",
			From:             "0x7be8076f4ea4a4ad08075c2508e481d6c946d12b",
			To:               "0xa5409ec958c83c3f309868babaca7c86dcb077c1",
			Value:            "0",
			Gas:              0x140822,
			GasUsed:          0x2613,
			Input:            "0x97204d8e",
			Output:           "0x000000000000000000000000f9e266af4bca5890e2781812cc6a6e89495a79f2",
			Subtraces:        uint64(0),
			TraceAddress:     []uint64{2},
			Status:           1,
		},
	}

	var parser Parser
	app := testapp.New(
		t,
		Module,
		fx.Populate(&parser),
	)
	defer app.Close()
	require.NotNil(parser)

	nativeBlock, err := parser.ParseNativeBlock(context.Background(), block)
	require.NoError(err)
	require.Equal(common.Blockchain_BLOCKCHAIN_ETHEREUM, nativeBlock.Blockchain)
	require.Equal(common.Network_NETWORK_ETHEREUM_MAINNET, nativeBlock.Network)

	actual := nativeBlock.GetEthereum()
	require.NotNil(actual)

	transaction := actual.Transactions[0]
	require.Equal(expectedFlattenedTraces, transaction.FlattenedTraces)
}

func TestParseEthereumBlock_FlattenedTracesWithParentError(t *testing.T) {
	require := testutil.Require(t)

	fixtureReceipt := fixtures.MustReadFile("parser/ethereum/raw_block_receipt.json")
	block := &api.Block{
		Blockchain: common.Blockchain_BLOCKCHAIN_ETHEREUM,
		Network:    common.Network_NETWORK_ETHEREUM_MAINNET,
		Metadata:   ethereumMetadata,
		Blobdata: &api.Block_Ethereum{
			Ethereum: &api.EthereumBlobdata{
				Header:              fixtureHeader,
				TransactionReceipts: [][]byte{fixtureReceipt},
				TransactionTraces:   [][]byte{fixtureNestedTracesWithParentError},
			},
		},
	}

	expectedFlattenedTraces := []*api.EthereumTransactionFlattenedTrace{
		{
			BlockNumber:      0xacc290,
			BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
			TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
			TransactionIndex: 0,
			Type:             "CALL",
			TraceType:        "CALL",
			CallType:         "CALL",
			TraceId:          "CALL_0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
			Error:            "execution reverted",
			From:             "0x4823cc90c145fd6a16ab7668043dbba5ce79cdfc",
			To:               "0xdac17f958d2ee523a2206206994597c13d831ec7",
			Value:            "0",
			Gas:              0x10b1c,
			GasUsed:          0x4c91,
			Input:            "0xa9059cbb00000000000000000000000022852cdfdda5eb9b0e25d6581bdb82a156ac4c400000000000000000000000000000000000000000000000000000000162598040",
			Output:           "0x",
			Subtraces:        uint64(2),
			TraceAddress:     []uint64{},
			Status:           0,
		},
		{
			BlockNumber:      0xacc290,
			BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
			TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
			TransactionIndex: 0,
			Type:             "CALL",
			TraceType:        "CALL",
			CallType:         "CALL",
			TraceId:          "CALL_0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8_0",
			Error:            "execution reverted",
			From:             "0x61c86828fd30ca479c51413abc03f0f8dcec2120",
			To:               "0xba630d3ba20502ba07975b15c719beecc8e4ebb0",
			Value:            "1",
			Gas:              0x7207e,
			GasUsed:          0x2fd4,
			Input:            "0x70a0823100000000000000000000000061c86828fd30ca479c51413abc03f0f8dcec2120",
			Output:           "0x00000000000000000000000000000000000000000000000b94174e1c4d4a9288",
			Subtraces:        uint64(0),
			TraceAddress:     []uint64{0},
			Status:           0,
		},
		{
			BlockNumber:      0xacc290,
			BlockHash:        "0xbaa42c87b7c764c548fa37e61e9764415fd4a79d7e073d4f92a456698002016b",
			TransactionHash:  "0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8",
			TransactionIndex: 0,
			Type:             "STATICCALL",
			TraceType:        "CALL",
			CallType:         "STATICCALL",
			TraceId:          "CALL_0xe67071db25331ea3a92a4e28b516c95f2d5b62b68329b70386c19e00807f51d8_1",
			Error:            "error",
			From:             "0x7be8076f4ea4a4ad08075c2508e481d6c946d12b",
			To:               "0xa5409ec958c83c3f309868babaca7c86dcb077c1",
			Value:            "0",
			Gas:              0x140822,
			GasUsed:          0x2613,
			Input:            "0x97204d8e",
			Output:           "0x000000000000000000000000f9e266af4bca5890e2781812cc6a6e89495a79f2",
			Subtraces:        uint64(0),
			TraceAddress:     []uint64{1},
			Status:           0,
		},
	}

	var parser Parser
	app := testapp.New(
		t,
		Module,
		fx.Populate(&parser),
	)
	defer app.Close()
	require.NotNil(parser)

	nativeBlock, err := parser.ParseNativeBlock(context.Background(), block)
	require.NoError(err)
	require.Equal(common.Blockchain_BLOCKCHAIN_ETHEREUM, nativeBlock.Blockchain)
	require.Equal(common.Network_NETWORK_ETHEREUM_MAINNET, nativeBlock.Network)

	actual := nativeBlock.GetEthereum()
	require.NotNil(actual)

	transaction := actual.Transactions[0]
	require.Equal(expectedFlattenedTraces, transaction.FlattenedTraces)
}

func TestParseEthereumBlock_LargeGasPrice_Mainnet(t *testing.T) {
	require := testutil.Require(t)

	block := &api.Block{
		Blockchain: common.Blockchain_BLOCKCHAIN_ETHEREUM,
		Network:    common.Network_NETWORK_ETHEREUM_MAINNET,
		Metadata:   ethereumMetadata,
		Blobdata: &api.Block_Ethereum{
			Ethereum: &api.EthereumBlobdata{
				Header: fixtureHeaderOfLargeGasPrice,
			},
		},
	}

	var parser Parser
	app := testapp.New(
		t,
		Module,
		fx.Populate(&parser),
	)
	defer app.Close()
	require.NotNil(parser)

	_, err := parser.ParseNativeBlock(context.Background(), block)
	require.Error(err)
}

func TestParseEthereumBlock_LargeGasPrice_Testnet(t *testing.T) {
	require := testutil.Require(t)

	fixtureReceipt := fixtures.MustReadFile("parser/ethereum/raw_block_receipt.json")
	fixtureTraces := fixtures.MustReadFile("parser/ethereum/raw_block_traces.json")
	block := &api.Block{
		Blockchain: common.Blockchain_BLOCKCHAIN_ETHEREUM,
		Network:    common.Network_NETWORK_ETHEREUM_GOERLI,
		Metadata:   ethereumMetadata,
		Blobdata: &api.Block_Ethereum{
			Ethereum: &api.EthereumBlobdata{
				Header:              fixtureHeaderOfLargeGasPrice,
				TransactionReceipts: [][]byte{fixtureReceipt},
				TransactionTraces:   [][]byte{fixtureTraces},
			},
		},
	}

	var parser Parser
	app := testapp.New(
		t,
		Module,
		testapp.WithBlockchainNetwork(common.Blockchain_BLOCKCHAIN_ETHEREUM, common.Network_NETWORK_ETHEREUM_GOERLI),
		fx.Populate(&parser),
	)
	defer app.Close()
	require.NotNil(parser)

	native, err := parser.ParseNativeBlock(context.Background(), block)
	require.NoError(err)
	require.NotNil(native.GetEthereum())
	require.Equal(native.Network, common.Network_NETWORK_ETHEREUM_GOERLI)
	require.Equal(native.GetEthereum().Transactions[0].GetGasPrice(), uint64(math.MaxUint64))
}

func TestParseOptimismBlock(t *testing.T) {
	require := testutil.Require(t)

	block := &api.Block{
		Blockchain: common.Blockchain_BLOCKCHAIN_OPTIMISM,
		Network:    common.Network_NETWORK_OPTIMISM_MAINNET,
		Metadata:   ethereumMetadata,
		Blobdata: &api.Block_Ethereum{
			Ethereum: &api.EthereumBlobdata{
				Header:              fixtureHeaderOptimism,
				TransactionReceipts: [][]byte{fixtureReceiptOptimism},
				TransactionTraces:   [][]byte{fixtureTracesOptimism},
			},
		},
	}

	expectedReceipts := []*api.EthereumTransactionReceipt{
		{
			TransactionHash:   "0x5e77a04531c7c107af1882d76cbff9486d0a9aa53701c30888509d4f5f2b003a",
			TransactionIndex:  0x0,
			BlockHash:         "0xbee7192e575af30420cae0c7776304ac196077ee72b048970549e4f08e875453",
			BlockNumber:       0x1,
			From:              "0x70b17c0fe982ab4a7ac17a4c25485643151a1f2d",
			To:                "0x8ce8c13d816fe6daf12d6fd9e4952e1fc88850af",
			CumulativeGasUsed: 0x3183d,
			GasUsed:           0x3183d,
			Logs: []*api.EthereumEventLog{
				{
					Removed:          false,
					LogIndex:         0x0,
					TransactionHash:  "0x5e77a04531c7c107af1882d76cbff9486d0a9aa53701c30888509d4f5f2b003a",
					TransactionIndex: 0x0,
					BlockHash:        "0xbee7192e575af30420cae0c7776304ac196077ee72b048970549e4f08e875453",
					BlockNumber:      0x1,
					Address:          "0x8ce8c13d816fe6daf12d6fd9e4952e1fc88850af",
					Data:             "0x00000000000000000000000000000000000000000000000000000000618d8837",
					Topics: []string{
						"0x0109fc6f55cf40689f02fbaad7af7fe7bbac8a3d2186600afc7d3e10cac60271",
						"0x0000000000000000000000000000000000000000000000000000000000014218",
						"0x00000000000000000000000070b17c0fe982ab4a7ac17a4c25485643151a1f2d",
					},
				},

				{
					Removed:          false,
					LogIndex:         0x1,
					TransactionHash:  "0x5e77a04531c7c107af1882d76cbff9486d0a9aa53701c30888509d4f5f2b003a",
					TransactionIndex: 0x0,
					BlockHash:        "0xbee7192e575af30420cae0c7776304ac196077ee72b048970549e4f08e875453",
					BlockNumber:      0x1,
					Address:          "0x8ce8c13d816fe6daf12d6fd9e4952e1fc88850af",
					Data:             "0x",
					Topics: []string{
						"0x92e98423f8adac6e64d0608e519fd1cefb861498385c6dee70d58fc926ddc68c",
						"0x00000000000000000000000000000000000000000000000000000000d0e3ebf0",
						"0x0000000000000000000000000000000000000000000000000000000000014218",
						"0x00000000000000000000000070b17c0fe982ab4a7ac17a4c25485643151a1f2d",
					},
				},

				{
					Removed:          false,
					LogIndex:         0x2,
					TransactionHash:  "0x5e77a04531c7c107af1882d76cbff9486d0a9aa53701c30888509d4f5f2b003a",
					TransactionIndex: 0x0,
					BlockHash:        "0xbee7192e575af30420cae0c7776304ac196077ee72b048970549e4f08e875453",
					BlockNumber:      0x1,
					Address:          "0x8ce8c13d816fe6daf12d6fd9e4952e1fc88850af",
					Data:             "0x",
					Topics: []string{
						"0xfe25c73e3b9089fac37d55c4c7efcba6f04af04cebd2fc4d6d7dbb07e1e5234f",
						"0x00000000000000000000000000000000000000000000007edc6ca0bb68348000",
					},
				},
			},
			LogsBloom: "0x
			OptionalStatus: &api.EthereumTransactionReceipt_Status{
				Status: 1,
			},
			EffectiveGasPrice: 0x1,
			OptionalL1FeeInfo: &api.EthereumTransactionReceipt_L1FeeInfo_{
				L1FeeInfo: &api.EthereumTransactionReceipt_L1FeeInfo{
					L1GasPrice:  0x1,
					L1GasUsed:   0x12c2,
					L1Fee:       0x1c23,
					L1FeeScalar: "1.5",
				},
			},
		},
	}

	var parser Parser
	app := testapp.New(
		t,
		Module,
		fx.Populate(&parser),
	)
	defer app.Close()
	require.NotNil(parser)

	nativeBlock, err := parser.ParseNativeBlock(context.Background(), block)
	require.NoError(err)
	require.Equal(common.Blockchain_BLOCKCHAIN_OPTIMISM, nativeBlock.Blockchain)
	require.Equal(common.Network_NETWORK_OPTIMISM_MAINNET, nativeBlock.Network)

	actual := nativeBlock.GetEthereum()
	require.NotNil(actual)

	require.Equal(len(expectedReceipts), len(actual.Transactions))
	for i, expectedReceipt := range expectedReceipts {
		require.Equal(expectedReceipt, actual.Transactions[i].Receipt)
	}
}

func TestParseArbitrumBlock(t *testing.T) {
	require := testutil.Require(t)

	block := &api.Block{
		Blockchain: common.Blockchain_BLOCKCHAIN_ARBITRUM,
		Network:    common.Network_NETWORK_ARBITRUM_MAINNET,
		Metadata:   ethereumMetadata,
		Blobdata: &api.Block_Ethereum{
			Ethereum: &api.EthereumBlobdata{
				Header:              fixtureHeaderArbitrum,
				TransactionReceipts: [][]byte{fixtureReceiptArbitrum},
				TransactionTraces:   [][]byte{fixtureTracesArbitrum},
			},
		},
	}

	expectedReceipts := []*api.EthereumTransactionReceipt{
		{
			TransactionHash:   "0x299e5d56538897f3c4906844a7ead0d1d17362a963010624f5dc6f13c5953225",
			TransactionIndex:  0x1,
			BlockHash:         "0x550e1099d4049e048f12c4bb6b19292bf9c6cc15f0f384003b318b9b3258b519",
			BlockNumber:       0x3938700,
			From:              "0x23be9230b9f470b94a0a5952dd40f9ef6b67344c",
			To:                "0x09f77e8a13de9a35a7231028187e9fd5db8a2acb",
			CumulativeGasUsed: 0x6b90f,
			GasUsed:           0x6b90f,
			Type:              0x2,
			Logs: []*api.EthereumEventLog{
				{
					Removed:          false,
					LogIndex:         0x0,
					TransactionHash:  "0x299e5d56538897f3c4906844a7ead0d1d17362a963010624f5dc6f13c5953225",
					TransactionIndex: 0x1,
					BlockHash:        "0x550e1099d4049e048f12c4bb6b19292bf9c6cc15f0f384003b318b9b3258b519",
					BlockNumber:      0x3938700,
					Address:          "0x09f77e8a13de9a35a7231028187e9fd5db8a2acb",
					Data:             "0x0000000000000000000000000000000000000000000000000000000000000006000000000000000000000000ff970a61a04b1ca14834a43f5de4533ebddb5cc8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000082af49447d8a07e3bd95bd0d56f35241523fbab100000000000000000000000000000000000155ee13fb4b72a6cf027b45bb6c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004b0bfb49c90c0b0f999e500000000000000000000000000000000000000000000000000000000000000000000000",
					Topics: []string{
						"0x75781255bc71c83f89f29e5a2599f2c174a562d2cd8f2e818a47f132e7280498",
						"0x00000000000000000000000023be9230b9f470b94a0a5952dd40f9ef6b67344c",
					},
				},
			},
			LogsBloom: "0x
			OptionalStatus: &api.EthereumTransactionReceipt_Status{
				Status: 1,
			},
			EffectiveGasPrice: 0x5f5e100,
			OptionalL1FeeInfo: &api.EthereumTransactionReceipt_L1FeeInfo_{
				L1FeeInfo: &api.EthereumTransactionReceipt_L1FeeInfo{
					L1GasPrice: 0,
					L1GasUsed:  0x5fa8f,
					L1Fee:      0,
				},
			},
		},
	}

	var parser Parser
	app := testapp.New(
		t,
		Module,
		fx.Populate(&parser),
	)
	defer app.Close()
	require.NotNil(parser)

	nativeBlock, err := parser.ParseNativeBlock(context.Background(), block)
	require.NoError(err)
	require.Equal(common.Blockchain_BLOCKCHAIN_ARBITRUM, nativeBlock.Blockchain)
	require.Equal(common.Network_NETWORK_ARBITRUM_MAINNET, nativeBlock.Network)

	actual := nativeBlock.GetEthereum()
	require.NotNil(actual)

	require.Equal(len(expectedReceipts), len(actual.Transactions))
	for i, expectedReceipt := range expectedReceipts {
		require.Equal(expectedReceipt, actual.Transactions[i].Receipt)
	}
}
