// (-- api-linter: core::0140::abbreviations=disabled
//     aip.dev/not-precedent: Matching the naming convention of rosetta --)

syntax = "proto3";

// The stable release for rosetta types
package coinbase.crypto.rosetta.types;
option go_package = "github.com/coinbase/chainstorage/protos/coinbase/crypto/rosetta/types";

import "google/protobuf/any.proto";

// AccountIdentifier The account_identifier uniquely identifies an account within a network. All
// fields in the account_identifier are utilized to determine this uniqueness (including the
// metadata field, if populated).
message AccountIdentifier {
  // The address may be a cryptographic public key (or some encoding of it) or a provided
  // username.
  string address = 1;
  // The sub account identifier
  SubAccountIdentifier sub_account = 2;
  // Blockchains that utilize a username model (where the address is not a derivative of a
  // cryptographic public key) should specify the public key(s) owned by the address in metadata.
  map<string, google.protobuf.Any> metadata = 3;
}

// An account may have state specific to a contract address (ERC-20 token) and/or a stake (delegated balance).
// The sub_account_identifier should specify which state (if applicable) an account instantiation refers to.
message SubAccountIdentifier {
  // The SubAccount address may be a cryptographic value or some other identifier (ex: bonded) that uniquely
  // specifies a SubAccount.
  string address = 1;
  // If the SubAccount address is not sufficient to uniquely specify a SubAccount, any other identifying
  // information can be stored here. It is important to note that two SubAccounts with identical addresses
  // but differing metadata will not be considered equal by clients.
  map<string, google.protobuf.Any> metadata = 2;
}
