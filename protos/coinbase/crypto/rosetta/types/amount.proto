// (-- api-linter: core::0140::abbreviations=disabled
//     aip.dev/not-precedent: Matching the naming convention of rosetta --)
// (-- api-linter: core::0143::standardized-codes=disabled
//     aip.dev/not-precedent: Matching the naming convention of rosetta --)
syntax = "proto3";

// The stable release for rosetta types
package coinbase.crypto.rosetta.types;
option go_package = "github.com/coinbase/chainstorage/protos/coinbase/crypto/rosetta/types";

import "google/protobuf/any.proto";

// Amount is some Value of a Currency. It is considered invalid to specify a Value without a
// Currency.
message Amount {
  // Value of the transaction in atomic units represented as an arbitrary-sized signed integer.
  // For example, 1 BTC would be represented by a value of 100000000.
  string value = 1;
  // Currency is composed of a canonical Symbol and Decimals. This Decimals value is used to
  // convert an Amount.Value from atomic units (Satoshis) to standard units (Bitcoins).
  Currency currency = 2;
  // The metadata is protocol specific metadata
  map<string, google.protobuf.Any> metadata = 3;
}

// Currency is composed of a canonical Symbol and Decimals. This Decimals value is used to convert
// an Amount.Value from atomic units (Satoshis) to standard units (Bitcoins).
message Currency {
  // Canonical symbol associated with a currency.
  string symbol = 1;
  // Number of decimal places in the standard unit representation of the amount. For example, BTC
  // has 8 decimals. Note that it is not possible to represent the value of some currency in atomic
  // units that is not base 10.
  int32 decimals = 2;
  // Any additional information related to the currency itself. For example, it would be useful to
  // populate this object with the contract address of an ERC-20 token.
  map<string, google.protobuf.Any> metadata = 3;
}
