syntax = "proto3";

package coinbase.chainstorage;

option go_package = "github.com/coinbase/chainstorage/protos/coinbase/chainstorage";

import "google/protobuf/timestamp.proto";

// One request can fetch all the needed data for a raw block in Aptos.
message AptosBlobdata {
  bytes block = 1;
}

// A block on Aptos holds transactions in chronological order (ordered by a transactions monotonically increasing `version` field)
// All blocks start with a `BlockMetadataTransaction`, and are followed by zero or more transactions.
// The next `BlockMetadataTransaction` denotes the end of the current block, and the start of the next one.
//
// The Block `height` is a strictly monotonically increasing count of the number of blocks,
// and there will never be a gap in the numbers. It is also a unique identifier: there will never be two blocks with
// the same `height`.
//
// The Genesis Transaction (version 0) is contained within the first block, which has a height of `0`.
message AptosBlock {
  AptosHeader header = 1;
  // All transactions that happened in the Block.
  repeated AptosTransaction transactions = 2;
}

message AptosHeader {
  uint64 block_height = 1;
  string block_hash = 2;
  // Every transaction in the `transactions` will have the same `timestamp` as the block.
  google.protobuf.Timestamp block_time = 5;
}

// Transaction as it happened on the chain, there are 4 types of transactions:
// - User Transaction: a user initiated transaction to interact with the chain
// - Block Metadata Transaction: transactions generated by the chain to group together transactions forming a "block"
// - State Checkpoint Transaction: transactions generated by the chain so when validator agreed on a particular global state
// - Genesis Transaction: the first transaction of the chain, with all core contract and validator information baked in
message AptosTransaction {
  uint64 version = 1;
  uint64 block_height = 2;
  google.protobuf.Timestamp timestamp = 3;

  AptosTransactionInfo info = 4;

  enum TransactionType {
    UNSPECIFIED = 0;
    GENESIS = 1;
    BLOCK_METADATA = 2;
    STATE_CHECKPOINT = 3;
    USER = 4;
    VALIDATOR = 5;
  }
  TransactionType type = 5;

  oneof txn_data {
    AptosBlockMetadataTransaction block_metadata = 100;
    AptosGenesisTransaction genesis = 101;
    AptosStateCheckpointTransaction state_checkpoint = 102;
    AptosUserTransaction user = 103;
    AptosValidatorTransaction validator = 104;
  }
}

// This is the shared transaction infor for all types of transactions.
message AptosTransactionInfo {
  // The transaction hash.
  string hash = 1;
  string state_change_hash = 2;
  string event_root_hash = 3;
  oneof optional_state_checkpoint_hash {
    string state_checkpoint_hash = 4;
  }
  uint64 gas_used = 5;
  bool success = 6;
  string vm_status = 7;
  string accumulator_root_hash = 8;
  repeated AptosWriteSetChange changes = 9;
}

message AptosWriteSetChange {
  enum Type {
    UNSPECIFIED = 0;
    DELETE_MODULE = 1;
    DELETE_RESOURCE = 2;
    DELETE_TABLE_ITEM = 3;
    WRITE_MODULE = 4;
    WRITE_RESOURCE = 5;
    WRITE_TABLE_ITEM = 6;
  }
  Type type = 1;

  oneof change {
    AptosDeleteModule delete_module = 100;
    AptosDeleteResource delete_resource = 101;
    AptosDeleteTableItem delete_table_item = 102;
    AptosWriteModule write_module = 103;
    AptosWriteResource write_resource = 104;
    AptosWriteTableItem write_table_item = 105;
  }
}

message AptosDeleteModule {
  string address = 1;
  string state_key_hash = 2;
  AptosMoveModuleId module = 3;
}

message AptosDeleteResource {
  string address = 1;
  string state_key_hash = 2;
  string resource = 3;
}

message AptosDeleteTableItem {
  string state_key_hash = 1;
  string handle = 2;
  string key = 3;
  AptosDeleteTableData data = 4;
}

message AptosDeleteTableData {
  string key = 1;
  string key_type = 2;
}

message AptosWriteModule {
  string address = 1;
  string state_key_hash = 2;
  AptosMoveModuleBytecode data = 3;
}

message AptosWriteResource {
  string address = 1;
  string state_key_hash = 2;
  string type_str = 3;
  string data = 4;
}

message AptosWriteTableItem {
  string state_key_hash = 1;
  string handle = 2;
  string key = 3;
  string value = 4;
  AptosWriteTableItemData data = 5;
}

message AptosWriteTableItemData {
  string key = 1;
  string key_type = 2;
  string value = 3;
  string value_type = 4;
}

// Block metadata transaction.
message AptosBlockMetadataTransaction {
  string id = 1;
  uint64 epoch = 2;
  uint64 round = 3;
  repeated AptosEvent events = 4;
  bytes previous_block_votes_bitvec = 5;
  string proposer = 6;
  repeated uint32 failed_proposer_indices = 7;
}

message AptosEvent {
  AptosEventKey key = 1;
  uint64 sequence_number = 2;
  string type = 3;
  string data = 4;
}

message AptosEventKey {
  uint64 creation_number = 1;
  string account_address = 2;
}

// State checkpoint transaction.
// Note that this is an empty struct. All the information of state checkpoint transaction is in AptosTransactionInfo.
message AptosStateCheckpointTransaction {
}

// Genesis transaction.
message AptosGenesisTransaction {
  AptosWriteSet payload = 1;
  repeated AptosEvent events = 2;
}

message AptosWriteSet {
  enum Type {
    UNSPECIFIED = 0;
    SCRIPT_WRITE_SET = 1;
    DIRECT_WRITE_SET = 2;
  }

  Type write_set_type = 1;
  oneof write_set {
    AptosScriptWriteSet script_write_set = 100;
    AptosDirectWriteSet direct_write_set = 101;
  }
}

message AptosScriptWriteSet {
  string execute_as = 1;
  AptosScriptPayload script = 2;
}

message AptosDirectWriteSet {
  repeated AptosWriteSetChange write_set_change = 1;
  repeated AptosEvent events = 2;
}

message AptosUserTransaction {
  AptosUserTransactionRequest request = 1;
  repeated AptosEvent events = 2;
}

message AptosUserTransactionRequest {
  string sender = 1;
  uint64 sequence_number = 2;
  uint64 max_gas_amount = 3;
  uint64 gas_unit_price = 4;
  google.protobuf.Timestamp expiration_timestamp_secs = 5;
  AptosTransactionPayload payload = 6;
  AptosSignature signature = 7;
}

message AptosTransactionPayload {
  enum Type {
    UNSPECIFIED = 0;
    ENTRY_FUNCTION_PAYLOAD = 1;
    SCRIPT_PAYLOAD = 2;
    MODULE_BUNDLE_PAYLOAD = 3;
    WRITE_SET_PAYLOAD = 4;
    MULTISIG_PAYLOAD = 5;
  }

  Type type = 1;

  oneof payload {
    AptosEntryFunctionPayload entry_function_payload = 100;
    AptosScriptPayload script_payload = 101;
    AptosModuleBundlePayload module_bundle_payload = 102;
    AptosWriteSetPayload write_set_payload = 103;
    AptosMultisigPayload multisig_payload = 104;
  }
}

message AptosEntryFunctionPayload {
  AptosEntryFunctionId function = 1;
  repeated string type_arguments = 2;
  repeated bytes arguments = 3;
}

message AptosEntryFunctionId {
  AptosMoveModuleId module = 1;
  string function_name = 2;
}

message AptosMoveModuleId {
  string address = 1;
  string name = 2;
}

message AptosScriptPayload {
  AptosMoveScriptBytecode code = 1;
  repeated string type_arguments = 2;
  repeated bytes arguments = 3;
}

message AptosMoveScriptBytecode {
  string bytecode = 1;
  AptosMoveFunction abi = 2;
}

message AptosMoveFunction {
  enum Type {
    UNSPECIFIED = 0;
    PRIVATE = 1;
    PUBLIC = 2;
    FRIEND = 3;
  }
  string name = 1;
  Type visibility = 2;
  bool is_entry = 3;
  repeated AptosMoveFunctionGenericTypeParam generic_type_params = 4;
  repeated string params = 5;
  repeated string return = 6;
}

message AptosMoveFunctionGenericTypeParam {
  repeated string constraints = 1;
}

message AptosModuleBundlePayload {
  repeated AptosMoveModuleBytecode modules = 1;
}

message AptosMoveModuleBytecode {
  string bytecode = 1;
  AptosMoveModule abi = 2;
}

message AptosMoveModule {
  string address = 1;
  string name = 2;
  repeated AptosMoveModuleId friends = 3;
  repeated AptosMoveFunction exposed_functions = 4;
  repeated AptosMoveStruct structs = 5;
}

message AptosMoveStruct {
  string name = 1;
  bool is_native = 2;
  repeated string abilities = 3;
  repeated AptosMoveStructGenericTypeParam generic_type_params = 4;
  repeated AptosMoveStructField fields = 5;
}

message AptosMoveStructGenericTypeParam{
  repeated string constraints = 1;
}

message AptosMoveStructField {
  string name = 1;
  string type = 2;
}

message AptosWriteSetPayload {
  AptosWriteSet write_set = 1;
}

message AptosMultisigPayload {
  string multisig_address = 1;
  oneof optional_transaction_payload {
    AptosMultisigTransactionPayload transaction_payload = 2;
  }
}

message AptosMultisigTransactionPayload {
  enum Type {
    UNSPECIFIED = 0;
    ENTRY_FUNCTION_PAYLOAD = 1;
  }

  Type type = 1;

  oneof payload {
    AptosEntryFunctionPayload entry_function_payload = 100;
  }
}

message AptosSignature {
  enum Type {
    UNSPECIFIED = 0;
    ED25519 = 1;
    MULTI_ED25519 = 2;
    MULTI_AGENT = 3;
    FEE_PAYER = 4;
    SINGLE_SENDER = 5;
  }

  Type type = 1;
  oneof signature {
    AptosEd25519Signature ed25519 = 2;
    AptosMultiEd25519Signature multi_ed25519 = 3;
    AptosMultiAgentSignature multi_agent = 4;
    AptosFeePayerSignature fee_payer = 5;
    AptosSingleSenderSignature single_sender = 6;
  }
}

message AptosEd25519Signature {
  string public_key = 1;
  string signature = 2;
}

message AptosMultiEd25519Signature {
  repeated string public_keys = 1;
  repeated string signatures = 2;
  uint32 threshold = 3;
  string public_key_indices = 4;
}

message AptosMultiAgentSignature {
  AptosAccountSignature sender = 1;
  repeated string secondary_signer_addresses = 2;
  repeated AptosAccountSignature secondary_signers = 3;
}

message AptosFeePayerSignature {
  AptosAccountSignature sender = 1;
  repeated string secondary_signer_addresses = 2;
  repeated AptosAccountSignature secondary_signers = 3;
  AptosAccountSignature fee_payer_signer = 4;
  string fee_payer_address = 5;
}

message AptosSingleSenderSignature {
  string public_key = 1;
  string signature = 2;
}

message AptosSingleKeySignature {
  string public_key = 1;
  string signature = 2;
}

message AptosMultiKeySignature {
  repeated string public_keys = 1;
  repeated string signatures = 2;
  uint32 signatures_required = 3;
}

message AptosAccountSignature {
  enum Type {
    UNSPECIFIED = 0;
    ED25519 = 1;
    MULTI_ED25519 = 2;
    reserved 3;
    SINGLE_KEY = 4;
    MULTI_KEY = 5;
  }

  Type type = 1;
  oneof signature {
    AptosEd25519Signature ed25519 = 2;
    AptosMultiEd25519Signature multi_ed25519 = 3;
    AptosSingleKeySignature single_key = 5;
    AptosMultiKeySignature multi_key = 6;
  }
}

message AptosValidatorTransaction {
  repeated AptosEvent events = 1;
}
