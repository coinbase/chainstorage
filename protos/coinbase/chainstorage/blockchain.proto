syntax = "proto3";

package coinbase.chainstorage;

option go_package = "github.com/coinbase/chainstorage/protos/coinbase/chainstorage";

import "google/protobuf/timestamp.proto";
import "coinbase/c3/common/common.proto";
import "coinbase/crypto/rosetta/types/block.proto";
import "coinbase/crypto/rosetta/types/transaction.proto";
import "coinbase/chainstorage/blockchain_bitcoin.proto";
import "coinbase/chainstorage/blockchain_aptos.proto";
import "coinbase/chainstorage/blockchain_solana.proto";
import "coinbase/chainstorage/blockchain_rosetta.proto";
import "coinbase/chainstorage/blockchain_ethereum.proto";
import "coinbase/chainstorage/blockchain_ethereum_beacon.proto";

message Block {
  coinbase.c3.common.Blockchain blockchain = 1;
  coinbase.c3.common.Network network = 2;
  BlockMetadata metadata = 3;
  TransactionMetadata transaction_metadata = 4;
  SideChain side_chain = 5;
  oneof blobdata {
    EthereumBlobdata ethereum = 100;
    BitcoinBlobdata bitcoin = 101;
    RosettaBlobdata rosetta = 102;
    SolanaBlobdata solana = 103;
    AptosBlobdata aptos = 104;
    EthereumBeaconBlobdata ethereum_beacon = 105;
  }
}

message BlockIdentifier {
  string hash = 1;
  uint64 height = 2;
  uint32 tag = 3;
  bool skipped = 4;
  google.protobuf.Timestamp timestamp = 5;
}

message BlockMetadata {
  // Tag is a way to version the blockchain dataset. See http://go/cs-design for more details.
  uint32 tag = 1;
  // Hash of the current block.
  string hash = 2;
  // Hash of the parent block.
  string parent_hash = 3;
  // Height of the current block.
  uint64 height = 4;
  // Object key to the blob storage.
  string object_key_main = 5;
  // Height of the parent block. For most blockchains, parent_height equals to height - 1.
  uint64 parent_height = 6;
  // Skipped is applicable to certain blockchains, e.g. solana, where the abandoned blocks may make into way into the canonical chain.
  bool skipped = 7;
  // Block timestamp. Note that this attribute is only available in recent blocks.
  google.protobuf.Timestamp timestamp = 8;
}

message TransactionMetadata {
  repeated string transactions = 1;
}

enum SideChain {
  // This is default value and set for main chains
  SIDECHAIN_NONE = 0;

  SIDECHAIN_ETHEREUM_MAINNET_BEACON = 1;
  SIDECHAIN_ETHEREUM_HOLESKY_BEACON = 2;
}

message RosettaBlock {
  coinbase.crypto.rosetta.types.Block block = 1;
}

message NativeBlock {
  coinbase.c3.common.Blockchain blockchain = 1;
  coinbase.c3.common.Network network = 2;
  uint32 tag = 3;
  string hash = 4;
  string parent_hash = 5;
  uint64 height = 6;
  google.protobuf.Timestamp timestamp = 7;
  uint64 num_transactions = 8;
  uint64 parent_height = 9;
  bool skipped = 10;
  SideChain side_chain = 11;
  oneof block {
    EthereumBlock ethereum = 100;
    BitcoinBlock bitcoin = 101;
    coinbase.crypto.rosetta.types.Block rosetta = 102;
    SolanaBlock solana = 103;
    AptosBlock aptos = 104;
    SolanaBlockV2 solana_v2 = 105;
    EthereumBeaconBlock ethereum_beacon = 106;
  }
}

message NativeTransaction {
  coinbase.c3.common.Blockchain blockchain = 1;
  coinbase.c3.common.Network network = 2;
  uint32 tag = 3;
  string transaction_hash = 4;
  uint64 block_height = 5;
  string block_hash = 6;
  google.protobuf.Timestamp block_timestamp = 7;

  oneof transaction {
    EthereumTransaction ethereum = 100;
    BitcoinTransaction bitcoin = 101;
    coinbase.crypto.rosetta.types.Transaction rosetta = 102;
    SolanaTransaction solana = 103;
    AptosTransaction aptos = 104;
  }
}

message GetAccountProofResponse {
  oneof response {
    EthereumAccountStateProof ethereum = 100;
  }
}

message ValidateAccountStateRequest {
  InternalGetVerifiedAccountStateRequest account_req = 1;
  NativeBlock block = 2;
  GetAccountProofResponse account_proof = 3;
}

message InternalGetVerifiedAccountStateRequest {
  string account = 1;
  uint32 tag = 2;
  uint64 height = 3;
  string hash = 4;
  oneof extra_input {
    EthereumExtraInput ethereum = 100;
  }
}

message ValidateAccountStateResponse {
  string balance = 1;
  oneof response {
    EthereumAccountStateResponse ethereum = 100;
  }
}

message ValidateRosettaBlockRequest {
  NativeBlock native_block = 1;
}
