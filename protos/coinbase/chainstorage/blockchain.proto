syntax = "proto3";

package coinbase.chainstorage;

option go_package = "github.com/coinbase/chainstorage/protos/coinbase/chainstorage";

import "google/protobuf/timestamp.proto";
import "coinbase/c3/common/common.proto";
import "coinbase/crypto/rosetta/types/block.proto";

message Block {
  coinbase.c3.common.Blockchain blockchain = 1;
  coinbase.c3.common.Network network = 2;
  BlockMetadata metadata = 3;
  oneof blobdata {
    EthereumBlobdata ethereum = 100;
    BitcoinBlobdata bitcoin = 101;
    RosettaBlobdata rosetta = 102;
    SolanaBlobdata solana = 103;
  }
}

message BlockIdentifier {
  string hash = 1;
  uint64 height = 2;
  uint32 tag = 3;
  bool skipped = 4;
  google.protobuf.Timestamp timestamp = 5;
}

message BlockMetadata {
  // Tag is a way to version the blockchain dataset. See http://go/cs-design for more details.
  uint32 tag = 1;
  // Hash of the current block.
  string hash = 2;
  // Hash of the parent block.
  string parent_hash = 3;
  // Height of the current block.
  uint64 height = 4;
  // Object key to the blob storage.
  string object_key_main = 5;
  // Height of the parent block. For most blockchains, parent_height equals to height - 1.
  uint64 parent_height = 6;
  // Skipped is applicable to certain blockchains, e.g. solana, where the abandoned blocks may make into way into the canonical chain.
  bool skipped = 7;
  // Block timestamp. Note that this attribute is only available in recent blocks.
  google.protobuf.Timestamp timestamp = 8;
}

message EthereumBlobdata {
  bytes header = 1;
  repeated bytes transaction_receipts = 2;
  repeated bytes transaction_traces = 3;
  repeated bytes uncles = 4;
  oneof extra_data {
    PolygonBlobdata polygon = 100;
  }
}

message PolygonBlobdata {
  bytes author = 1;
}

message RosettaBlock {
  coinbase.crypto.rosetta.types.Block block = 1;
}

message NativeBlock {
  coinbase.c3.common.Blockchain blockchain = 1;
  coinbase.c3.common.Network network = 2;
  uint32 tag = 3;
  string hash = 4;
  string parent_hash = 5;
  uint64 height = 6;
  google.protobuf.Timestamp timestamp = 7;
  uint64 num_transactions = 8;
  uint64 parent_height = 9;
  bool skipped = 10;
  oneof block {
    EthereumBlock ethereum = 100;
    BitcoinBlock bitcoin = 101;
    coinbase.crypto.rosetta.types.Block rosetta = 102;
    SolanaBlock solana = 103;
  }
}

message EthereumBlock {
  EthereumHeader header = 1;
  repeated EthereumTransaction transactions = 2;
  repeated EthereumHeader uncles = 3;
}

message EthereumHeader {
  string hash = 1;
  string parent_hash = 2;
  uint64 number = 3;
  google.protobuf.Timestamp timestamp = 4;
  repeated string transactions = 5;
  string nonce = 6;
  string sha3_uncles = 7;
  string logs_bloom = 8;
  string transactions_root = 9;
  string state_root = 10;
  string receipts_root = 11;
  string miner = 12;
  uint64 difficulty = 13;
  string total_difficulty = 14;
  string extra_data = 15;
  uint64 size = 16;
  uint64 gas_limit = 17;
  uint64 gas_used = 18;
  repeated string uncles = 19;
  oneof optional_base_fee_per_gas {
    uint64 base_fee_per_gas = 20;
  }
}

message EthereumTransactionAccess {
  string address = 1;
  repeated string storage_keys = 2;
}

message EthereumTransactionAccessList {
  repeated EthereumTransactionAccess access_list = 1;
}

message EthereumTransaction {
  string block_hash = 1;
  uint64 block_number = 2;
  string from = 3;
  uint64 gas = 4;
  uint64 gas_price = 5;
  string hash = 6;
  string input = 7;
  uint64 nonce = 8;
  string to = 9;
  uint64 index = 10;
  string value = 11;
  EthereumTransactionReceipt receipt = 12;
//  EthereumTransactionTrace trace = 13;
  repeated EthereumTokenTransfer token_transfers = 14;
  uint64 type = 15;
  oneof optional_max_fee_per_gas {
    uint64 max_fee_per_gas = 16;
  }
  oneof optional_max_priority_fee_per_gas {
    uint64 max_priority_fee_per_gas = 17;
  }
  oneof optional_transaction_access_list {
    EthereumTransactionAccessList transaction_access_list = 18;
  }
  repeated EthereumTransactionFlattenedTrace flattened_traces = 19;
  google.protobuf.Timestamp block_timestamp = 20;
  oneof optional_priority_fee_per_gas {
    uint64 priority_fee_per_gas = 21;
  }
}

message EthereumTransactionReceipt {
  string transaction_hash = 1;
  uint64 transaction_index = 2;
  string block_hash = 3;
  uint64 block_number = 4;
  string from = 5;
  string to = 6;
  uint64 cumulative_gas_used = 7;
  uint64 gas_used = 8;
  string contract_address = 9;
  repeated EthereumEventLog logs = 10;
  string logs_bloom = 11;
  string root = 12;
  reserved 13;
  oneof optional_status {
    uint64 status = 14;
  }
  uint64 type = 15;
  uint64 effective_gas_price = 16;
}

message EthereumEventLog {
  bool removed = 1;
  uint64 log_index = 2;
  string transaction_hash = 3;
  uint64 transaction_index = 4;
  string block_hash = 5;
  uint64 block_number = 6;
  string address = 7;
  string data = 8;
  repeated string topics = 9;
}

message EthereumTransactionTrace {
  string error = 1;
  string type = 2;
  string from = 3;
  string to = 4;
  string value = 5;
  uint64 gas = 6;
  uint64 gas_used = 7;
  string input = 8;
  string output = 9;
  repeated EthereumTransactionTrace calls = 10;
}

message EthereumTransactionFlattenedTrace {
  string error = 1;
  string type = 2;
  string from = 3;
  string to = 4;
  string value = 5;
  uint64 gas = 6;
  uint64 gas_used = 7;
  string input = 8;
  string output = 9;
  uint64 subtraces = 10;
  repeated uint64 trace_address = 11;
  string trace_type = 12;
  string call_type = 13;
  string trace_id = 14;
  uint64 status = 15;
  string block_hash = 16;
  uint64 block_number = 17;
  string transaction_hash = 18;
  uint64 transaction_index = 19;
}

message EthereumTokenTransfer {
  string token_address = 1;
  string from_address = 2;
  string to_address = 3;
  string value = 4;
  uint64 transaction_index = 5;
  string transaction_hash = 6;
  uint64 log_index = 7;
  string block_hash = 8;
  uint64 block_number = 9;
  oneof token_transfer {
    ERC20TokenTransfer erc20 = 100;
    ERC721TokenTransfer erc721 = 101;
  }
}

message ERC20TokenTransfer {
  string from_address = 1;
  string to_address = 2;
  string value = 3;
}

message ERC721TokenTransfer {
  string from_address = 1;
  string to_address = 2;
  string token_id = 3;
}

message BitcoinBlobdata {
  bytes header = 1;
  repeated RepeatedBytes input_transactions = 2;
}

message RepeatedBytes {
  repeated bytes data = 1;
}

// BitcoinHeader https://developer.bitcoin.org/reference/rpc/getblock.html
message BitcoinHeader {
  string hash = 1;
  // uint64 confirmations = 2; // confirmations is a transient state, so not exposing
  uint64 stripped_size = 3;
  uint64 size = 4;
  uint64 weight = 5;
  uint64 height = 6;
  uint64 version = 7;
  string version_hex = 8;
  string merkle_root = 9;
  uint64 time = 10;
  uint64 median_time = 11;
  uint64 nonce = 12;
  string bits = 13;
  string difficulty = 14;
  string chain_work = 15;
  uint64 number_of_transactions = 16;
  string previous_block_hash = 17;
  string next_block_hash = 18;
  google.protobuf.Timestamp timestamp = 19;
}

// BitcoinTransaction https://developer.bitcoin.org/reference/rpc/getrawtransaction.html
message BitcoinTransaction {
  // bool in_active_chain = 1;
  string hex = 2;
  string transaction_id = 3;
  string hash = 4;
  uint64 size = 5;
  uint64 virtual_size = 6;
  uint64 weight = 7;
  uint64 version = 8;
  uint64 lock_time = 9;
  repeated BitcoinTransactionInput inputs = 10;
  repeated BitcoinTransactionOutput outputs = 11;
  string block_hash = 12;
  // uint64 confirmations = 13;
  uint64 block_time = 14;
  uint64 time = 15;
  bool is_coinbase = 16;
  uint64 index = 17;
  uint64 input_count = 18;
  uint64 output_count = 19;
  uint64 input_value = 20;
  uint64 output_value = 21;
  uint64 fee = 22;
}

message BitcoinTransactionInput {
  string coinbase = 1;
  string transaction_id = 2;
  uint64 from_output_index = 3;
  BitcoinScriptSignature script_signature = 4;
  uint64 sequence = 5;
  repeated string transaction_input_witnesses = 6;
  BitcoinTransactionOutput from_output = 7;
  uint64 index = 8;
}

message BitcoinScriptSignature {
  string assembly = 1;
  string hex = 2;
}

message BitcoinTransactionOutput {
  // double value = 1;
  uint64 index = 2;
  BitcoinScriptPublicKey script_public_key = 3;
  uint64 value = 4;
}

message BitcoinScriptPublicKey {
  string assembly = 1;
  string hex = 2;
  // uint64 required_signatures = 3; // deprecated: https://github.com/bitcoin/bitcoin/pull/20286
  string type = 4;
  // repeated string addresses = 5; // deprecated: https://github.com/bitcoin/bitcoin/pull/20286
  string address = 6;
}

message BitcoinBlock {
  BitcoinHeader header = 1;
  repeated BitcoinTransaction transactions = 2;
}

message RosettaBlobdata {
  bytes header = 1;
  repeated bytes other_transactions = 2;
}

message SolanaBlobdata {
  bytes header = 1;
}

message SolanaBlock {
  SolanaHeader header = 1;
  repeated SolanaTransaction transactions = 2;
  repeated SolanaReward rewards = 3;
}

message SolanaHeader {
  string block_hash = 1;
  string previous_block_hash = 2;
  uint64 slot = 3;
  uint64 parent_slot = 4;
  google.protobuf.Timestamp block_time = 5;
  uint64 block_height = 6;
}

message SolanaTransaction {
  string transaction_id = 1;
  SolanaTransactionPayload payload = 2;
  SolanaTransactionMeta meta = 3;
  // use int32 for `legacy` version
  int32 version = 4;
}

message SolanaTransactionMeta {
  string err = 1;
  uint64 fee = 2;
  repeated uint64 pre_balances = 3;
  repeated uint64 post_balances = 4;
  repeated SolanaTokenBalance pre_token_balances = 5;
  repeated SolanaTokenBalance post_token_balances = 6;
  repeated SolanaInnerInstruction inner_instructions = 7;
  repeated string log_messages = 8;
  repeated SolanaReward rewards = 9;
}

message SolanaTokenBalance {
  uint64 account_index = 1;
  string mint = 2;
  SolanaTokenAmount token_amount = 3;
  string owner = 4;
}

message SolanaTokenAmount {
  string amount = 1;
  uint64 decimals = 2;
  string ui_amount_string = 3;
}

message SolanaInnerInstruction {
  uint64 index = 1;
  repeated SolanaInstruction instructions = 2;
}

message SolanaReward {
  bytes pubkey = 1;
  int64 lamports = 2;
  uint64 post_balance = 3;
  string reward_type = 4;
  oneof optional_commission {
    uint64 commission = 5;
  }
}

message SolanaTransactionPayload {
  repeated string signatures = 1;
  SolanaMessage message = 2;
}

message SolanaMessage {
  SolanaMessageHeader header = 1;
  // repeated string account_keys = 2 [deprecated = true];
  string recent_block_hash = 3;
  repeated SolanaInstruction instructions = 4;
  repeated SolanaAccount accounts = 5;
}

message SolanaMessageHeader {
  uint64 num_required_signatures = 1;
  uint64 num_readonly_signed_accounts = 2;
  uint64 num_readonly_unsigned_accounts = 3;
}

message SolanaInstruction {
  uint64 program_id_index = 1;
  repeated uint64 accounts = 2;
  bytes data = 3;
  string program_id = 4;
  repeated string account_keys = 5;
}

message SolanaAccount {
  string public_key = 1;
  bool signer = 2;
  bool writable = 3;
}
