syntax = "proto3";

package coinbase.chainstorage;

option go_package = "github.com/coinbase/chainstorage/protos/coinbase/chainstorage";

import "google/protobuf/timestamp.proto";
import "coinbase/chainstorage/blockchain_ethereum.proto";

enum EthereumBeaconVersion {
  UNKNOWN = 0;
  PHASE0 = 1;
  ALTAIR = 2;
  BELLATRIX = 3;
  CAPELLA = 4;
  DENEB = 5;
}

message EthereumBeaconBlobdata {
  bytes header = 1;
  bytes block = 2;
  reserved 3;
  bytes blobs = 4;
}

message EthereumBeaconBlock {
  EthereumBeaconBlockHeader header = 1;
  EthereumBeaconBlockData block = 2;
  repeated EthereumBeaconBlob blobs = 3;
}

message EthereumBeaconBlockHeader {
  uint64 slot = 1;
  uint64 proposer_index = 2;
  string parent_root = 3;
  string state_root = 4;
  string body_root = 5;
  string signature = 6;
  string root = 7;
  uint64 epoch = 8;
}

message EthereumBeaconBlockData {
  EthereumBeaconVersion version = 1;
  uint64 slot = 2;
  uint64 proposer_index = 3;
  string parent_root = 4;
  string state_root = 5;
  string signature = 6;
  oneof block_data {
    EthereumBeaconBlockPhase0 phase0_block = 100;
    EthereumBeaconBlockAltair altair_block = 101;
    EthereumBeaconBlockBellatrix bellatrix_block = 102;
    EthereumBeaconBlockCapella capella_block = 103;
    EthereumBeaconBlockDeneb deneb_block = 104;
  }
}

message EthereumBeaconBlockPhase0 {
  string randao_reveal = 1;
  EthereumBeaconEth1Data eth1_data = 2;
}

message EthereumBeaconBlockAltair {
  string randao_reveal = 1;
  EthereumBeaconEth1Data eth1_data = 2;
}

message EthereumBeaconBlockBellatrix {
  string randao_reveal = 1;
  EthereumBeaconEth1Data eth1_data = 2;
  EthereumBeaconExecutionPayloadBellatrix execution_payload = 3;
}

message EthereumBeaconBlockCapella {
  string randao_reveal = 1;
  EthereumBeaconEth1Data eth1_data = 2;
  EthereumBeaconExecutionPayloadCapella execution_payload = 3;
}

message EthereumBeaconBlockDeneb {
  string randao_reveal = 1;
  EthereumBeaconEth1Data eth1_data = 2;
  EthereumBeaconExecutionPayloadDeneb execution_payload = 3;
  repeated string blob_kzg_commitments = 4;
}

message EthereumBeaconEth1Data {
  string deposit_root = 1;
  uint64 deposit_count = 2;
  string block_hash = 3;
}

message EthereumBeaconExecutionPayloadBellatrix {
  string parent_hash = 1;
  string fee_recipient = 2;
  string state_root = 3;
  string receipts_root = 4;
  string logs_bloom = 5;
  string prev_randao = 6;
  uint64 block_number = 7;
  uint64 gas_limit = 8;
  uint64 gas_used = 9;
  google.protobuf.Timestamp timestamp = 10;
  string extra_data = 11;
  string base_fee_per_gas = 12;
  string block_hash = 13;
  // Transactions is a list of bytes representing hex-encoded execution layer transactions.
  // To decode transaction data, transactionDecoded = geth.UnmarshalBinary(hex.DecodeString(string(transaction)))
  repeated bytes transactions = 14;
}

message EthereumBeaconExecutionPayloadCapella {
  string parent_hash = 1;
  string fee_recipient = 2;
  string state_root = 3;
  string receipts_root = 4;
  string logs_bloom = 5;
  string prev_randao = 6;
  uint64 block_number = 7;
  uint64 gas_limit = 8;
  uint64 gas_used = 9;
  google.protobuf.Timestamp timestamp = 10;
  string extra_data = 11;
  string base_fee_per_gas = 12;
  string block_hash = 13;
  // Transactions is a list of bytes representing hex-encoded execution layer transactions.
  // To decode transaction data, transactionDecoded = geth.UnmarshalBinary(hex.DecodeString(string(transaction)))
  repeated bytes transactions = 14;
  repeated EthereumWithdrawal withdrawals = 15;
}

message EthereumBeaconExecutionPayloadDeneb {
  string parent_hash = 1;
  string fee_recipient = 2;
  string state_root = 3;
  string receipts_root = 4;
  string logs_bloom = 5;
  string prev_randao = 6;
  uint64 block_number = 7;
  uint64 gas_limit = 8;
  uint64 gas_used = 9;
  google.protobuf.Timestamp timestamp = 10;
  string extra_data = 11;
  string base_fee_per_gas = 12;
  string block_hash = 13;
  // Transactions is a list of bytes representing hex-encoded execution layer transactions.
  // To decode transaction data, transactionDecoded = geth.UnmarshalBinary(hex.DecodeString(string(transaction)))
  repeated bytes transactions = 14;
  repeated EthereumWithdrawal withdrawals = 15;
  uint64 blob_gas_used  = 16;
  uint64 excess_blob_gas  = 17;
}

message EthereumBeaconBlob {
  uint64 slot = 1;
  string parent_root = 2;
  uint64 index = 3;
  bytes blob = 4;
  string kzg_commitment = 5;
  string kzg_proof = 6;
  repeated string kzg_commitment_inclusion_proof = 7;
}
